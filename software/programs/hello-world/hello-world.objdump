
/home/angelo.dalzotto/core-v-verif/cv32e40p/tests/programs/custom/hello-world/hello-world.elf:     file format elf32-littleriscv


Disassembly of section .vectors:

00000000 <__vector_start>:
.section .vectors, "ax"
.option norvc
.global vector_table

vector_table:
	j u_sw_irq_handler
   0:	1d80006f          	jal	x0,1d8 <u_sw_irq_handler>
	j __no_irq_handler
   4:	1a00006f          	jal	x0,1a4 <__no_irq_handler>
	j __no_irq_handler
   8:	19c0006f          	jal	x0,1a4 <__no_irq_handler>
	j m_software_irq_handler
   c:	1a60006f          	jal	x0,1b2 <m_software_irq_handler>
	j __no_irq_handler
  10:	1940006f          	jal	x0,1a4 <__no_irq_handler>
	j __no_irq_handler
  14:	1900006f          	jal	x0,1a4 <__no_irq_handler>
	j __no_irq_handler
  18:	18c0006f          	jal	x0,1a4 <__no_irq_handler>
	j m_timer_irq_handler
  1c:	1980006f          	jal	x0,1b4 <m_timer_irq_handler>
	j __no_irq_handler
  20:	1840006f          	jal	x0,1a4 <__no_irq_handler>
	j __no_irq_handler
  24:	1800006f          	jal	x0,1a4 <__no_irq_handler>
	j __no_irq_handler
  28:	17c0006f          	jal	x0,1a4 <__no_irq_handler>
	j m_external_irq_handler
  2c:	18a0006f          	jal	x0,1b6 <m_external_irq_handler>
	j __no_irq_handler
  30:	1740006f          	jal	x0,1a4 <__no_irq_handler>
	j __no_irq_handler
  34:	1700006f          	jal	x0,1a4 <__no_irq_handler>
	j __no_irq_handler
  38:	16c0006f          	jal	x0,1a4 <__no_irq_handler>
	j __no_irq_handler
  3c:	1680006f          	jal	x0,1a4 <__no_irq_handler>
	j m_fast0_irq_handler
  40:	1780006f          	jal	x0,1b8 <m_fast0_irq_handler>
	j m_fast1_irq_handler
  44:	1760006f          	jal	x0,1ba <m_fast1_irq_handler>
	j m_fast2_irq_handler
  48:	1740006f          	jal	x0,1bc <m_fast2_irq_handler>
	j m_fast3_irq_handler
  4c:	1720006f          	jal	x0,1be <m_fast3_irq_handler>
	j m_fast4_irq_handler
  50:	1700006f          	jal	x0,1c0 <m_fast4_irq_handler>
	j m_fast5_irq_handler
  54:	16e0006f          	jal	x0,1c2 <m_fast5_irq_handler>
	j m_fast6_irq_handler
  58:	16c0006f          	jal	x0,1c4 <m_fast6_irq_handler>
	j m_fast7_irq_handler
  5c:	16a0006f          	jal	x0,1c6 <m_fast7_irq_handler>
	j m_fast8_irq_handler
  60:	1680006f          	jal	x0,1c8 <m_fast8_irq_handler>
	j m_fast9_irq_handler
  64:	1660006f          	jal	x0,1ca <m_fast9_irq_handler>
	j m_fast10_irq_handler
  68:	1640006f          	jal	x0,1cc <m_fast10_irq_handler>
	j m_fast11_irq_handler
  6c:	1620006f          	jal	x0,1ce <m_fast11_irq_handler>
	j m_fast12_irq_handler
  70:	1600006f          	jal	x0,1d0 <m_fast12_irq_handler>
	j m_fast13_irq_handler
  74:	15e0006f          	jal	x0,1d2 <m_fast13_irq_handler>
	j m_fast14_irq_handler
  78:	15c0006f          	jal	x0,1d4 <m_fast14_irq_handler>
	j m_fast15_irq_handler
  7c:	15a0006f          	jal	x0,1d6 <m_fast15_irq_handler>

Disassembly of section .init:

00000080 <_start>:

_start:
/* initialize global pointer */
.option push
.option norelax
1:	auipc gp, %pcrel_hi(__global_pointer$)
  80:	00004197          	auipc	x3,0x4
	addi  gp, gp, %pcrel_lo(1b)
  84:	c6818193          	addi	x3,x3,-920 # 3ce8 <__global_pointer$>
.option pop

/* initialize stack pointer */
	la sp, __stack_end
  88:	00400117          	auipc	x2,0x400
  8c:	f7810113          	addi	x2,x2,-136 # 400000 <__heap_end>

/* set vector table address */
	la a0, __vector_start
  90:	00000517          	auipc	x10,0x0
  94:	f7050513          	addi	x10,x10,-144 # 0 <__vector_start>
	ori a0, a0, 1 /*vector mode = vectored */
  98:	00156513          	ori	x10,x10,1
	csrw mtvec, a0
  9c:	30551073          	csrrw	x0,mtvec,x10

/* clear the bss segment */
	la a0, _edata
  a0:	8fc18513          	addi	x10,x3,-1796 # 35e4 <errno>
	la a2, _end
  a4:	90818613          	addi	x12,x3,-1784 # 35f0 <__bss_end>
	sub a2, a2, a0
  a8:	8e09                	c.sub	x12,x10
	li a1, 0
  aa:	4581                	c.li	x11,0
	call memset
  ac:	2341                	c.jal	62c <memset>

/* new-style constructors and destructors */
	la a0, __libc_fini_array
  ae:	00000517          	auipc	x10,0x0
  b2:	48650513          	addi	x10,x10,1158 # 534 <__libc_fini_array>
	call atexit
  b6:	292d                	c.jal	4f0 <atexit>
	call __libc_init_array
  b8:	29e1                	c.jal	590 <__libc_init_array>
//	lw a0, 0(sp)                    /* a0 = argc */
//	addi a1, sp, __SIZEOF_POINTER__ /* a1 = argv */
//	li a2, 0                        /* a2 = envp = NULL */
// Initialize these variables to 0. Cannot use argc or argv
// since the stack is not initialized
	li a0, 0
  ba:	4501                	c.li	x10,0
	li a1, 0
  bc:	4581                	c.li	x11,0
	li a2, 0
  be:	4601                	c.li	x12,0

	call main
  c0:	2021                	c.jal	c8 <main>
	tail exit
  c2:	a189                	c.j	504 <exit>

000000c4 <_fini>:
.type   _fini, @function
_init:
_fini:
 /* These don't have to do anything since we use init_array/fini_array. Prevent
    missing symbol error */
	ret
  c4:	8082                	c.jr	x1

Disassembly of section .text:

000000c8 <main>:
#define EXP_MISA 0x40801104
#endif


int main(int argc, char *argv[])
{
      c8:	1141                	c.addi	x2,-16
      ca:	c606                	c.swsp	x1,12(x2)
      cc:	c422                	c.swsp	x8,8(x2)
             int reserved, tentative, nonstd, user, super;

    mxl = 0; reserved = 0; tentative = 0; nonstd = 0; user = 0; super = 0;

    /* inline assembly: read mvendorid and misa */
    __asm__ volatile("csrr %0, 0xF11" : "=r"(mvendorid_rval));
      ce:	f11025f3          	csrrs	x11,mvendorid,x0
    __asm__ volatile("csrr %0, 0x301" : "=r"(misa_rval));
      d2:	30102473          	csrrs	x8,misa,x0
    __asm__ volatile("csrr %0, 0xF12" : "=r"(marchid_rval));
      d6:	f1202773          	csrrs	x14,marchid,x0
    __asm__ volatile("csrr %0, 0xF13" : "=r"(mimpid_rval));
      da:	f13027f3          	csrrs	x15,mimpid,x0

    /* Check MVENDORID CSR: 0x602 is the value assigned by JEDEC to the OpenHW Group */
    if (mvendorid_rval != 0x00000602) {
      de:	60200693          	addi	x13,x0,1538
      e2:	00d58763          	beq	x11,x13,f0 <main+0x28>
      printf("\tERROR: CSR MVENDORID reads as 0x%x - should be 0x00000602 for the OpenHW Group.\n\n", mvendorid_rval);
      e6:	650d                	c.lui	x10,0x3
      e8:	fe850513          	addi	x10,x10,-24 # 2fe8 <_malloc_usable_size_r+0x1c>
      return EXIT_FAILURE;
    }

    /* Check MIMPID CSR: 0x0 is the value assigned by the OpenHW Group to the first release of CV32E40P */
    if (mimpid_rval != 0x00000000) {
      printf("\tERROR: CSR MIMPID reads as 0x%x - should be 0x00000000 for this release of CV32E40P.\n\n", mimpid_rval);
      ec:	23e1                	c.jal	6b4 <iprintf>
      ee:	a821                	c.j	106 <main+0x3e>
    if (misa_rval != EXP_MISA) {
      f0:	40001637          	lui	x12,0x40001
      f4:	10460613          	addi	x12,x12,260 # 40001104 <__heap_end+0x3fc01104>
      f8:	00c40c63          	beq	x8,x12,110 <main+0x48>
      printf("\tERROR: CSR MISA reads as 0x%x - should be 0x%x for this release of CV32E40P!\n\n", misa_rval, EXP_MISA);
      fc:	650d                	c.lui	x10,0x3
      fe:	85a2                	c.mv	x11,x8
     100:	03c50513          	addi	x10,x10,60 # 303c <_malloc_usable_size_r+0x70>
     104:	2b45                	c.jal	6b4 <iprintf>
      return EXIT_FAILURE;
     106:	4505                	c.li	x10,1
    }
    else {
      printf("\n");
      return EXIT_SUCCESS;
    }
}
     108:	40b2                	c.lwsp	x1,12(x2)
     10a:	4422                	c.lwsp	x8,8(x2)
     10c:	0141                	c.addi	x2,16
     10e:	8082                	c.jr	x1
    if (marchid_rval != 0x00000004) {
     110:	4691                	c.li	x13,4
     112:	00d70763          	beq	x14,x13,120 <main+0x58>
      printf("\tERROR: CSR MARCHID reads as 0x%x - should be 0x00000004 for CV32E40P.\n\n", marchid_rval);
     116:	650d                	c.lui	x10,0x3
     118:	85ba                	c.mv	x11,x14
     11a:	08c50513          	addi	x10,x10,140 # 308c <_malloc_usable_size_r+0xc0>
     11e:	b7f9                	c.j	ec <main+0x24>
    if (mimpid_rval != 0x00000000) {
     120:	c791                	c.beqz	x15,12c <main+0x64>
      printf("\tERROR: CSR MIMPID reads as 0x%x - should be 0x00000000 for this release of CV32E40P.\n\n", mimpid_rval);
     122:	650d                	c.lui	x10,0x3
     124:	85be                	c.mv	x11,x15
     126:	0d850513          	addi	x10,x10,216 # 30d8 <_malloc_usable_size_r+0x10c>
     12a:	b7c9                	c.j	ec <main+0x24>
    printf("\nHELLO WORLD!!!\n");
     12c:	650d                	c.lui	x10,0x3
     12e:	13050513          	addi	x10,x10,304 # 3130 <_malloc_usable_size_r+0x164>
     132:	7de000ef          	jal	x1,910 <puts>
    printf("This is the OpenHW Group CV32E40P CORE-V processor core.\n");
     136:	650d                	c.lui	x10,0x3
     138:	14050513          	addi	x10,x10,320 # 3140 <_malloc_usable_size_r+0x174>
     13c:	7d4000ef          	jal	x1,910 <puts>
    printf("CV32E40P is a RISC-V ISA compliant core with the following attributes:\n");
     140:	650d                	c.lui	x10,0x3
     142:	17c50513          	addi	x10,x10,380 # 317c <_malloc_usable_size_r+0x1b0>
     146:	7ca000ef          	jal	x1,910 <puts>
    printf("\tmvendorid = 0x%x\n", mvendorid_rval);
     14a:	650d                	c.lui	x10,0x3
     14c:	60200593          	addi	x11,x0,1538
     150:	1c450513          	addi	x10,x10,452 # 31c4 <_malloc_usable_size_r+0x1f8>
     154:	2385                	c.jal	6b4 <iprintf>
    printf("\tmarchid   = 0x%x\n", marchid_rval);
     156:	650d                	c.lui	x10,0x3
     158:	4591                	c.li	x11,4
     15a:	1d850513          	addi	x10,x10,472 # 31d8 <_malloc_usable_size_r+0x20c>
     15e:	2b99                	c.jal	6b4 <iprintf>
    printf("\tmimpid    = 0x%x\n", mimpid_rval);
     160:	650d                	c.lui	x10,0x3
     162:	4581                	c.li	x11,0
     164:	1ec50513          	addi	x10,x10,492 # 31ec <_malloc_usable_size_r+0x220>
     168:	23b1                	c.jal	6b4 <iprintf>
    printf("\tmisa      = 0x%x\n", misa_rval);
     16a:	650d                	c.lui	x10,0x3
     16c:	85a2                	c.mv	x11,x8
     16e:	20050513          	addi	x10,x10,512 # 3200 <_malloc_usable_size_r+0x234>
     172:	2389                	c.jal	6b4 <iprintf>
      case 1:  printf("\tXLEN is 32-bits\n");
     174:	650d                	c.lui	x10,0x3
     176:	21450513          	addi	x10,x10,532 # 3214 <_malloc_usable_size_r+0x248>
     17a:	796000ef          	jal	x1,910 <puts>
    printf("\tSupported Instructions Extensions: ");
     17e:	650d                	c.lui	x10,0x3
     180:	22850513          	addi	x10,x10,552 # 3228 <_malloc_usable_size_r+0x25c>
     184:	2b05                	c.jal	6b4 <iprintf>
    if ((misa_rval >> 12) & 0x00000001) printf("M");
     186:	04d00513          	addi	x10,x0,77
     18a:	2bd9                	c.jal	760 <putchar>
    if ((misa_rval >>  8) & 0x00000001) printf("I");
     18c:	04900513          	addi	x10,x0,73
     190:	2bc1                	c.jal	760 <putchar>
    if ((misa_rval >>  2) & 0x00000001) printf("C");
     192:	04300513          	addi	x10,x0,67
     196:	23e9                	c.jal	760 <putchar>
    printf("\n");
     198:	4529                	c.li	x10,10
     19a:	23d9                	c.jal	760 <putchar>
      printf("\n");
     19c:	4529                	c.li	x10,10
     19e:	23c9                	c.jal	760 <putchar>
      return EXIT_SUCCESS;
     1a0:	4501                	c.li	x10,0
     1a2:	b79d                	c.j	108 <main+0x40>

000001a4 <__no_irq_handler>:
.weak m_fast15_irq_handler


/* exception handling */
__no_irq_handler:
	la a0, no_exception_handler_msg
     1a4:	00003517          	auipc	x10,0x3
     1a8:	17650513          	addi	x10,x10,374 # 331a <no_exception_handler_msg>
	jal ra, puts
     1ac:	764000ef          	jal	x1,910 <puts>
	j __no_irq_handler
     1b0:	bfd5                	c.j	1a4 <__no_irq_handler>

000001b2 <m_software_irq_handler>:

m_software_irq_handler:
	j __no_irq_handler
     1b2:	bfcd                	c.j	1a4 <__no_irq_handler>

000001b4 <m_timer_irq_handler>:

m_timer_irq_handler:
	j __no_irq_handler
     1b4:	bfc5                	c.j	1a4 <__no_irq_handler>

000001b6 <m_external_irq_handler>:

m_external_irq_handler:
	j __no_irq_handler
     1b6:	b7fd                	c.j	1a4 <__no_irq_handler>

000001b8 <m_fast0_irq_handler>:

m_fast0_irq_handler:
	j __no_irq_handler
     1b8:	b7f5                	c.j	1a4 <__no_irq_handler>

000001ba <m_fast1_irq_handler>:

m_fast1_irq_handler:
	j __no_irq_handler
     1ba:	b7ed                	c.j	1a4 <__no_irq_handler>

000001bc <m_fast2_irq_handler>:

m_fast2_irq_handler:
	j __no_irq_handler
     1bc:	b7e5                	c.j	1a4 <__no_irq_handler>

000001be <m_fast3_irq_handler>:

m_fast3_irq_handler:
	j __no_irq_handler
     1be:	b7dd                	c.j	1a4 <__no_irq_handler>

000001c0 <m_fast4_irq_handler>:

m_fast4_irq_handler:
	j __no_irq_handler
     1c0:	b7d5                	c.j	1a4 <__no_irq_handler>

000001c2 <m_fast5_irq_handler>:

m_fast5_irq_handler:
	j __no_irq_handler
     1c2:	b7cd                	c.j	1a4 <__no_irq_handler>

000001c4 <m_fast6_irq_handler>:

m_fast6_irq_handler:
	j __no_irq_handler
     1c4:	b7c5                	c.j	1a4 <__no_irq_handler>

000001c6 <m_fast7_irq_handler>:

m_fast7_irq_handler:
	j __no_irq_handler
     1c6:	bff9                	c.j	1a4 <__no_irq_handler>

000001c8 <m_fast8_irq_handler>:

m_fast8_irq_handler:
	j __no_irq_handler
     1c8:	bff1                	c.j	1a4 <__no_irq_handler>

000001ca <m_fast9_irq_handler>:

m_fast9_irq_handler:
	j __no_irq_handler
     1ca:	bfe9                	c.j	1a4 <__no_irq_handler>

000001cc <m_fast10_irq_handler>:

m_fast10_irq_handler:
	j __no_irq_handler
     1cc:	bfe1                	c.j	1a4 <__no_irq_handler>

000001ce <m_fast11_irq_handler>:

m_fast11_irq_handler:
	j __no_irq_handler
     1ce:	bfd9                	c.j	1a4 <__no_irq_handler>

000001d0 <m_fast12_irq_handler>:

m_fast12_irq_handler:
	j __no_irq_handler
     1d0:	bfd1                	c.j	1a4 <__no_irq_handler>

000001d2 <m_fast13_irq_handler>:

m_fast13_irq_handler:
	j __no_irq_handler
     1d2:	bfc9                	c.j	1a4 <__no_irq_handler>

000001d4 <m_fast14_irq_handler>:

m_fast14_irq_handler:
	j __no_irq_handler
     1d4:	bfc1                	c.j	1a4 <__no_irq_handler>

000001d6 <m_fast15_irq_handler>:

m_fast15_irq_handler:
	j __no_irq_handler
     1d6:	b7f9                	c.j	1a4 <__no_irq_handler>

000001d8 <u_sw_irq_handler>:

u_sw_irq_handler:
	/* While we are still using puts in handlers, save all caller saved
	   regs.  Eventually, some of these saves could be deferred.  */
	addi sp,sp,-64
     1d8:	7139                	c.addi16sp	x2,-64
	sw ra, 0(sp)
     1da:	c006                	c.swsp	x1,0(x2)
	sw a0, 4(sp)
     1dc:	c22a                	c.swsp	x10,4(x2)
	sw a1, 8(sp)
     1de:	c42e                	c.swsp	x11,8(x2)
	sw a2, 12(sp)
     1e0:	c632                	c.swsp	x12,12(x2)
	sw a3, 16(sp)
     1e2:	c836                	c.swsp	x13,16(x2)
	sw a4, 20(sp)
     1e4:	ca3a                	c.swsp	x14,20(x2)
	sw a5, 24(sp)
     1e6:	cc3e                	c.swsp	x15,24(x2)
	sw a6, 28(sp)
     1e8:	ce42                	c.swsp	x16,28(x2)
	sw a7, 32(sp)
     1ea:	d046                	c.swsp	x17,32(x2)
	sw t0, 36(sp)
     1ec:	d216                	c.swsp	x5,36(x2)
	sw t1, 40(sp)
     1ee:	d41a                	c.swsp	x6,40(x2)
	sw t2, 44(sp)
     1f0:	d61e                	c.swsp	x7,44(x2)
	sw t3, 48(sp)
     1f2:	d872                	c.swsp	x28,48(x2)
	sw t4, 52(sp)
     1f4:	da76                	c.swsp	x29,52(x2)
	sw t5, 56(sp)
     1f6:	dc7a                	c.swsp	x30,56(x2)
	sw t6, 60(sp)
     1f8:	de7e                	c.swsp	x31,60(x2)
	csrr t0, mcause
     1fa:	342022f3          	csrrs	x5,mcause,x0
	li t1, EXCEPTION_ILLEGAL_INSN
     1fe:	4309                	c.li	x6,2
	beq t0, t1, handle_illegal_insn
     200:	02628363          	beq	x5,x6,226 <handle_illegal_insn>
	li t1, EXCEPTION_ECALL_M
     204:	432d                	c.li	x6,11
	beq t0, t1, handle_ecall
     206:	00628663          	beq	x5,x6,212 <handle_ecall>
	li t1, EXCEPTION_BREAKPOINT
     20a:	430d                	c.li	x6,3
	beq t0, t1, handle_ebreak
     20c:	00628663          	beq	x5,x6,218 <handle_ebreak>
	j handle_unknown
     210:	a015                	c.j	234 <handle_unknown>

00000212 <handle_ecall>:

handle_ecall:
	jal ra, handle_syscall
     212:	204000ef          	jal	x1,416 <handle_syscall>
	j end_handler_incr_mepc
     216:	a035                	c.j	242 <end_handler_incr_mepc>

00000218 <handle_ebreak>:

handle_ebreak:
	/* TODO support debug handling requirements.  */
	la a0, ebreak_msg
     218:	00003517          	auipc	x10,0x3
     21c:	0a150513          	addi	x10,x10,161 # 32b9 <ebreak_msg>
	jal ra, puts
     220:	6f0000ef          	jal	x1,910 <puts>
	j end_handler_incr_mepc
     224:	a839                	c.j	242 <end_handler_incr_mepc>

00000226 <handle_illegal_insn>:

handle_illegal_insn:
	la a0, illegal_insn_msg
     226:	00003517          	auipc	x10,0x3
     22a:	02750513          	addi	x10,x10,39 # 324d <illegal_insn_msg>
	jal ra, puts
     22e:	6e2000ef          	jal	x1,910 <puts>
	j end_handler_incr_mepc
     232:	a801                	c.j	242 <end_handler_incr_mepc>

00000234 <handle_unknown>:

handle_unknown:
	la a0, unknown_msg
     234:	00003517          	auipc	x10,0x3
     238:	0b550513          	addi	x10,x10,181 # 32e9 <unknown_msg>
	jal ra, puts
     23c:	6d4000ef          	jal	x1,910 <puts>
	/* We don't know what interrupt/exception is being handled, so don't
	   increment mepc.  */
	j end_handler_ret
     240:	a831                	c.j	25c <end_handler_ret>

00000242 <end_handler_incr_mepc>:

end_handler_incr_mepc:
	csrr t0, mepc
     242:	341022f3          	csrrs	x5,mepc,x0
	lb t1, 0(t0)
     246:	00028303          	lb	x6,0(x5)
	li a0, 0x3
     24a:	450d                	c.li	x10,3
	and t1, t1, a0
     24c:	00a37333          	and	x6,x6,x10
	/* Increment mepc by 2 or 4 depending on whether the instruction at mepc
	   is compressed or not.  */
	bne t1, a0, end_handler_incr_mepc2
     250:	00a31363          	bne	x6,x10,256 <end_handler_incr_mepc2>
	addi t0, t0, 2
     254:	0289                	c.addi	x5,2

00000256 <end_handler_incr_mepc2>:
end_handler_incr_mepc2:
	addi t0, t0, 2
     256:	0289                	c.addi	x5,2
	csrw mepc, t0
     258:	34129073          	csrrw	x0,mepc,x5

0000025c <end_handler_ret>:
end_handler_ret:
	lw ra, 0(sp)
     25c:	4082                	c.lwsp	x1,0(x2)
	lw a0, 4(sp)
     25e:	4512                	c.lwsp	x10,4(x2)
	lw a1, 8(sp)
     260:	45a2                	c.lwsp	x11,8(x2)
	lw a2, 12(sp)
     262:	4632                	c.lwsp	x12,12(x2)
	lw a3, 16(sp)
     264:	46c2                	c.lwsp	x13,16(x2)
	lw a4, 20(sp)
     266:	4752                	c.lwsp	x14,20(x2)
	lw a5, 24(sp)
     268:	47e2                	c.lwsp	x15,24(x2)
	lw a6, 28(sp)
     26a:	4872                	c.lwsp	x16,28(x2)
	lw a7, 32(sp)
     26c:	5882                	c.lwsp	x17,32(x2)
	lw t0, 36(sp)
     26e:	5292                	c.lwsp	x5,36(x2)
	lw t1, 40(sp)
     270:	5322                	c.lwsp	x6,40(x2)
	lw t2, 44(sp)
     272:	53b2                	c.lwsp	x7,44(x2)
	lw t3, 48(sp)
     274:	5e42                	c.lwsp	x28,48(x2)
	lw t4, 52(sp)
     276:	5ed2                	c.lwsp	x29,52(x2)
	lw t5, 56(sp)
     278:	5f62                	c.lwsp	x30,56(x2)
	lw t6, 60(sp)
     27a:	5ff2                	c.lwsp	x31,60(x2)
	addi sp,sp,64
     27c:	6121                	c.addi16sp	x2,64
	mret
     27e:	30200073          	mret

00000282 <__syscall_error>:
#endif
/* Upstream newlib now defines this in libgloss/riscv/internal_syscall.h.  */
long
__syscall_error(long a0)
{
  errno = -a0;
     282:	40a00533          	sub	x10,x0,x10
     286:	8ea1ae23          	sw	x10,-1796(x3) # 35e4 <errno>
  return -1;
}
     28a:	557d                	c.li	x10,-1
     28c:	8082                	c.jr	x1

0000028e <unimplemented_syscall>:

void unimplemented_syscall()
{
  const char *p = "BSP: Unimplemented system call called!\n";
     28e:	678d                	c.lui	x15,0x3
     290:	34878793          	addi	x15,x15,840 # 3348 <no_exception_handler_msg+0x2e>
  while (*p)
    *(volatile int *)STDOUT_REG = *(p++);
     294:	100006b7          	lui	x13,0x10000
  while (*p)
     298:	0007c703          	lbu	x14,0(x15)
     29c:	e311                	c.bnez	x14,2a0 <unimplemented_syscall+0x12>
}
     29e:	8082                	c.jr	x1
    *(volatile int *)STDOUT_REG = *(p++);
     2a0:	0785                	c.addi	x15,1
     2a2:	c298                	c.sw	x14,0(x13)
     2a4:	bfd5                	c.j	298 <unimplemented_syscall+0xa>

000002a6 <nanosleep>:

int nanosleep(const struct timespec *rqtp, struct timespec *rmtp)
{
  errno = ENOSYS;
     2a6:	05800713          	addi	x14,x0,88
     2aa:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     2ae:	557d                	c.li	x10,-1
     2b0:	8082                	c.jr	x1

000002b2 <_access>:

int _access(const char *file, int mode)
{
  errno = ENOSYS;
     2b2:	05800713          	addi	x14,x0,88
     2b6:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     2ba:	557d                	c.li	x10,-1
     2bc:	8082                	c.jr	x1

000002be <_chdir>:

int _chdir(const char *path)
{
  errno = ENOSYS;
     2be:	05800713          	addi	x14,x0,88
     2c2:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     2c6:	557d                	c.li	x10,-1
     2c8:	8082                	c.jr	x1

000002ca <_chmod>:

int _chmod(const char *path, mode_t mode)
{
  errno = ENOSYS;
     2ca:	05800713          	addi	x14,x0,88
     2ce:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     2d2:	557d                	c.li	x10,-1
     2d4:	8082                	c.jr	x1

000002d6 <_chown>:

int _chown(const char *path, uid_t owner, gid_t group)
{
  errno = ENOSYS;
     2d6:	05800713          	addi	x14,x0,88
     2da:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     2de:	557d                	c.li	x10,-1
     2e0:	8082                	c.jr	x1

000002e2 <_close>:

int _close(int file)
{
  return -1;
}
     2e2:	557d                	c.li	x10,-1
     2e4:	8082                	c.jr	x1

000002e6 <_execve>:

int _execve(const char *name, char *const argv[], char *const env[])
{
  errno = ENOMEM;
     2e6:	4731                	c.li	x14,12
     2e8:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     2ec:	557d                	c.li	x10,-1
     2ee:	8082                	c.jr	x1

000002f0 <_exit>:

void _exit(int exit_status)
{
  *(volatile int *)EXIT_REG = exit_status;
     2f0:	200007b7          	lui	x15,0x20000
     2f4:	c3c8                	c.sw	x10,4(x15)
  asm volatile("wfi");
     2f6:	10500073          	wfi
  /* _exit should not return */
  while (1) {};
     2fa:	a001                	c.j	2fa <_exit+0xa>

000002fc <_faccessat>:
}

int _faccessat(int dirfd, const char *file, int mode, int flags)
{
  errno = ENOSYS;
     2fc:	05800713          	addi	x14,x0,88
     300:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     304:	557d                	c.li	x10,-1
     306:	8082                	c.jr	x1

00000308 <_fork>:

int _fork(void)
{
  errno = EAGAIN;
     308:	472d                	c.li	x14,11
     30a:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     30e:	557d                	c.li	x10,-1
     310:	8082                	c.jr	x1

00000312 <_fstat>:

int _fstat(int file, struct stat *st)
{
  st->st_mode = S_IFCHR;
     312:	6789                	c.lui	x15,0x2
     314:	c1dc                	c.sw	x15,4(x11)
  return 0;
  // errno = -ENOSYS;
  // return -1;
}
     316:	4501                	c.li	x10,0
     318:	8082                	c.jr	x1

0000031a <_fstatat>:

int _fstatat(int dirfd, const char *file, struct stat *st, int flags)
{
  errno = ENOSYS;
     31a:	05800713          	addi	x14,x0,88
     31e:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     322:	557d                	c.li	x10,-1
     324:	8082                	c.jr	x1

00000326 <_ftime>:

int _ftime(struct timeb *tp)
     326:	05800713          	addi	x14,x0,88
     32a:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
     32e:	557d                	c.li	x10,-1
     330:	8082                	c.jr	x1

00000332 <_getcwd>:
  return -1;
}

char *_getcwd(char *buf, size_t size)
{
  errno = -ENOSYS;
     332:	fa800713          	addi	x14,x0,-88
     336:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return NULL;
}
     33a:	4501                	c.li	x10,0
     33c:	8082                	c.jr	x1

0000033e <_getpid>:

int _getpid()
{
  return 1;
}
     33e:	4505                	c.li	x10,1
     340:	8082                	c.jr	x1

00000342 <_gettimeofday>:

int _gettimeofday(struct timeval *tp, void *tzp)
{
  errno = -ENOSYS;
     342:	fa800713          	addi	x14,x0,-88
     346:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     34a:	557d                	c.li	x10,-1
     34c:	8082                	c.jr	x1

0000034e <_isatty>:

int _isatty(int file)
{
  return (file == STDOUT_FILENO);
     34e:	157d                	c.addi	x10,-1
}
     350:	00153513          	sltiu	x10,x10,1
     354:	8082                	c.jr	x1

00000356 <_kill>:

int _kill(int pid, int sig)
{
  errno = EINVAL;
     356:	4759                	c.li	x14,22
     358:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     35c:	557d                	c.li	x10,-1
     35e:	8082                	c.jr	x1

00000360 <_link>:

int _link(const char *old_name, const char *new_name)
{
  errno = EMLINK;
     360:	477d                	c.li	x14,31
     362:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     366:	557d                	c.li	x10,-1
     368:	8082                	c.jr	x1

0000036a <_lseek>:

off_t _lseek(int file, off_t ptr, int dir)
{
  return 0;
}
     36a:	4501                	c.li	x10,0
     36c:	8082                	c.jr	x1

0000036e <_lstat>:

int _lstat(const char *file, struct stat *st)
     36e:	05800713          	addi	x14,x0,88
     372:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
     376:	557d                	c.li	x10,-1
     378:	8082                	c.jr	x1

0000037a <_open>:
}

int _open(const char *name, int flags, int mode)
{
  return -1;
}
     37a:	557d                	c.li	x10,-1
     37c:	8082                	c.jr	x1

0000037e <_openat>:

int _openat(int dirfd, const char *name, int flags, int mode)
     37e:	05800713          	addi	x14,x0,88
     382:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
     386:	557d                	c.li	x10,-1
     388:	8082                	c.jr	x1

0000038a <_read>:
}

ssize_t _read(int file, void *ptr, size_t len)
{
  return 0;
}
     38a:	4501                	c.li	x10,0
     38c:	8082                	c.jr	x1

0000038e <_stat>:

int _stat(const char *file, struct stat *st)
{
  st->st_mode = S_IFCHR;
     38e:	6789                	c.lui	x15,0x2
     390:	c1dc                	c.sw	x15,4(x11)
  return 0;
  // errno = ENOSYS;
  // return -1;
}
     392:	4501                	c.li	x10,0
     394:	8082                	c.jr	x1

00000396 <_sysconf>:

long _sysconf(int name)
     396:	557d                	c.li	x10,-1
     398:	8082                	c.jr	x1

0000039a <_times>:
}

clock_t _times(struct tms *buf)
{
  return -1;
}
     39a:	557d                	c.li	x10,-1
     39c:	8082                	c.jr	x1

0000039e <_unlink>:

int _unlink(const char *name)
{
  errno = ENOENT;
     39e:	4709                	c.li	x14,2
     3a0:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     3a4:	557d                	c.li	x10,-1
     3a6:	8082                	c.jr	x1

000003a8 <_utime>:

int _utime(const char *path, const struct utimbuf *times)
     3a8:	05800713          	addi	x14,x0,88
     3ac:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
     3b0:	557d                	c.li	x10,-1
     3b2:	8082                	c.jr	x1

000003b4 <_wait>:
  return -1;
}

int _wait(int *status)
{
  errno = ECHILD;
     3b4:	4729                	c.li	x14,10
     3b6:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
}
     3ba:	557d                	c.li	x10,-1
     3bc:	8082                	c.jr	x1

000003be <_write>:

ssize_t _write(int file, const void *ptr, size_t len)
{
  const char *cptr = (char *)ptr;
  if (file != STDOUT_FILENO)
     3be:	4685                	c.li	x13,1
    {
      errno = ENOSYS;
      return -1;
    }

  const void *eptr = cptr + len;
     3c0:	00c587b3          	add	x15,x11,x12
  while (cptr != eptr)
    *(volatile int *)STDOUT_REG = *cptr++;
     3c4:	10000737          	lui	x14,0x10000
  if (file != STDOUT_FILENO)
     3c8:	00d50c63          	beq	x10,x13,3e0 <_write+0x22>
      errno = ENOSYS;
     3cc:	05800713          	addi	x14,x0,88
     3d0:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
      return -1;
     3d4:	557d                	c.li	x10,-1
     3d6:	8082                	c.jr	x1
    *(volatile int *)STDOUT_REG = *cptr++;
     3d8:	0005c683          	lbu	x13,0(x11)
     3dc:	0585                	c.addi	x11,1
     3de:	c314                	c.sw	x13,0(x14)
  while (cptr != eptr)
     3e0:	fef59ce3          	bne	x11,x15,3d8 <_write+0x1a>
  return len;
     3e4:	8532                	c.mv	x10,x12
}
     3e6:	8082                	c.jr	x1

000003e8 <_brk>:
extern char __heap_end[];
static char *brk = __heap_start;

int _brk(void *addr)
{
  brk = addr;
     3e8:	8ea1aa23          	sw	x10,-1804(x3) # 35dc <brk>
  return 0;
}
     3ec:	4501                	c.li	x10,0
     3ee:	8082                	c.jr	x1

000003f0 <_sbrk>:

void *_sbrk(ptrdiff_t incr)
{
     3f0:	87aa                	c.mv	x15,x10
  char *old_brk = brk;
     3f2:	8f41a503          	lw	x10,-1804(x3) # 35dc <brk>
  register long sp asm("sp");

  char *new_brk = brk += incr;
     3f6:	97aa                	c.add	x15,x10
     3f8:	8ef1aa23          	sw	x15,-1804(x3) # 35dc <brk>
  if (new_brk < (char *) sp && new_brk < __heap_end)
     3fc:	0027f863          	bgeu	x15,x2,40c <_sbrk+0x1c>
     400:	00400737          	lui	x14,0x400
     404:	00070713          	addi	x14,x14,0 # 400000 <__heap_end>
     408:	00e7e663          	bltu	x15,x14,414 <_sbrk+0x24>

      return old_brk;
    }
  else
    {
      errno = ENOMEM;
     40c:	4731                	c.li	x14,12
     40e:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
      return (void *) -1;
     412:	557d                	c.li	x10,-1
    }
}
     414:	8082                	c.jr	x1

00000416 <handle_syscall>:
    register long syscall_id asm("t0");
  #else
    long syscall_id = a7;
  #endif

  switch (syscall_id) {
     416:	08100793          	addi	x15,x0,129
     41a:	0af88c63          	beq	x17,x15,4d2 <handle_syscall+0xbc>
     41e:	0717c763          	blt	x15,x17,48c <handle_syscall+0x76>
     422:	04000793          	addi	x15,x0,64
     426:	0517c663          	blt	x15,x17,472 <handle_syscall+0x5c>
     42a:	02f00793          	addi	x15,x0,47
     42e:	0317c563          	blt	x15,x17,458 <handle_syscall+0x42>
     432:	47c5                	c.li	x15,17
     434:	04f89b63          	bne	x17,x15,48a <handle_syscall+0x74>
  errno = -ENOSYS;
     438:	fa800713          	addi	x14,x0,-88
     43c:	a861                	c.j	4d4 <handle_syscall+0xbe>
  switch (syscall_id) {
     43e:	c0088893          	addi	x17,x17,-1024
     442:	47bd                	c.li	x15,15
     444:	0517e363          	bltu	x15,x17,48a <handle_syscall+0x74>
     448:	678d                	c.lui	x15,0x3
     44a:	37078793          	addi	x15,x15,880 # 3370 <no_exception_handler_msg+0x56>
     44e:	088a                	c.slli	x17,0x2
     450:	98be                	c.add	x17,x15
     452:	0008a783          	lw	x15,0(x17)
     456:	8782                	c.jr	x15
     458:	fd088893          	addi	x17,x17,-48
     45c:	47c1                	c.li	x15,16
     45e:	0317e663          	bltu	x15,x17,48a <handle_syscall+0x74>
     462:	678d                	c.lui	x15,0x3
     464:	3b078793          	addi	x15,x15,944 # 33b0 <no_exception_handler_msg+0x96>
     468:	088a                	c.slli	x17,0x2
     46a:	98be                	c.add	x17,x15
     46c:	0008a783          	lw	x15,0(x17)
     470:	8782                	c.jr	x15
     472:	05000793          	addi	x15,x0,80
     476:	06f88963          	beq	x17,x15,4e8 <handle_syscall+0xd2>
     47a:	05d00793          	addi	x15,x0,93
     47e:	04f88363          	beq	x17,x15,4c4 <handle_syscall+0xae>
     482:	04f00793          	addi	x15,x0,79
     486:	04f88a63          	beq	x17,x15,4da <handle_syscall+0xc4>
      break;
    case SYS_times:
      _times ((struct tms *) a0);
      break;
    default:
      unimplemented_syscall ();
     48a:	b511                	c.j	28e <unimplemented_syscall>
  switch (syscall_id) {
     48c:	40f00793          	addi	x15,x0,1039
     490:	ff17cde3          	blt	x15,x17,48a <handle_syscall+0x74>
     494:	3ff00793          	addi	x15,x0,1023
     498:	fb17c3e3          	blt	x15,x17,43e <handle_syscall+0x28>
     49c:	0ac00793          	addi	x15,x0,172
     4a0:	04f88763          	beq	x17,x15,4ee <handle_syscall+0xd8>
     4a4:	0117c963          	blt	x15,x17,4b6 <handle_syscall+0xa0>
     4a8:	09900793          	addi	x15,x0,153
     4ac:	04f88163          	beq	x17,x15,4ee <handle_syscall+0xd8>
     4b0:	0a900793          	addi	x15,x0,169
     4b4:	b741                	c.j	434 <handle_syscall+0x1e>
     4b6:	0d600793          	addi	x15,x0,214
     4ba:	fcf898e3          	bne	x17,x15,48a <handle_syscall+0x74>
  brk = addr;
     4be:	8ea1aa23          	sw	x10,-1804(x3) # 35dc <brk>
  return 0;
     4c2:	8082                	c.jr	x1
  *(volatile int *)EXIT_REG = exit_status;
     4c4:	200007b7          	lui	x15,0x20000
     4c8:	c3c8                	c.sw	x10,4(x15)
  asm volatile("wfi");
     4ca:	10500073          	wfi
  while (1) {};
     4ce:	a001                	c.j	4ce <handle_syscall+0xb8>
      _write (a0, (const void *) a1, a2);
     4d0:	b5fd                	c.j	3be <_write>
  errno = EINVAL;
     4d2:	4759                	c.li	x14,22
  errno = ENOSYS;
     4d4:	8ee1ae23          	sw	x14,-1796(x3) # 35e4 <errno>
  return -1;
     4d8:	8082                	c.jr	x1
  errno = ENOSYS;
     4da:	05800713          	addi	x14,x0,88
     4de:	bfdd                	c.j	4d4 <handle_syscall+0xbe>
  errno = EMLINK;
     4e0:	477d                	c.li	x14,31
     4e2:	bfcd                	c.j	4d4 <handle_syscall+0xbe>
  errno = ENOENT;
     4e4:	4709                	c.li	x14,2
     4e6:	b7fd                	c.j	4d4 <handle_syscall+0xbe>
  st->st_mode = S_IFCHR;
     4e8:	6789                	c.lui	x15,0x2
     4ea:	c1dc                	c.sw	x15,4(x11)
  return 0;
     4ec:	8082                	c.jr	x1
      break;
  }
}
     4ee:	8082                	c.jr	x1

000004f0 <atexit>:
     4f0:	00050593          	addi	x11,x10,0
     4f4:	00000693          	addi	x13,x0,0
     4f8:	00000613          	addi	x12,x0,0
     4fc:	00000513          	addi	x10,x0,0
     500:	0990006f          	jal	x0,d98 <__register_exitproc>

00000504 <exit>:
     504:	ff010113          	addi	x2,x2,-16
     508:	00000593          	addi	x11,x0,0
     50c:	00812423          	sw	x8,8(x2)
     510:	00112623          	sw	x1,12(x2)
     514:	00050413          	addi	x8,x10,0
     518:	119000ef          	jal	x1,e30 <__call_exitprocs>
     51c:	8f01a503          	lw	x10,-1808(x3) # 35d8 <_global_impure_ptr>
     520:	02852783          	lw	x15,40(x10)
     524:	00078463          	beq	x15,x0,52c <exit+0x28>
     528:	000780e7          	jalr	x1,0(x15) # 2000 <_printf_common+0x90>
     52c:	00040513          	addi	x10,x8,0
     530:	dc1ff0ef          	jal	x1,2f0 <_exit>

00000534 <__libc_fini_array>:
     534:	ff010113          	addi	x2,x2,-16
     538:	000037b7          	lui	x15,0x3
     53c:	00812423          	sw	x8,8(x2)
     540:	00003437          	lui	x8,0x3
     544:	4e878713          	addi	x14,x15,1256 # 34e8 <impure_data>
     548:	4e840413          	addi	x8,x8,1256 # 34e8 <impure_data>
     54c:	40e40433          	sub	x8,x8,x14
     550:	00912223          	sw	x9,4(x2)
     554:	00112623          	sw	x1,12(x2)
     558:	40245413          	srai	x8,x8,0x2
     55c:	4e878493          	addi	x9,x15,1256
     560:	00041c63          	bne	x8,x0,578 <__libc_fini_array+0x44>
     564:	00c12083          	lw	x1,12(x2)
     568:	00812403          	lw	x8,8(x2)
     56c:	00412483          	lw	x9,4(x2)
     570:	01010113          	addi	x2,x2,16
     574:	00008067          	jalr	x0,0(x1)
     578:	fff40413          	addi	x8,x8,-1
     57c:	00241793          	slli	x15,x8,0x2
     580:	00f487b3          	add	x15,x9,x15
     584:	0007a783          	lw	x15,0(x15)
     588:	000780e7          	jalr	x1,0(x15)
     58c:	fd5ff06f          	jal	x0,560 <__libc_fini_array+0x2c>

00000590 <__libc_init_array>:
     590:	ff010113          	addi	x2,x2,-16
     594:	00812423          	sw	x8,8(x2)
     598:	00912223          	sw	x9,4(x2)
     59c:	00003437          	lui	x8,0x3
     5a0:	000034b7          	lui	x9,0x3
     5a4:	4e848793          	addi	x15,x9,1256 # 34e8 <impure_data>
     5a8:	4e840413          	addi	x8,x8,1256 # 34e8 <impure_data>
     5ac:	40f40433          	sub	x8,x8,x15
     5b0:	01212023          	sw	x18,0(x2)
     5b4:	00112623          	sw	x1,12(x2)
     5b8:	40245413          	srai	x8,x8,0x2
     5bc:	4e848493          	addi	x9,x9,1256
     5c0:	00000913          	addi	x18,x0,0
     5c4:	04891063          	bne	x18,x8,604 <__libc_init_array+0x74>
     5c8:	000034b7          	lui	x9,0x3
     5cc:	00003437          	lui	x8,0x3
     5d0:	4e848793          	addi	x15,x9,1256 # 34e8 <impure_data>
     5d4:	4e840413          	addi	x8,x8,1256 # 34e8 <impure_data>
     5d8:	40f40433          	sub	x8,x8,x15
     5dc:	40245413          	srai	x8,x8,0x2
     5e0:	4e848493          	addi	x9,x9,1256
     5e4:	00000913          	addi	x18,x0,0
     5e8:	02891863          	bne	x18,x8,618 <__libc_init_array+0x88>
     5ec:	00c12083          	lw	x1,12(x2)
     5f0:	00812403          	lw	x8,8(x2)
     5f4:	00412483          	lw	x9,4(x2)
     5f8:	00012903          	lw	x18,0(x2)
     5fc:	01010113          	addi	x2,x2,16
     600:	00008067          	jalr	x0,0(x1)
     604:	0004a783          	lw	x15,0(x9)
     608:	00190913          	addi	x18,x18,1
     60c:	00448493          	addi	x9,x9,4
     610:	000780e7          	jalr	x1,0(x15)
     614:	fb1ff06f          	jal	x0,5c4 <__libc_init_array+0x34>
     618:	0004a783          	lw	x15,0(x9)
     61c:	00190913          	addi	x18,x18,1
     620:	00448493          	addi	x9,x9,4
     624:	000780e7          	jalr	x1,0(x15)
     628:	fc1ff06f          	jal	x0,5e8 <__libc_init_array+0x58>

0000062c <memset>:
     62c:	00050313          	addi	x6,x10,0
     630:	00060a63          	beq	x12,x0,644 <memset+0x18>
     634:	00b30023          	sb	x11,0(x6)
     638:	fff60613          	addi	x12,x12,-1
     63c:	00130313          	addi	x6,x6,1
     640:	fe061ae3          	bne	x12,x0,634 <memset+0x8>
     644:	00008067          	jalr	x0,0(x1)

00000648 <_iprintf_r>:
     648:	fc010113          	addi	x2,x2,-64
     64c:	00812c23          	sw	x8,24(x2)
     650:	00912a23          	sw	x9,20(x2)
     654:	00112e23          	sw	x1,28(x2)
     658:	02c12423          	sw	x12,40(x2)
     65c:	02d12623          	sw	x13,44(x2)
     660:	02e12823          	sw	x14,48(x2)
     664:	02f12a23          	sw	x15,52(x2)
     668:	03012c23          	sw	x16,56(x2)
     66c:	03112e23          	sw	x17,60(x2)
     670:	00050413          	addi	x8,x10,0
     674:	00058493          	addi	x9,x11,0
     678:	00050863          	beq	x10,x0,688 <_iprintf_r+0x40>
     67c:	01852783          	lw	x15,24(x10)
     680:	00079463          	bne	x15,x0,688 <_iprintf_r+0x40>
     684:	4b1000ef          	jal	x1,1334 <__sinit>
     688:	00842583          	lw	x11,8(x8)
     68c:	02810693          	addi	x13,x2,40
     690:	00048613          	addi	x12,x9,0
     694:	00040513          	addi	x10,x8,0
     698:	00d12623          	sw	x13,12(x2)
     69c:	554010ef          	jal	x1,1bf0 <_vfiprintf_r>
     6a0:	01c12083          	lw	x1,28(x2)
     6a4:	01812403          	lw	x8,24(x2)
     6a8:	01412483          	lw	x9,20(x2)
     6ac:	04010113          	addi	x2,x2,64
     6b0:	00008067          	jalr	x0,0(x1)

000006b4 <iprintf>:
     6b4:	fb010113          	addi	x2,x2,-80
     6b8:	04f12223          	sw	x15,68(x2)
     6bc:	02812423          	sw	x8,40(x2)
     6c0:	00050413          	addi	x8,x10,0
     6c4:	8f81a503          	lw	x10,-1800(x3) # 35e0 <_impure_ptr>
     6c8:	02112623          	sw	x1,44(x2)
     6cc:	02b12a23          	sw	x11,52(x2)
     6d0:	02c12c23          	sw	x12,56(x2)
     6d4:	02d12e23          	sw	x13,60(x2)
     6d8:	04e12023          	sw	x14,64(x2)
     6dc:	05012423          	sw	x16,72(x2)
     6e0:	05112623          	sw	x17,76(x2)
     6e4:	00050c63          	beq	x10,x0,6fc <iprintf+0x48>
     6e8:	01852783          	lw	x15,24(x10)
     6ec:	00079863          	bne	x15,x0,6fc <iprintf+0x48>
     6f0:	00a12623          	sw	x10,12(x2)
     6f4:	441000ef          	jal	x1,1334 <__sinit>
     6f8:	00c12503          	lw	x10,12(x2)
     6fc:	00852583          	lw	x11,8(x10)
     700:	03410693          	addi	x13,x2,52
     704:	00040613          	addi	x12,x8,0
     708:	00d12e23          	sw	x13,28(x2)
     70c:	4e4010ef          	jal	x1,1bf0 <_vfiprintf_r>
     710:	02c12083          	lw	x1,44(x2)
     714:	02812403          	lw	x8,40(x2)
     718:	05010113          	addi	x2,x2,80
     71c:	00008067          	jalr	x0,0(x1)

00000720 <_putchar_r>:
     720:	fe010113          	addi	x2,x2,-32
     724:	00812c23          	sw	x8,24(x2)
     728:	00112e23          	sw	x1,28(x2)
     72c:	00050413          	addi	x8,x10,0
     730:	00050c63          	beq	x10,x0,748 <_putchar_r+0x28>
     734:	01852783          	lw	x15,24(x10)
     738:	00079863          	bne	x15,x0,748 <_putchar_r+0x28>
     73c:	00b12623          	sw	x11,12(x2)
     740:	3f5000ef          	jal	x1,1334 <__sinit>
     744:	00c12583          	lw	x11,12(x2)
     748:	00842603          	lw	x12,8(x8)
     74c:	00040513          	addi	x10,x8,0
     750:	01812403          	lw	x8,24(x2)
     754:	01c12083          	lw	x1,28(x2)
     758:	02010113          	addi	x2,x2,32
     75c:	5710106f          	jal	x0,24cc <_putc_r>

00000760 <putchar>:
     760:	00050593          	addi	x11,x10,0
     764:	8f81a503          	lw	x10,-1800(x3) # 35e0 <_impure_ptr>
     768:	02050c63          	beq	x10,x0,7a0 <putchar+0x40>
     76c:	01852783          	lw	x15,24(x10)
     770:	02079863          	bne	x15,x0,7a0 <putchar+0x40>
     774:	fe010113          	addi	x2,x2,-32
     778:	00112e23          	sw	x1,28(x2)
     77c:	00b12623          	sw	x11,12(x2)
     780:	00a12423          	sw	x10,8(x2)
     784:	3b1000ef          	jal	x1,1334 <__sinit>
     788:	00812503          	lw	x10,8(x2)
     78c:	00c12583          	lw	x11,12(x2)
     790:	01c12083          	lw	x1,28(x2)
     794:	00852603          	lw	x12,8(x10)
     798:	02010113          	addi	x2,x2,32
     79c:	5310106f          	jal	x0,24cc <_putc_r>
     7a0:	00852603          	lw	x12,8(x10)
     7a4:	ff9ff06f          	jal	x0,79c <putchar+0x3c>

000007a8 <_puts_r>:
     7a8:	00051663          	bne	x10,x0,7b4 <_puts_r+0xc>
     7ac:	00802783          	lw	x15,8(x0) # 8 <__vector_start+0x8>
     7b0:	00100073          	ebreak
     7b4:	01852783          	lw	x15,24(x10)
     7b8:	fe010113          	addi	x2,x2,-32
     7bc:	00912a23          	sw	x9,20(x2)
     7c0:	01212823          	sw	x18,16(x2)
     7c4:	00112e23          	sw	x1,28(x2)
     7c8:	00812c23          	sw	x8,24(x2)
     7cc:	01312623          	sw	x19,12(x2)
     7d0:	01412423          	sw	x20,8(x2)
     7d4:	00050493          	addi	x9,x10,0
     7d8:	00058913          	addi	x18,x11,0
     7dc:	00079463          	bne	x15,x0,7e4 <_puts_r+0x3c>
     7e0:	355000ef          	jal	x1,1334 <__sinit>
     7e4:	0184a783          	lw	x15,24(x9)
     7e8:	0084a403          	lw	x8,8(x9)
     7ec:	00079663          	bne	x15,x0,7f8 <_puts_r+0x50>
     7f0:	00048513          	addi	x10,x9,0
     7f4:	341000ef          	jal	x1,1334 <__sinit>
     7f8:	000037b7          	lui	x15,0x3
     7fc:	43478793          	addi	x15,x15,1076 # 3434 <__sf_fake_stdin>
     800:	04f41863          	bne	x8,x15,850 <_puts_r+0xa8>
     804:	0044a403          	lw	x8,4(x9)
     808:	00c45783          	lhu	x15,12(x8)
     80c:	0087f793          	andi	x15,x15,8
     810:	00078663          	beq	x15,x0,81c <_puts_r+0x74>
     814:	01042783          	lw	x15,16(x8)
     818:	0c079a63          	bne	x15,x0,8ec <_puts_r+0x144>
     81c:	00040593          	addi	x11,x8,0
     820:	00048513          	addi	x10,x9,0
     824:	400000ef          	jal	x1,c24 <__swsetup_r>
     828:	0c050263          	beq	x10,x0,8ec <_puts_r+0x144>
     82c:	fff00513          	addi	x10,x0,-1
     830:	01c12083          	lw	x1,28(x2)
     834:	01812403          	lw	x8,24(x2)
     838:	01412483          	lw	x9,20(x2)
     83c:	01012903          	lw	x18,16(x2)
     840:	00c12983          	lw	x19,12(x2)
     844:	00812a03          	lw	x20,8(x2)
     848:	02010113          	addi	x2,x2,32
     84c:	00008067          	jalr	x0,0(x1)
     850:	000037b7          	lui	x15,0x3
     854:	41478793          	addi	x15,x15,1044 # 3414 <__sf_fake_stdout>
     858:	00f41663          	bne	x8,x15,864 <_puts_r+0xbc>
     85c:	0084a403          	lw	x8,8(x9)
     860:	fa9ff06f          	jal	x0,808 <_puts_r+0x60>
     864:	000037b7          	lui	x15,0x3
     868:	3f478793          	addi	x15,x15,1012 # 33f4 <__sf_fake_stderr>
     86c:	f8f41ee3          	bne	x8,x15,808 <_puts_r+0x60>
     870:	00c4a403          	lw	x8,12(x9)
     874:	f95ff06f          	jal	x0,808 <_puts_r+0x60>
     878:	00f42423          	sw	x15,8(x8)
     87c:	00190913          	addi	x18,x18,1
     880:	0407c663          	blt	x15,x0,8cc <_puts_r+0x124>
     884:	00042783          	lw	x15,0(x8)
     888:	00178713          	addi	x14,x15,1
     88c:	00e42023          	sw	x14,0(x8)
     890:	00b78023          	sb	x11,0(x15)
     894:	00842783          	lw	x15,8(x8)
     898:	00094583          	lbu	x11,0(x18)
     89c:	fff78793          	addi	x15,x15,-1
     8a0:	fc059ce3          	bne	x11,x0,878 <_puts_r+0xd0>
     8a4:	00f42423          	sw	x15,8(x8)
     8a8:	0407d863          	bge	x15,x0,8f8 <_puts_r+0x150>
     8ac:	00040613          	addi	x12,x8,0
     8b0:	00a00593          	addi	x11,x0,10
     8b4:	00048513          	addi	x10,x9,0
     8b8:	224000ef          	jal	x1,adc <__swbuf_r>
     8bc:	fff00793          	addi	x15,x0,-1
     8c0:	f6f506e3          	beq	x10,x15,82c <_puts_r+0x84>
     8c4:	00a00513          	addi	x10,x0,10
     8c8:	f69ff06f          	jal	x0,830 <_puts_r+0x88>
     8cc:	01842703          	lw	x14,24(x8)
     8d0:	00e7c463          	blt	x15,x14,8d8 <_puts_r+0x130>
     8d4:	fb4598e3          	bne	x11,x20,884 <_puts_r+0xdc>
     8d8:	00040613          	addi	x12,x8,0
     8dc:	00048513          	addi	x10,x9,0
     8e0:	1fc000ef          	jal	x1,adc <__swbuf_r>
     8e4:	fb3518e3          	bne	x10,x19,894 <_puts_r+0xec>
     8e8:	f45ff06f          	jal	x0,82c <_puts_r+0x84>
     8ec:	fff00993          	addi	x19,x0,-1
     8f0:	00a00a13          	addi	x20,x0,10
     8f4:	fa1ff06f          	jal	x0,894 <_puts_r+0xec>
     8f8:	00042783          	lw	x15,0(x8)
     8fc:	00178713          	addi	x14,x15,1
     900:	00e42023          	sw	x14,0(x8)
     904:	00a00713          	addi	x14,x0,10
     908:	00e78023          	sb	x14,0(x15)
     90c:	fb9ff06f          	jal	x0,8c4 <_puts_r+0x11c>

00000910 <puts>:
     910:	00050593          	addi	x11,x10,0
     914:	8f81a503          	lw	x10,-1800(x3) # 35e0 <_impure_ptr>
     918:	e91ff06f          	jal	x0,7a8 <_puts_r>

0000091c <cleanup_glue>:
     91c:	ff010113          	addi	x2,x2,-16
     920:	00812423          	sw	x8,8(x2)
     924:	00058413          	addi	x8,x11,0
     928:	0005a583          	lw	x11,0(x11)
     92c:	00912223          	sw	x9,4(x2)
     930:	00112623          	sw	x1,12(x2)
     934:	00050493          	addi	x9,x10,0
     938:	00058463          	beq	x11,x0,940 <cleanup_glue+0x24>
     93c:	fe1ff0ef          	jal	x1,91c <cleanup_glue>
     940:	00040593          	addi	x11,x8,0
     944:	00812403          	lw	x8,8(x2)
     948:	00c12083          	lw	x1,12(x2)
     94c:	00048513          	addi	x10,x9,0
     950:	00412483          	lw	x9,4(x2)
     954:	01010113          	addi	x2,x2,16
     958:	6810006f          	jal	x0,17d8 <_free_r>

0000095c <_reclaim_reent>:
     95c:	8f81a783          	lw	x15,-1800(x3) # 35e0 <_impure_ptr>
     960:	16a78c63          	beq	x15,x10,ad8 <_reclaim_reent+0x17c>
     964:	02452783          	lw	x15,36(x10)
     968:	fe010113          	addi	x2,x2,-32
     96c:	00812c23          	sw	x8,24(x2)
     970:	00112e23          	sw	x1,28(x2)
     974:	00912a23          	sw	x9,20(x2)
     978:	01212823          	sw	x18,16(x2)
     97c:	01312623          	sw	x19,12(x2)
     980:	00050413          	addi	x8,x10,0
     984:	02078463          	beq	x15,x0,9ac <_reclaim_reent+0x50>
     988:	00c7a783          	lw	x15,12(x15)
     98c:	00000493          	addi	x9,x0,0
     990:	08000913          	addi	x18,x0,128
     994:	0e079e63          	bne	x15,x0,a90 <_reclaim_reent+0x134>
     998:	02442783          	lw	x15,36(x8)
     99c:	0007a583          	lw	x11,0(x15)
     9a0:	00058663          	beq	x11,x0,9ac <_reclaim_reent+0x50>
     9a4:	00040513          	addi	x10,x8,0
     9a8:	631000ef          	jal	x1,17d8 <_free_r>
     9ac:	01442583          	lw	x11,20(x8)
     9b0:	00058663          	beq	x11,x0,9bc <_reclaim_reent+0x60>
     9b4:	00040513          	addi	x10,x8,0
     9b8:	621000ef          	jal	x1,17d8 <_free_r>
     9bc:	02442583          	lw	x11,36(x8)
     9c0:	00058663          	beq	x11,x0,9cc <_reclaim_reent+0x70>
     9c4:	00040513          	addi	x10,x8,0
     9c8:	611000ef          	jal	x1,17d8 <_free_r>
     9cc:	03842583          	lw	x11,56(x8)
     9d0:	00058663          	beq	x11,x0,9dc <_reclaim_reent+0x80>
     9d4:	00040513          	addi	x10,x8,0
     9d8:	601000ef          	jal	x1,17d8 <_free_r>
     9dc:	03c42583          	lw	x11,60(x8)
     9e0:	00058663          	beq	x11,x0,9ec <_reclaim_reent+0x90>
     9e4:	00040513          	addi	x10,x8,0
     9e8:	5f1000ef          	jal	x1,17d8 <_free_r>
     9ec:	04042583          	lw	x11,64(x8)
     9f0:	00058663          	beq	x11,x0,9fc <_reclaim_reent+0xa0>
     9f4:	00040513          	addi	x10,x8,0
     9f8:	5e1000ef          	jal	x1,17d8 <_free_r>
     9fc:	0ec42583          	lw	x11,236(x8)
     a00:	00058663          	beq	x11,x0,a0c <_reclaim_reent+0xb0>
     a04:	00040513          	addi	x10,x8,0
     a08:	5d1000ef          	jal	x1,17d8 <_free_r>
     a0c:	0e842583          	lw	x11,232(x8)
     a10:	00058663          	beq	x11,x0,a1c <_reclaim_reent+0xc0>
     a14:	00040513          	addi	x10,x8,0
     a18:	5c1000ef          	jal	x1,17d8 <_free_r>
     a1c:	04842783          	lw	x15,72(x8)
     a20:	00078a63          	beq	x15,x0,a34 <_reclaim_reent+0xd8>
     a24:	0887a583          	lw	x11,136(x15)
     a28:	00058663          	beq	x11,x0,a34 <_reclaim_reent+0xd8>
     a2c:	00040513          	addi	x10,x8,0
     a30:	5a9000ef          	jal	x1,17d8 <_free_r>
     a34:	03442583          	lw	x11,52(x8)
     a38:	00058663          	beq	x11,x0,a44 <_reclaim_reent+0xe8>
     a3c:	00040513          	addi	x10,x8,0
     a40:	599000ef          	jal	x1,17d8 <_free_r>
     a44:	01842783          	lw	x15,24(x8)
     a48:	06078a63          	beq	x15,x0,abc <_reclaim_reent+0x160>
     a4c:	02842783          	lw	x15,40(x8)
     a50:	00040513          	addi	x10,x8,0
     a54:	000780e7          	jalr	x1,0(x15)
     a58:	0d842583          	lw	x11,216(x8)
     a5c:	06058063          	beq	x11,x0,abc <_reclaim_reent+0x160>
     a60:	00040513          	addi	x10,x8,0
     a64:	01812403          	lw	x8,24(x2)
     a68:	01c12083          	lw	x1,28(x2)
     a6c:	01412483          	lw	x9,20(x2)
     a70:	01012903          	lw	x18,16(x2)
     a74:	00c12983          	lw	x19,12(x2)
     a78:	02010113          	addi	x2,x2,32
     a7c:	ea1ff06f          	jal	x0,91c <cleanup_glue>
     a80:	009585b3          	add	x11,x11,x9
     a84:	0005a583          	lw	x11,0(x11)
     a88:	02059063          	bne	x11,x0,aa8 <_reclaim_reent+0x14c>
     a8c:	00448493          	addi	x9,x9,4
     a90:	02442783          	lw	x15,36(x8)
     a94:	00c7a583          	lw	x11,12(x15)
     a98:	ff2494e3          	bne	x9,x18,a80 <_reclaim_reent+0x124>
     a9c:	00040513          	addi	x10,x8,0
     aa0:	539000ef          	jal	x1,17d8 <_free_r>
     aa4:	ef5ff06f          	jal	x0,998 <_reclaim_reent+0x3c>
     aa8:	0005a983          	lw	x19,0(x11)
     aac:	00040513          	addi	x10,x8,0
     ab0:	529000ef          	jal	x1,17d8 <_free_r>
     ab4:	00098593          	addi	x11,x19,0
     ab8:	fd1ff06f          	jal	x0,a88 <_reclaim_reent+0x12c>
     abc:	01c12083          	lw	x1,28(x2)
     ac0:	01812403          	lw	x8,24(x2)
     ac4:	01412483          	lw	x9,20(x2)
     ac8:	01012903          	lw	x18,16(x2)
     acc:	00c12983          	lw	x19,12(x2)
     ad0:	02010113          	addi	x2,x2,32
     ad4:	00008067          	jalr	x0,0(x1)
     ad8:	00008067          	jalr	x0,0(x1)

00000adc <__swbuf_r>:
     adc:	fe010113          	addi	x2,x2,-32
     ae0:	00812c23          	sw	x8,24(x2)
     ae4:	00912a23          	sw	x9,20(x2)
     ae8:	01212823          	sw	x18,16(x2)
     aec:	00112e23          	sw	x1,28(x2)
     af0:	01312623          	sw	x19,12(x2)
     af4:	00050493          	addi	x9,x10,0
     af8:	00058913          	addi	x18,x11,0
     afc:	00060413          	addi	x8,x12,0
     b00:	00050863          	beq	x10,x0,b10 <__swbuf_r+0x34>
     b04:	01852783          	lw	x15,24(x10)
     b08:	00079463          	bne	x15,x0,b10 <__swbuf_r+0x34>
     b0c:	029000ef          	jal	x1,1334 <__sinit>
     b10:	000037b7          	lui	x15,0x3
     b14:	43478793          	addi	x15,x15,1076 # 3434 <__sf_fake_stdin>
     b18:	0af41e63          	bne	x8,x15,bd4 <__swbuf_r+0xf8>
     b1c:	0044a403          	lw	x8,4(x9)
     b20:	01842783          	lw	x15,24(x8)
     b24:	00f42423          	sw	x15,8(x8)
     b28:	00c45783          	lhu	x15,12(x8)
     b2c:	0087f793          	andi	x15,x15,8
     b30:	0c078663          	beq	x15,x0,bfc <__swbuf_r+0x120>
     b34:	01042783          	lw	x15,16(x8)
     b38:	0c078263          	beq	x15,x0,bfc <__swbuf_r+0x120>
     b3c:	01042783          	lw	x15,16(x8)
     b40:	00042503          	lw	x10,0(x8)
     b44:	0ff97993          	andi	x19,x18,255
     b48:	0ff97913          	andi	x18,x18,255
     b4c:	40f50533          	sub	x10,x10,x15
     b50:	01442783          	lw	x15,20(x8)
     b54:	00f54a63          	blt	x10,x15,b68 <__swbuf_r+0x8c>
     b58:	00040593          	addi	x11,x8,0
     b5c:	00048513          	addi	x10,x9,0
     b60:	5fc000ef          	jal	x1,115c <_fflush_r>
     b64:	0a051463          	bne	x10,x0,c0c <__swbuf_r+0x130>
     b68:	00842783          	lw	x15,8(x8)
     b6c:	00150513          	addi	x10,x10,1
     b70:	fff78793          	addi	x15,x15,-1
     b74:	00f42423          	sw	x15,8(x8)
     b78:	00042783          	lw	x15,0(x8)
     b7c:	00178713          	addi	x14,x15,1
     b80:	00e42023          	sw	x14,0(x8)
     b84:	01378023          	sb	x19,0(x15)
     b88:	01442783          	lw	x15,20(x8)
     b8c:	00a78c63          	beq	x15,x10,ba4 <__swbuf_r+0xc8>
     b90:	00c45783          	lhu	x15,12(x8)
     b94:	0017f793          	andi	x15,x15,1
     b98:	00078e63          	beq	x15,x0,bb4 <__swbuf_r+0xd8>
     b9c:	00a00793          	addi	x15,x0,10
     ba0:	00f91a63          	bne	x18,x15,bb4 <__swbuf_r+0xd8>
     ba4:	00040593          	addi	x11,x8,0
     ba8:	00048513          	addi	x10,x9,0
     bac:	5b0000ef          	jal	x1,115c <_fflush_r>
     bb0:	04051e63          	bne	x10,x0,c0c <__swbuf_r+0x130>
     bb4:	01c12083          	lw	x1,28(x2)
     bb8:	01812403          	lw	x8,24(x2)
     bbc:	01412483          	lw	x9,20(x2)
     bc0:	00c12983          	lw	x19,12(x2)
     bc4:	00090513          	addi	x10,x18,0
     bc8:	01012903          	lw	x18,16(x2)
     bcc:	02010113          	addi	x2,x2,32
     bd0:	00008067          	jalr	x0,0(x1)
     bd4:	000037b7          	lui	x15,0x3
     bd8:	41478793          	addi	x15,x15,1044 # 3414 <__sf_fake_stdout>
     bdc:	00f41663          	bne	x8,x15,be8 <__swbuf_r+0x10c>
     be0:	0084a403          	lw	x8,8(x9)
     be4:	f3dff06f          	jal	x0,b20 <__swbuf_r+0x44>
     be8:	000037b7          	lui	x15,0x3
     bec:	3f478793          	addi	x15,x15,1012 # 33f4 <__sf_fake_stderr>
     bf0:	f2f418e3          	bne	x8,x15,b20 <__swbuf_r+0x44>
     bf4:	00c4a403          	lw	x8,12(x9)
     bf8:	f29ff06f          	jal	x0,b20 <__swbuf_r+0x44>
     bfc:	00040593          	addi	x11,x8,0
     c00:	00048513          	addi	x10,x9,0
     c04:	020000ef          	jal	x1,c24 <__swsetup_r>
     c08:	f2050ae3          	beq	x10,x0,b3c <__swbuf_r+0x60>
     c0c:	fff00913          	addi	x18,x0,-1
     c10:	fa5ff06f          	jal	x0,bb4 <__swbuf_r+0xd8>

00000c14 <__swbuf>:
     c14:	00058613          	addi	x12,x11,0
     c18:	00050593          	addi	x11,x10,0
     c1c:	8f81a503          	lw	x10,-1800(x3) # 35e0 <_impure_ptr>
     c20:	ebdff06f          	jal	x0,adc <__swbuf_r>

00000c24 <__swsetup_r>:
     c24:	ff010113          	addi	x2,x2,-16
     c28:	00912223          	sw	x9,4(x2)
     c2c:	8f81a483          	lw	x9,-1800(x3) # 35e0 <_impure_ptr>
     c30:	00812423          	sw	x8,8(x2)
     c34:	01212023          	sw	x18,0(x2)
     c38:	00112623          	sw	x1,12(x2)
     c3c:	00050913          	addi	x18,x10,0
     c40:	00058413          	addi	x8,x11,0
     c44:	00048a63          	beq	x9,x0,c58 <__swsetup_r+0x34>
     c48:	0184a783          	lw	x15,24(x9)
     c4c:	00079663          	bne	x15,x0,c58 <__swsetup_r+0x34>
     c50:	00048513          	addi	x10,x9,0
     c54:	6e0000ef          	jal	x1,1334 <__sinit>
     c58:	000037b7          	lui	x15,0x3
     c5c:	43478793          	addi	x15,x15,1076 # 3434 <__sf_fake_stdin>
     c60:	02f41e63          	bne	x8,x15,c9c <__swsetup_r+0x78>
     c64:	0044a403          	lw	x8,4(x9)
     c68:	00c41783          	lh	x15,12(x8)
     c6c:	01079713          	slli	x14,x15,0x10
     c70:	0087f693          	andi	x13,x15,8
     c74:	01075713          	srli	x14,x14,0x10
     c78:	08069a63          	bne	x13,x0,d0c <__swsetup_r+0xe8>
     c7c:	01077693          	andi	x13,x14,16
     c80:	04069263          	bne	x13,x0,cc4 <__swsetup_r+0xa0>
     c84:	00900713          	addi	x14,x0,9
     c88:	00e92023          	sw	x14,0(x18)
     c8c:	0407e793          	ori	x15,x15,64
     c90:	00f41623          	sh	x15,12(x8)
     c94:	fff00513          	addi	x10,x0,-1
     c98:	0d00006f          	jal	x0,d68 <__swsetup_r+0x144>
     c9c:	000037b7          	lui	x15,0x3
     ca0:	41478793          	addi	x15,x15,1044 # 3414 <__sf_fake_stdout>
     ca4:	00f41663          	bne	x8,x15,cb0 <__swsetup_r+0x8c>
     ca8:	0084a403          	lw	x8,8(x9)
     cac:	fbdff06f          	jal	x0,c68 <__swsetup_r+0x44>
     cb0:	000037b7          	lui	x15,0x3
     cb4:	3f478793          	addi	x15,x15,1012 # 33f4 <__sf_fake_stderr>
     cb8:	faf418e3          	bne	x8,x15,c68 <__swsetup_r+0x44>
     cbc:	00c4a403          	lw	x8,12(x9)
     cc0:	fa9ff06f          	jal	x0,c68 <__swsetup_r+0x44>
     cc4:	00477713          	andi	x14,x14,4
     cc8:	02070c63          	beq	x14,x0,d00 <__swsetup_r+0xdc>
     ccc:	03442583          	lw	x11,52(x8)
     cd0:	00058c63          	beq	x11,x0,ce8 <__swsetup_r+0xc4>
     cd4:	04440793          	addi	x15,x8,68
     cd8:	00f58663          	beq	x11,x15,ce4 <__swsetup_r+0xc0>
     cdc:	00090513          	addi	x10,x18,0
     ce0:	2f9000ef          	jal	x1,17d8 <_free_r>
     ce4:	02042a23          	sw	x0,52(x8)
     ce8:	00c45783          	lhu	x15,12(x8)
     cec:	00042223          	sw	x0,4(x8)
     cf0:	fdb7f793          	andi	x15,x15,-37
     cf4:	00f41623          	sh	x15,12(x8)
     cf8:	01042783          	lw	x15,16(x8)
     cfc:	00f42023          	sw	x15,0(x8)
     d00:	00c45783          	lhu	x15,12(x8)
     d04:	0087e793          	ori	x15,x15,8
     d08:	00f41623          	sh	x15,12(x8)
     d0c:	01042783          	lw	x15,16(x8)
     d10:	02079063          	bne	x15,x0,d30 <__swsetup_r+0x10c>
     d14:	00c45783          	lhu	x15,12(x8)
     d18:	20000713          	addi	x14,x0,512
     d1c:	2807f793          	andi	x15,x15,640
     d20:	00e78863          	beq	x15,x14,d30 <__swsetup_r+0x10c>
     d24:	00040593          	addi	x11,x8,0
     d28:	00090513          	addi	x10,x18,0
     d2c:	1b5000ef          	jal	x1,16e0 <__smakebuf_r>
     d30:	00c41783          	lh	x15,12(x8)
     d34:	01079713          	slli	x14,x15,0x10
     d38:	0017f693          	andi	x13,x15,1
     d3c:	01075713          	srli	x14,x14,0x10
     d40:	04068063          	beq	x13,x0,d80 <__swsetup_r+0x15c>
     d44:	01442683          	lw	x13,20(x8)
     d48:	00042423          	sw	x0,8(x8)
     d4c:	40d006b3          	sub	x13,x0,x13
     d50:	00d42c23          	sw	x13,24(x8)
     d54:	01042683          	lw	x13,16(x8)
     d58:	00000513          	addi	x10,x0,0
     d5c:	00069663          	bne	x13,x0,d68 <__swsetup_r+0x144>
     d60:	08077713          	andi	x14,x14,128
     d64:	f20714e3          	bne	x14,x0,c8c <__swsetup_r+0x68>
     d68:	00c12083          	lw	x1,12(x2)
     d6c:	00812403          	lw	x8,8(x2)
     d70:	00412483          	lw	x9,4(x2)
     d74:	00012903          	lw	x18,0(x2)
     d78:	01010113          	addi	x2,x2,16
     d7c:	00008067          	jalr	x0,0(x1)
     d80:	00277693          	andi	x13,x14,2
     d84:	00000613          	addi	x12,x0,0
     d88:	00069463          	bne	x13,x0,d90 <__swsetup_r+0x16c>
     d8c:	01442603          	lw	x12,20(x8)
     d90:	00c42423          	sw	x12,8(x8)
     d94:	fc1ff06f          	jal	x0,d54 <__swsetup_r+0x130>

00000d98 <__register_exitproc>:
     d98:	8f01a703          	lw	x14,-1808(x3) # 35d8 <_global_impure_ptr>
     d9c:	00050893          	addi	x17,x10,0
     da0:	04872783          	lw	x15,72(x14)
     da4:	00079e63          	bne	x15,x0,dc0 <__register_exitproc+0x28>
     da8:	04c70793          	addi	x15,x14,76
     dac:	04f72423          	sw	x15,72(x14)
     db0:	00000813          	addi	x16,x0,0
     db4:	00080663          	beq	x16,x0,dc0 <__register_exitproc+0x28>
     db8:	00002503          	lw	x10,0(x0) # 0 <__vector_start>
     dbc:	0ca72a23          	sw	x10,212(x14)
     dc0:	0047a703          	lw	x14,4(x15)
     dc4:	01f00813          	addi	x16,x0,31
     dc8:	fff00513          	addi	x10,x0,-1
     dcc:	06e84063          	blt	x16,x14,e2c <__register_exitproc+0x94>
     dd0:	04088263          	beq	x17,x0,e14 <__register_exitproc+0x7c>
     dd4:	0887a803          	lw	x16,136(x15)
     dd8:	04080a63          	beq	x16,x0,e2c <__register_exitproc+0x94>
     ddc:	00271513          	slli	x10,x14,0x2
     de0:	00a80533          	add	x10,x16,x10
     de4:	00c52023          	sw	x12,0(x10)
     de8:	10082303          	lw	x6,256(x16)
     dec:	00100613          	addi	x12,x0,1
     df0:	00e61633          	sll	x12,x12,x14
     df4:	00c36333          	or	x6,x6,x12
     df8:	10682023          	sw	x6,256(x16)
     dfc:	08d52023          	sw	x13,128(x10)
     e00:	00200693          	addi	x13,x0,2
     e04:	00d89863          	bne	x17,x13,e14 <__register_exitproc+0x7c>
     e08:	10482683          	lw	x13,260(x16)
     e0c:	00c6e6b3          	or	x13,x13,x12
     e10:	10d82223          	sw	x13,260(x16)
     e14:	00170693          	addi	x13,x14,1
     e18:	00271713          	slli	x14,x14,0x2
     e1c:	00d7a223          	sw	x13,4(x15)
     e20:	00e787b3          	add	x15,x15,x14
     e24:	00b7a423          	sw	x11,8(x15)
     e28:	00000513          	addi	x10,x0,0
     e2c:	00008067          	jalr	x0,0(x1)

00000e30 <__call_exitprocs>:
     e30:	fd010113          	addi	x2,x2,-48
     e34:	01712623          	sw	x23,12(x2)
     e38:	8f01ab83          	lw	x23,-1808(x3) # 35d8 <_global_impure_ptr>
     e3c:	01512a23          	sw	x21,20(x2)
     e40:	01612823          	sw	x22,16(x2)
     e44:	01812423          	sw	x24,8(x2)
     e48:	02112623          	sw	x1,44(x2)
     e4c:	02812423          	sw	x8,40(x2)
     e50:	02912223          	sw	x9,36(x2)
     e54:	03212023          	sw	x18,32(x2)
     e58:	01312e23          	sw	x19,28(x2)
     e5c:	01412c23          	sw	x20,24(x2)
     e60:	01912223          	sw	x25,4(x2)
     e64:	00050b13          	addi	x22,x10,0
     e68:	00058a93          	addi	x21,x11,0
     e6c:	00100c13          	addi	x24,x0,1
     e70:	048ba483          	lw	x9,72(x23)
     e74:	02048063          	beq	x9,x0,e94 <__call_exitprocs+0x64>
     e78:	0044a403          	lw	x8,4(x9)
     e7c:	0884a983          	lw	x19,136(x9)
     e80:	fff40913          	addi	x18,x8,-1
     e84:	00241413          	slli	x8,x8,0x2
     e88:	00898a33          	add	x20,x19,x8
     e8c:	00848433          	add	x8,x9,x8
     e90:	02095c63          	bge	x18,x0,ec8 <__call_exitprocs+0x98>
     e94:	02c12083          	lw	x1,44(x2)
     e98:	02812403          	lw	x8,40(x2)
     e9c:	02412483          	lw	x9,36(x2)
     ea0:	02012903          	lw	x18,32(x2)
     ea4:	01c12983          	lw	x19,28(x2)
     ea8:	01812a03          	lw	x20,24(x2)
     eac:	01412a83          	lw	x21,20(x2)
     eb0:	01012b03          	lw	x22,16(x2)
     eb4:	00c12b83          	lw	x23,12(x2)
     eb8:	00812c03          	lw	x24,8(x2)
     ebc:	00412c83          	lw	x25,4(x2)
     ec0:	03010113          	addi	x2,x2,48
     ec4:	00008067          	jalr	x0,0(x1)
     ec8:	020a8063          	beq	x21,x0,ee8 <__call_exitprocs+0xb8>
     ecc:	00099a63          	bne	x19,x0,ee0 <__call_exitprocs+0xb0>
     ed0:	fff90913          	addi	x18,x18,-1
     ed4:	ffca0a13          	addi	x20,x20,-4
     ed8:	ffc40413          	addi	x8,x8,-4
     edc:	fb5ff06f          	jal	x0,e90 <__call_exitprocs+0x60>
     ee0:	07ca2783          	lw	x15,124(x20)
     ee4:	ff5796e3          	bne	x15,x21,ed0 <__call_exitprocs+0xa0>
     ee8:	0044a703          	lw	x14,4(x9)
     eec:	00442783          	lw	x15,4(x8)
     ef0:	fff70713          	addi	x14,x14,-1
     ef4:	03271e63          	bne	x14,x18,f30 <__call_exitprocs+0x100>
     ef8:	0124a223          	sw	x18,4(x9)
     efc:	fc078ae3          	beq	x15,x0,ed0 <__call_exitprocs+0xa0>
     f00:	0044ac83          	lw	x25,4(x9)
     f04:	00098a63          	beq	x19,x0,f18 <__call_exitprocs+0xe8>
     f08:	1009a683          	lw	x13,256(x19)
     f0c:	012c1733          	sll	x14,x24,x18
     f10:	00d776b3          	and	x13,x14,x13
     f14:	02069263          	bne	x13,x0,f38 <__call_exitprocs+0x108>
     f18:	000780e7          	jalr	x1,0(x15)
     f1c:	0044a703          	lw	x14,4(x9)
     f20:	048ba783          	lw	x15,72(x23)
     f24:	f59716e3          	bne	x14,x25,e70 <__call_exitprocs+0x40>
     f28:	faf484e3          	beq	x9,x15,ed0 <__call_exitprocs+0xa0>
     f2c:	f45ff06f          	jal	x0,e70 <__call_exitprocs+0x40>
     f30:	00042223          	sw	x0,4(x8)
     f34:	fc9ff06f          	jal	x0,efc <__call_exitprocs+0xcc>
     f38:	1049a683          	lw	x13,260(x19)
     f3c:	ffca2583          	lw	x11,-4(x20)
     f40:	00d77733          	and	x14,x14,x13
     f44:	00071863          	bne	x14,x0,f54 <__call_exitprocs+0x124>
     f48:	000b0513          	addi	x10,x22,0
     f4c:	000780e7          	jalr	x1,0(x15)
     f50:	fcdff06f          	jal	x0,f1c <__call_exitprocs+0xec>
     f54:	00058513          	addi	x10,x11,0
     f58:	000780e7          	jalr	x1,0(x15)
     f5c:	fc1ff06f          	jal	x0,f1c <__call_exitprocs+0xec>

00000f60 <__sflush_r>:
     f60:	00c5d783          	lhu	x15,12(x11)
     f64:	fe010113          	addi	x2,x2,-32
     f68:	00812c23          	sw	x8,24(x2)
     f6c:	00912a23          	sw	x9,20(x2)
     f70:	00112e23          	sw	x1,28(x2)
     f74:	01212823          	sw	x18,16(x2)
     f78:	01312623          	sw	x19,12(x2)
     f7c:	0087f713          	andi	x14,x15,8
     f80:	00050493          	addi	x9,x10,0
     f84:	00058413          	addi	x8,x11,0
     f88:	16071663          	bne	x14,x0,10f4 <__sflush_r+0x194>
     f8c:	0045a703          	lw	x14,4(x11)
     f90:	02e04663          	blt	x0,x14,fbc <__sflush_r+0x5c>
     f94:	0405a703          	lw	x14,64(x11)
     f98:	02e04263          	blt	x0,x14,fbc <__sflush_r+0x5c>
     f9c:	00000513          	addi	x10,x0,0
     fa0:	01c12083          	lw	x1,28(x2)
     fa4:	01812403          	lw	x8,24(x2)
     fa8:	01412483          	lw	x9,20(x2)
     fac:	01012903          	lw	x18,16(x2)
     fb0:	00c12983          	lw	x19,12(x2)
     fb4:	02010113          	addi	x2,x2,32
     fb8:	00008067          	jalr	x0,0(x1)
     fbc:	02c42703          	lw	x14,44(x8)
     fc0:	fc070ee3          	beq	x14,x0,f9c <__sflush_r+0x3c>
     fc4:	000016b7          	lui	x13,0x1
     fc8:	0004a903          	lw	x18,0(x9)
     fcc:	00d7f7b3          	and	x15,x15,x13
     fd0:	0004a023          	sw	x0,0(x9)
     fd4:	02042583          	lw	x11,32(x8)
     fd8:	08078863          	beq	x15,x0,1068 <__sflush_r+0x108>
     fdc:	05442503          	lw	x10,84(x8)
     fe0:	00c45783          	lhu	x15,12(x8)
     fe4:	0047f793          	andi	x15,x15,4
     fe8:	00078e63          	beq	x15,x0,1004 <__sflush_r+0xa4>
     fec:	00442783          	lw	x15,4(x8)
     ff0:	40f50533          	sub	x10,x10,x15
     ff4:	03442783          	lw	x15,52(x8)
     ff8:	00078663          	beq	x15,x0,1004 <__sflush_r+0xa4>
     ffc:	04042783          	lw	x15,64(x8)
    1000:	40f50533          	sub	x10,x10,x15
    1004:	02c42783          	lw	x15,44(x8)
    1008:	02042583          	lw	x11,32(x8)
    100c:	00050613          	addi	x12,x10,0
    1010:	00000693          	addi	x13,x0,0
    1014:	00048513          	addi	x10,x9,0
    1018:	000780e7          	jalr	x1,0(x15)
    101c:	fff00793          	addi	x15,x0,-1
    1020:	08f50863          	beq	x10,x15,10b0 <__sflush_r+0x150>
    1024:	01042783          	lw	x15,16(x8)
    1028:	00001737          	lui	x14,0x1
    102c:	00042223          	sw	x0,4(x8)
    1030:	00f42023          	sw	x15,0(x8)
    1034:	00c45783          	lhu	x15,12(x8)
    1038:	00e7f7b3          	and	x15,x15,x14
    103c:	00078463          	beq	x15,x0,1044 <__sflush_r+0xe4>
    1040:	04a42a23          	sw	x10,84(x8)
    1044:	03442583          	lw	x11,52(x8)
    1048:	0124a023          	sw	x18,0(x9)
    104c:	f40588e3          	beq	x11,x0,f9c <__sflush_r+0x3c>
    1050:	04440793          	addi	x15,x8,68
    1054:	00f58663          	beq	x11,x15,1060 <__sflush_r+0x100>
    1058:	00048513          	addi	x10,x9,0
    105c:	77c000ef          	jal	x1,17d8 <_free_r>
    1060:	02042a23          	sw	x0,52(x8)
    1064:	f39ff06f          	jal	x0,f9c <__sflush_r+0x3c>
    1068:	00100693          	addi	x13,x0,1
    106c:	00000613          	addi	x12,x0,0
    1070:	00048513          	addi	x10,x9,0
    1074:	000700e7          	jalr	x1,0(x14) # 1000 <__sflush_r+0xa0>
    1078:	fff00793          	addi	x15,x0,-1
    107c:	f6f512e3          	bne	x10,x15,fe0 <__sflush_r+0x80>
    1080:	0004a783          	lw	x15,0(x9)
    1084:	f4078ee3          	beq	x15,x0,fe0 <__sflush_r+0x80>
    1088:	01d00713          	addi	x14,x0,29
    108c:	00e78663          	beq	x15,x14,1098 <__sflush_r+0x138>
    1090:	01600713          	addi	x14,x0,22
    1094:	00e79663          	bne	x15,x14,10a0 <__sflush_r+0x140>
    1098:	0124a023          	sw	x18,0(x9)
    109c:	f01ff06f          	jal	x0,f9c <__sflush_r+0x3c>
    10a0:	00c45783          	lhu	x15,12(x8)
    10a4:	0407e793          	ori	x15,x15,64
    10a8:	00f41623          	sh	x15,12(x8)
    10ac:	ef5ff06f          	jal	x0,fa0 <__sflush_r+0x40>
    10b0:	0004a683          	lw	x13,0(x9)
    10b4:	01d00713          	addi	x14,x0,29
    10b8:	00c41783          	lh	x15,12(x8)
    10bc:	fed764e3          	bltu	x14,x13,10a4 <__sflush_r+0x144>
    10c0:	dfc00737          	lui	x14,0xdfc00
    10c4:	ffe70713          	addi	x14,x14,-2 # dfbffffe <__heap_end+0xdf7ffffe>
    10c8:	40d75733          	sra	x14,x14,x13
    10cc:	00177713          	andi	x14,x14,1
    10d0:	fc071ae3          	bne	x14,x0,10a4 <__sflush_r+0x144>
    10d4:	01042703          	lw	x14,16(x8)
    10d8:	00c7d793          	srli	x15,x15,0xc
    10dc:	00042223          	sw	x0,4(x8)
    10e0:	00e42023          	sw	x14,0(x8)
    10e4:	0017f793          	andi	x15,x15,1
    10e8:	f4078ee3          	beq	x15,x0,1044 <__sflush_r+0xe4>
    10ec:	f4068ae3          	beq	x13,x0,1040 <__sflush_r+0xe0>
    10f0:	f55ff06f          	jal	x0,1044 <__sflush_r+0xe4>
    10f4:	0105a983          	lw	x19,16(x11)
    10f8:	ea0982e3          	beq	x19,x0,f9c <__sflush_r+0x3c>
    10fc:	0005a903          	lw	x18,0(x11)
    1100:	0037f793          	andi	x15,x15,3
    1104:	0135a023          	sw	x19,0(x11)
    1108:	41390933          	sub	x18,x18,x19
    110c:	00000713          	addi	x14,x0,0
    1110:	00079463          	bne	x15,x0,1118 <__sflush_r+0x1b8>
    1114:	0145a703          	lw	x14,20(x11)
    1118:	00e42423          	sw	x14,8(x8)
    111c:	e92050e3          	bge	x0,x18,f9c <__sflush_r+0x3c>
    1120:	02842783          	lw	x15,40(x8)
    1124:	02042583          	lw	x11,32(x8)
    1128:	00090693          	addi	x13,x18,0
    112c:	00098613          	addi	x12,x19,0
    1130:	00048513          	addi	x10,x9,0
    1134:	000780e7          	jalr	x1,0(x15)
    1138:	00a04c63          	blt	x0,x10,1150 <__sflush_r+0x1f0>
    113c:	00c45783          	lhu	x15,12(x8)
    1140:	fff00513          	addi	x10,x0,-1
    1144:	0407e793          	ori	x15,x15,64
    1148:	00f41623          	sh	x15,12(x8)
    114c:	e55ff06f          	jal	x0,fa0 <__sflush_r+0x40>
    1150:	00a989b3          	add	x19,x19,x10
    1154:	40a90933          	sub	x18,x18,x10
    1158:	fc5ff06f          	jal	x0,111c <__sflush_r+0x1bc>

0000115c <_fflush_r>:
    115c:	0105a783          	lw	x15,16(x11)
    1160:	08078a63          	beq	x15,x0,11f4 <_fflush_r+0x98>
    1164:	fe010113          	addi	x2,x2,-32
    1168:	00812c23          	sw	x8,24(x2)
    116c:	00112e23          	sw	x1,28(x2)
    1170:	00050413          	addi	x8,x10,0
    1174:	00050c63          	beq	x10,x0,118c <_fflush_r+0x30>
    1178:	01852783          	lw	x15,24(x10)
    117c:	00079863          	bne	x15,x0,118c <_fflush_r+0x30>
    1180:	00b12623          	sw	x11,12(x2)
    1184:	1b0000ef          	jal	x1,1334 <__sinit>
    1188:	00c12583          	lw	x11,12(x2)
    118c:	000037b7          	lui	x15,0x3
    1190:	43478793          	addi	x15,x15,1076 # 3434 <__sf_fake_stdin>
    1194:	02f59263          	bne	x11,x15,11b8 <_fflush_r+0x5c>
    1198:	00442583          	lw	x11,4(x8)
    119c:	00c59783          	lh	x15,12(x11)
    11a0:	04078063          	beq	x15,x0,11e0 <_fflush_r+0x84>
    11a4:	00040513          	addi	x10,x8,0
    11a8:	01812403          	lw	x8,24(x2)
    11ac:	01c12083          	lw	x1,28(x2)
    11b0:	02010113          	addi	x2,x2,32
    11b4:	dadff06f          	jal	x0,f60 <__sflush_r>
    11b8:	000037b7          	lui	x15,0x3
    11bc:	41478793          	addi	x15,x15,1044 # 3414 <__sf_fake_stdout>
    11c0:	00f59663          	bne	x11,x15,11cc <_fflush_r+0x70>
    11c4:	00842583          	lw	x11,8(x8)
    11c8:	fd5ff06f          	jal	x0,119c <_fflush_r+0x40>
    11cc:	000037b7          	lui	x15,0x3
    11d0:	3f478793          	addi	x15,x15,1012 # 33f4 <__sf_fake_stderr>
    11d4:	fcf594e3          	bne	x11,x15,119c <_fflush_r+0x40>
    11d8:	00c42583          	lw	x11,12(x8)
    11dc:	fc1ff06f          	jal	x0,119c <_fflush_r+0x40>
    11e0:	01c12083          	lw	x1,28(x2)
    11e4:	01812403          	lw	x8,24(x2)
    11e8:	00000513          	addi	x10,x0,0
    11ec:	02010113          	addi	x2,x2,32
    11f0:	00008067          	jalr	x0,0(x1)
    11f4:	00000513          	addi	x10,x0,0
    11f8:	00008067          	jalr	x0,0(x1)

000011fc <fflush>:
    11fc:	00050593          	addi	x11,x10,0
    1200:	00051a63          	bne	x10,x0,1214 <fflush+0x18>
    1204:	8f01a503          	lw	x10,-1808(x3) # 35d8 <_global_impure_ptr>
    1208:	000015b7          	lui	x11,0x1
    120c:	15c58593          	addi	x11,x11,348 # 115c <_fflush_r>
    1210:	38c0006f          	jal	x0,159c <_fwalk_reent>
    1214:	8f81a503          	lw	x10,-1800(x3) # 35e0 <_impure_ptr>
    1218:	f45ff06f          	jal	x0,115c <_fflush_r>

0000121c <__fp_lock>:
    121c:	00000513          	addi	x10,x0,0
    1220:	00008067          	jalr	x0,0(x1)

00001224 <std>:
    1224:	ff010113          	addi	x2,x2,-16
    1228:	00812423          	sw	x8,8(x2)
    122c:	00112623          	sw	x1,12(x2)
    1230:	00050413          	addi	x8,x10,0
    1234:	00b51623          	sh	x11,12(x10)
    1238:	00c51723          	sh	x12,14(x10)
    123c:	00052023          	sw	x0,0(x10)
    1240:	00052223          	sw	x0,4(x10)
    1244:	00052423          	sw	x0,8(x10)
    1248:	06052223          	sw	x0,100(x10)
    124c:	00052823          	sw	x0,16(x10)
    1250:	00052a23          	sw	x0,20(x10)
    1254:	00052c23          	sw	x0,24(x10)
    1258:	00800613          	addi	x12,x0,8
    125c:	00000593          	addi	x11,x0,0
    1260:	05c50513          	addi	x10,x10,92
    1264:	bc8ff0ef          	jal	x1,62c <memset>
    1268:	000027b7          	lui	x15,0x2
    126c:	5e878793          	addi	x15,x15,1512 # 25e8 <__sread>
    1270:	02f42223          	sw	x15,36(x8)
    1274:	000027b7          	lui	x15,0x2
    1278:	64078793          	addi	x15,x15,1600 # 2640 <__swrite>
    127c:	02f42423          	sw	x15,40(x8)
    1280:	000027b7          	lui	x15,0x2
    1284:	6c478793          	addi	x15,x15,1732 # 26c4 <__sseek>
    1288:	02f42623          	sw	x15,44(x8)
    128c:	000027b7          	lui	x15,0x2
    1290:	71c78793          	addi	x15,x15,1820 # 271c <__sclose>
    1294:	00c12083          	lw	x1,12(x2)
    1298:	02842023          	sw	x8,32(x8)
    129c:	02f42823          	sw	x15,48(x8)
    12a0:	00812403          	lw	x8,8(x2)
    12a4:	01010113          	addi	x2,x2,16
    12a8:	00008067          	jalr	x0,0(x1)

000012ac <_cleanup_r>:
    12ac:	000025b7          	lui	x11,0x2
    12b0:	7bc58593          	addi	x11,x11,1980 # 27bc <_fclose_r>
    12b4:	2e80006f          	jal	x0,159c <_fwalk_reent>

000012b8 <__fp_unlock>:
    12b8:	00000513          	addi	x10,x0,0
    12bc:	00008067          	jalr	x0,0(x1)

000012c0 <__sfmoreglue>:
    12c0:	ff010113          	addi	x2,x2,-16
    12c4:	00912223          	sw	x9,4(x2)
    12c8:	06800793          	addi	x15,x0,104
    12cc:	fff58493          	addi	x9,x11,-1
    12d0:	02f484b3          	mul	x9,x9,x15
    12d4:	01212023          	sw	x18,0(x2)
    12d8:	00058913          	addi	x18,x11,0
    12dc:	00812423          	sw	x8,8(x2)
    12e0:	00112623          	sw	x1,12(x2)
    12e4:	07448593          	addi	x11,x9,116
    12e8:	668000ef          	jal	x1,1950 <_malloc_r>
    12ec:	00050413          	addi	x8,x10,0
    12f0:	02050063          	beq	x10,x0,1310 <__sfmoreglue+0x50>
    12f4:	00052023          	sw	x0,0(x10)
    12f8:	01252223          	sw	x18,4(x10)
    12fc:	00c50513          	addi	x10,x10,12
    1300:	00a42423          	sw	x10,8(x8)
    1304:	06848613          	addi	x12,x9,104
    1308:	00000593          	addi	x11,x0,0
    130c:	b20ff0ef          	jal	x1,62c <memset>
    1310:	00c12083          	lw	x1,12(x2)
    1314:	00040513          	addi	x10,x8,0
    1318:	00812403          	lw	x8,8(x2)
    131c:	00412483          	lw	x9,4(x2)
    1320:	00012903          	lw	x18,0(x2)
    1324:	01010113          	addi	x2,x2,16
    1328:	00008067          	jalr	x0,0(x1)

0000132c <_cleanup>:
    132c:	8f01a503          	lw	x10,-1808(x3) # 35d8 <_global_impure_ptr>
    1330:	f7dff06f          	jal	x0,12ac <_cleanup_r>

00001334 <__sinit>:
    1334:	01852783          	lw	x15,24(x10)
    1338:	0a079463          	bne	x15,x0,13e0 <__sinit+0xac>
    133c:	ff010113          	addi	x2,x2,-16
    1340:	000017b7          	lui	x15,0x1
    1344:	00812423          	sw	x8,8(x2)
    1348:	00112623          	sw	x1,12(x2)
    134c:	2ac78793          	addi	x15,x15,684 # 12ac <_cleanup_r>
    1350:	02f52423          	sw	x15,40(x10)
    1354:	8f01a783          	lw	x15,-1808(x3) # 35d8 <_global_impure_ptr>
    1358:	0c052c23          	sw	x0,216(x10)
    135c:	0c052e23          	sw	x0,220(x10)
    1360:	0e052023          	sw	x0,224(x10)
    1364:	00050413          	addi	x8,x10,0
    1368:	00f51663          	bne	x10,x15,1374 <__sinit+0x40>
    136c:	00100793          	addi	x15,x0,1
    1370:	00f52c23          	sw	x15,24(x10)
    1374:	00040513          	addi	x10,x8,0
    1378:	06c000ef          	jal	x1,13e4 <__sfp>
    137c:	00a42223          	sw	x10,4(x8)
    1380:	00040513          	addi	x10,x8,0
    1384:	060000ef          	jal	x1,13e4 <__sfp>
    1388:	00a42423          	sw	x10,8(x8)
    138c:	00040513          	addi	x10,x8,0
    1390:	054000ef          	jal	x1,13e4 <__sfp>
    1394:	00a42623          	sw	x10,12(x8)
    1398:	00442503          	lw	x10,4(x8)
    139c:	00000613          	addi	x12,x0,0
    13a0:	00400593          	addi	x11,x0,4
    13a4:	e81ff0ef          	jal	x1,1224 <std>
    13a8:	00842503          	lw	x10,8(x8)
    13ac:	00100613          	addi	x12,x0,1
    13b0:	00900593          	addi	x11,x0,9
    13b4:	e71ff0ef          	jal	x1,1224 <std>
    13b8:	00c42503          	lw	x10,12(x8)
    13bc:	00200613          	addi	x12,x0,2
    13c0:	01200593          	addi	x11,x0,18
    13c4:	e61ff0ef          	jal	x1,1224 <std>
    13c8:	00100793          	addi	x15,x0,1
    13cc:	00c12083          	lw	x1,12(x2)
    13d0:	00f42c23          	sw	x15,24(x8)
    13d4:	00812403          	lw	x8,8(x2)
    13d8:	01010113          	addi	x2,x2,16
    13dc:	00008067          	jalr	x0,0(x1)
    13e0:	00008067          	jalr	x0,0(x1)

000013e4 <__sfp>:
    13e4:	ff010113          	addi	x2,x2,-16
    13e8:	00912223          	sw	x9,4(x2)
    13ec:	8f01a483          	lw	x9,-1808(x3) # 35d8 <_global_impure_ptr>
    13f0:	01212023          	sw	x18,0(x2)
    13f4:	00112623          	sw	x1,12(x2)
    13f8:	0184a783          	lw	x15,24(x9)
    13fc:	00812423          	sw	x8,8(x2)
    1400:	00050913          	addi	x18,x10,0
    1404:	00079663          	bne	x15,x0,1410 <__sfp+0x2c>
    1408:	00048513          	addi	x10,x9,0
    140c:	f29ff0ef          	jal	x1,1334 <__sinit>
    1410:	0d848493          	addi	x9,x9,216
    1414:	0084a403          	lw	x8,8(x9)
    1418:	0044a783          	lw	x15,4(x9)
    141c:	fff78793          	addi	x15,x15,-1
    1420:	0007da63          	bge	x15,x0,1434 <__sfp+0x50>
    1424:	0004a783          	lw	x15,0(x9)
    1428:	08078063          	beq	x15,x0,14a8 <__sfp+0xc4>
    142c:	0004a483          	lw	x9,0(x9)
    1430:	fe5ff06f          	jal	x0,1414 <__sfp+0x30>
    1434:	00c41703          	lh	x14,12(x8)
    1438:	06071463          	bne	x14,x0,14a0 <__sfp+0xbc>
    143c:	ffff07b7          	lui	x15,0xffff0
    1440:	00178793          	addi	x15,x15,1 # ffff0001 <__heap_end+0xffbf0001>
    1444:	06042223          	sw	x0,100(x8)
    1448:	00042023          	sw	x0,0(x8)
    144c:	00042223          	sw	x0,4(x8)
    1450:	00042423          	sw	x0,8(x8)
    1454:	00f42623          	sw	x15,12(x8)
    1458:	00042823          	sw	x0,16(x8)
    145c:	00042a23          	sw	x0,20(x8)
    1460:	00042c23          	sw	x0,24(x8)
    1464:	00800613          	addi	x12,x0,8
    1468:	00000593          	addi	x11,x0,0
    146c:	05c40513          	addi	x10,x8,92
    1470:	9bcff0ef          	jal	x1,62c <memset>
    1474:	02042a23          	sw	x0,52(x8)
    1478:	02042c23          	sw	x0,56(x8)
    147c:	04042423          	sw	x0,72(x8)
    1480:	04042623          	sw	x0,76(x8)
    1484:	00c12083          	lw	x1,12(x2)
    1488:	00040513          	addi	x10,x8,0
    148c:	00812403          	lw	x8,8(x2)
    1490:	00412483          	lw	x9,4(x2)
    1494:	00012903          	lw	x18,0(x2)
    1498:	01010113          	addi	x2,x2,16
    149c:	00008067          	jalr	x0,0(x1)
    14a0:	06840413          	addi	x8,x8,104
    14a4:	f79ff06f          	jal	x0,141c <__sfp+0x38>
    14a8:	00400593          	addi	x11,x0,4
    14ac:	00090513          	addi	x10,x18,0
    14b0:	e11ff0ef          	jal	x1,12c0 <__sfmoreglue>
    14b4:	00a4a023          	sw	x10,0(x9)
    14b8:	00050413          	addi	x8,x10,0
    14bc:	f60518e3          	bne	x10,x0,142c <__sfp+0x48>
    14c0:	00c00793          	addi	x15,x0,12
    14c4:	00f92023          	sw	x15,0(x18)
    14c8:	fbdff06f          	jal	x0,1484 <__sfp+0xa0>

000014cc <__sfp_lock_acquire>:
    14cc:	00008067          	jalr	x0,0(x1)

000014d0 <__sfp_lock_release>:
    14d0:	00008067          	jalr	x0,0(x1)

000014d4 <__sinit_lock_acquire>:
    14d4:	00008067          	jalr	x0,0(x1)

000014d8 <__sinit_lock_release>:
    14d8:	00008067          	jalr	x0,0(x1)

000014dc <__fp_lock_all>:
    14dc:	8f81a503          	lw	x10,-1800(x3) # 35e0 <_impure_ptr>
    14e0:	000015b7          	lui	x11,0x1
    14e4:	21c58593          	addi	x11,x11,540 # 121c <__fp_lock>
    14e8:	0140006f          	jal	x0,14fc <_fwalk>

000014ec <__fp_unlock_all>:
    14ec:	8f81a503          	lw	x10,-1800(x3) # 35e0 <_impure_ptr>
    14f0:	000015b7          	lui	x11,0x1
    14f4:	2b858593          	addi	x11,x11,696 # 12b8 <__fp_unlock>
    14f8:	0040006f          	jal	x0,14fc <_fwalk>

000014fc <_fwalk>:
    14fc:	fe010113          	addi	x2,x2,-32
    1500:	00812c23          	sw	x8,24(x2)
    1504:	01212823          	sw	x18,16(x2)
    1508:	01312623          	sw	x19,12(x2)
    150c:	01512223          	sw	x21,4(x2)
    1510:	01612023          	sw	x22,0(x2)
    1514:	00112e23          	sw	x1,28(x2)
    1518:	00912a23          	sw	x9,20(x2)
    151c:	01412423          	sw	x20,8(x2)
    1520:	00058993          	addi	x19,x11,0
    1524:	0d850413          	addi	x8,x10,216
    1528:	00000913          	addi	x18,x0,0
    152c:	00100a93          	addi	x21,x0,1
    1530:	fff00b13          	addi	x22,x0,-1
    1534:	00842483          	lw	x9,8(x8)
    1538:	00442a03          	lw	x20,4(x8)
    153c:	fffa0a13          	addi	x20,x20,-1
    1540:	020a5c63          	bge	x20,x0,1578 <_fwalk+0x7c>
    1544:	00042403          	lw	x8,0(x8)
    1548:	fe0416e3          	bne	x8,x0,1534 <_fwalk+0x38>
    154c:	01c12083          	lw	x1,28(x2)
    1550:	01812403          	lw	x8,24(x2)
    1554:	01412483          	lw	x9,20(x2)
    1558:	00c12983          	lw	x19,12(x2)
    155c:	00812a03          	lw	x20,8(x2)
    1560:	00412a83          	lw	x21,4(x2)
    1564:	00012b03          	lw	x22,0(x2)
    1568:	00090513          	addi	x10,x18,0
    156c:	01012903          	lw	x18,16(x2)
    1570:	02010113          	addi	x2,x2,32
    1574:	00008067          	jalr	x0,0(x1)
    1578:	00c4d783          	lhu	x15,12(x9)
    157c:	00fafc63          	bgeu	x21,x15,1594 <_fwalk+0x98>
    1580:	00e49783          	lh	x15,14(x9)
    1584:	01678863          	beq	x15,x22,1594 <_fwalk+0x98>
    1588:	00048513          	addi	x10,x9,0
    158c:	000980e7          	jalr	x1,0(x19)
    1590:	00a96933          	or	x18,x18,x10
    1594:	06848493          	addi	x9,x9,104
    1598:	fa5ff06f          	jal	x0,153c <_fwalk+0x40>

0000159c <_fwalk_reent>:
    159c:	fd010113          	addi	x2,x2,-48
    15a0:	02812423          	sw	x8,40(x2)
    15a4:	03212023          	sw	x18,32(x2)
    15a8:	01312e23          	sw	x19,28(x2)
    15ac:	01412c23          	sw	x20,24(x2)
    15b0:	01612823          	sw	x22,16(x2)
    15b4:	01712623          	sw	x23,12(x2)
    15b8:	02112623          	sw	x1,44(x2)
    15bc:	02912223          	sw	x9,36(x2)
    15c0:	01512a23          	sw	x21,20(x2)
    15c4:	00050913          	addi	x18,x10,0
    15c8:	00058a13          	addi	x20,x11,0
    15cc:	0d850413          	addi	x8,x10,216
    15d0:	00000993          	addi	x19,x0,0
    15d4:	00100b13          	addi	x22,x0,1
    15d8:	fff00b93          	addi	x23,x0,-1
    15dc:	00842483          	lw	x9,8(x8)
    15e0:	00442a83          	lw	x21,4(x8)
    15e4:	fffa8a93          	addi	x21,x21,-1
    15e8:	020ade63          	bge	x21,x0,1624 <_fwalk_reent+0x88>
    15ec:	00042403          	lw	x8,0(x8)
    15f0:	fe0416e3          	bne	x8,x0,15dc <_fwalk_reent+0x40>
    15f4:	02c12083          	lw	x1,44(x2)
    15f8:	02812403          	lw	x8,40(x2)
    15fc:	02412483          	lw	x9,36(x2)
    1600:	02012903          	lw	x18,32(x2)
    1604:	01812a03          	lw	x20,24(x2)
    1608:	01412a83          	lw	x21,20(x2)
    160c:	01012b03          	lw	x22,16(x2)
    1610:	00c12b83          	lw	x23,12(x2)
    1614:	00098513          	addi	x10,x19,0
    1618:	01c12983          	lw	x19,28(x2)
    161c:	03010113          	addi	x2,x2,48
    1620:	00008067          	jalr	x0,0(x1)
    1624:	00c4d783          	lhu	x15,12(x9)
    1628:	00fb7e63          	bgeu	x22,x15,1644 <_fwalk_reent+0xa8>
    162c:	00e49783          	lh	x15,14(x9)
    1630:	01778a63          	beq	x15,x23,1644 <_fwalk_reent+0xa8>
    1634:	00048593          	addi	x11,x9,0
    1638:	00090513          	addi	x10,x18,0
    163c:	000a00e7          	jalr	x1,0(x20)
    1640:	00a9e9b3          	or	x19,x19,x10
    1644:	06848493          	addi	x9,x9,104
    1648:	f9dff06f          	jal	x0,15e4 <_fwalk_reent+0x48>

0000164c <__swhatbuf_r>:
    164c:	f9010113          	addi	x2,x2,-112
    1650:	06812423          	sw	x8,104(x2)
    1654:	00058413          	addi	x8,x11,0
    1658:	00e59583          	lh	x11,14(x11)
    165c:	06912223          	sw	x9,100(x2)
    1660:	07212023          	sw	x18,96(x2)
    1664:	06112623          	sw	x1,108(x2)
    1668:	00060493          	addi	x9,x12,0
    166c:	00068913          	addi	x18,x13,0 # 1000 <__sflush_r+0xa0>
    1670:	0205de63          	bge	x11,x0,16ac <__swhatbuf_r+0x60>
    1674:	00c45783          	lhu	x15,12(x8)
    1678:	0807f793          	andi	x15,x15,128
    167c:	04078e63          	beq	x15,x0,16d8 <__swhatbuf_r+0x8c>
    1680:	00000793          	addi	x15,x0,0
    1684:	04000713          	addi	x14,x0,64
    1688:	06c12083          	lw	x1,108(x2)
    168c:	06812403          	lw	x8,104(x2)
    1690:	00f92023          	sw	x15,0(x18)
    1694:	00e4a023          	sw	x14,0(x9)
    1698:	06012903          	lw	x18,96(x2)
    169c:	06412483          	lw	x9,100(x2)
    16a0:	00000513          	addi	x10,x0,0
    16a4:	07010113          	addi	x2,x2,112
    16a8:	00008067          	jalr	x0,0(x1)
    16ac:	00810613          	addi	x12,x2,8
    16b0:	22c010ef          	jal	x1,28dc <_fstat_r>
    16b4:	fc0540e3          	blt	x10,x0,1674 <__swhatbuf_r+0x28>
    16b8:	00c12703          	lw	x14,12(x2)
    16bc:	0000f7b7          	lui	x15,0xf
    16c0:	00e7f7b3          	and	x15,x15,x14
    16c4:	ffffe737          	lui	x14,0xffffe
    16c8:	00e787b3          	add	x15,x15,x14
    16cc:	0017b793          	sltiu	x15,x15,1
    16d0:	40000713          	addi	x14,x0,1024
    16d4:	fb5ff06f          	jal	x0,1688 <__swhatbuf_r+0x3c>
    16d8:	00000793          	addi	x15,x0,0
    16dc:	ff5ff06f          	jal	x0,16d0 <__swhatbuf_r+0x84>

000016e0 <__smakebuf_r>:
    16e0:	00c5d783          	lhu	x15,12(x11)
    16e4:	fd010113          	addi	x2,x2,-48
    16e8:	02812423          	sw	x8,40(x2)
    16ec:	02112623          	sw	x1,44(x2)
    16f0:	02912223          	sw	x9,36(x2)
    16f4:	03212023          	sw	x18,32(x2)
    16f8:	01312e23          	sw	x19,28(x2)
    16fc:	0027f793          	andi	x15,x15,2
    1700:	00058413          	addi	x8,x11,0
    1704:	02078a63          	beq	x15,x0,1738 <__smakebuf_r+0x58>
    1708:	04740793          	addi	x15,x8,71
    170c:	00f42023          	sw	x15,0(x8)
    1710:	00f42823          	sw	x15,16(x8)
    1714:	00100793          	addi	x15,x0,1
    1718:	00f42a23          	sw	x15,20(x8)
    171c:	02c12083          	lw	x1,44(x2)
    1720:	02812403          	lw	x8,40(x2)
    1724:	02412483          	lw	x9,36(x2)
    1728:	02012903          	lw	x18,32(x2)
    172c:	01c12983          	lw	x19,28(x2)
    1730:	03010113          	addi	x2,x2,48
    1734:	00008067          	jalr	x0,0(x1)
    1738:	00c10693          	addi	x13,x2,12
    173c:	00810613          	addi	x12,x2,8
    1740:	00050493          	addi	x9,x10,0
    1744:	f09ff0ef          	jal	x1,164c <__swhatbuf_r>
    1748:	00812983          	lw	x19,8(x2)
    174c:	00050913          	addi	x18,x10,0
    1750:	00048513          	addi	x10,x9,0
    1754:	00098593          	addi	x11,x19,0
    1758:	1f8000ef          	jal	x1,1950 <_malloc_r>
    175c:	02051063          	bne	x10,x0,177c <__smakebuf_r+0x9c>
    1760:	00c41783          	lh	x15,12(x8)
    1764:	2007f713          	andi	x14,x15,512
    1768:	fa071ae3          	bne	x14,x0,171c <__smakebuf_r+0x3c>
    176c:	ffc7f793          	andi	x15,x15,-4
    1770:	0027e793          	ori	x15,x15,2
    1774:	00f41623          	sh	x15,12(x8)
    1778:	f91ff06f          	jal	x0,1708 <__smakebuf_r+0x28>
    177c:	000017b7          	lui	x15,0x1
    1780:	2ac78793          	addi	x15,x15,684 # 12ac <_cleanup_r>
    1784:	02f4a423          	sw	x15,40(x9)
    1788:	00c45783          	lhu	x15,12(x8)
    178c:	00a42023          	sw	x10,0(x8)
    1790:	00a42823          	sw	x10,16(x8)
    1794:	0807e793          	ori	x15,x15,128
    1798:	00f41623          	sh	x15,12(x8)
    179c:	00c12783          	lw	x15,12(x2)
    17a0:	01342a23          	sw	x19,20(x8)
    17a4:	02078263          	beq	x15,x0,17c8 <__smakebuf_r+0xe8>
    17a8:	00e41583          	lh	x11,14(x8)
    17ac:	00048513          	addi	x10,x9,0
    17b0:	5d4010ef          	jal	x1,2d84 <_isatty_r>
    17b4:	00050a63          	beq	x10,x0,17c8 <__smakebuf_r+0xe8>
    17b8:	00c45783          	lhu	x15,12(x8)
    17bc:	ffc7f793          	andi	x15,x15,-4
    17c0:	0017e793          	ori	x15,x15,1
    17c4:	00f41623          	sh	x15,12(x8)
    17c8:	00c45783          	lhu	x15,12(x8)
    17cc:	0127e533          	or	x10,x15,x18
    17d0:	00a41623          	sh	x10,12(x8)
    17d4:	f49ff06f          	jal	x0,171c <__smakebuf_r+0x3c>

000017d8 <_free_r>:
    17d8:	0e058a63          	beq	x11,x0,18cc <_free_r+0xf4>
    17dc:	ffc5a783          	lw	x15,-4(x11)
    17e0:	fe010113          	addi	x2,x2,-32
    17e4:	00812c23          	sw	x8,24(x2)
    17e8:	00112e23          	sw	x1,28(x2)
    17ec:	ffc58413          	addi	x8,x11,-4
    17f0:	0007d463          	bge	x15,x0,17f8 <_free_r+0x20>
    17f4:	00f40433          	add	x8,x8,x15
    17f8:	00a12623          	sw	x10,12(x2)
    17fc:	6a4010ef          	jal	x1,2ea0 <__malloc_lock>
    1800:	9041a783          	lw	x15,-1788(x3) # 35ec <__malloc_free_list>
    1804:	00c12503          	lw	x10,12(x2)
    1808:	00079e63          	bne	x15,x0,1824 <_free_r+0x4c>
    180c:	00042223          	sw	x0,4(x8)
    1810:	9081a223          	sw	x8,-1788(x3) # 35ec <__malloc_free_list>
    1814:	01812403          	lw	x8,24(x2)
    1818:	01c12083          	lw	x1,28(x2)
    181c:	02010113          	addi	x2,x2,32
    1820:	6840106f          	jal	x0,2ea4 <__malloc_unlock>
    1824:	02f47463          	bgeu	x8,x15,184c <_free_r+0x74>
    1828:	00042603          	lw	x12,0(x8)
    182c:	00c406b3          	add	x13,x8,x12
    1830:	00d79a63          	bne	x15,x13,1844 <_free_r+0x6c>
    1834:	0007a683          	lw	x13,0(x15)
    1838:	0047a783          	lw	x15,4(x15)
    183c:	00c686b3          	add	x13,x13,x12
    1840:	00d42023          	sw	x13,0(x8)
    1844:	00f42223          	sw	x15,4(x8)
    1848:	fc9ff06f          	jal	x0,1810 <_free_r+0x38>
    184c:	00078713          	addi	x14,x15,0
    1850:	0047a783          	lw	x15,4(x15)
    1854:	00078463          	beq	x15,x0,185c <_free_r+0x84>
    1858:	fef47ae3          	bgeu	x8,x15,184c <_free_r+0x74>
    185c:	00072683          	lw	x13,0(x14) # ffffe000 <__heap_end+0xffbfe000>
    1860:	00d70633          	add	x12,x14,x13
    1864:	02861863          	bne	x12,x8,1894 <_free_r+0xbc>
    1868:	00042603          	lw	x12,0(x8)
    186c:	00c686b3          	add	x13,x13,x12
    1870:	00d72023          	sw	x13,0(x14)
    1874:	00d70633          	add	x12,x14,x13
    1878:	f8c79ee3          	bne	x15,x12,1814 <_free_r+0x3c>
    187c:	0007a603          	lw	x12,0(x15)
    1880:	0047a783          	lw	x15,4(x15)
    1884:	00d606b3          	add	x13,x12,x13
    1888:	00d72023          	sw	x13,0(x14)
    188c:	00f72223          	sw	x15,4(x14)
    1890:	f85ff06f          	jal	x0,1814 <_free_r+0x3c>
    1894:	00c47863          	bgeu	x8,x12,18a4 <_free_r+0xcc>
    1898:	00c00793          	addi	x15,x0,12
    189c:	00f52023          	sw	x15,0(x10)
    18a0:	f75ff06f          	jal	x0,1814 <_free_r+0x3c>
    18a4:	00042603          	lw	x12,0(x8)
    18a8:	00c406b3          	add	x13,x8,x12
    18ac:	00d79a63          	bne	x15,x13,18c0 <_free_r+0xe8>
    18b0:	0007a683          	lw	x13,0(x15)
    18b4:	0047a783          	lw	x15,4(x15)
    18b8:	00c686b3          	add	x13,x13,x12
    18bc:	00d42023          	sw	x13,0(x8)
    18c0:	00f42223          	sw	x15,4(x8)
    18c4:	00872223          	sw	x8,4(x14)
    18c8:	f4dff06f          	jal	x0,1814 <_free_r+0x3c>
    18cc:	00008067          	jalr	x0,0(x1)

000018d0 <sbrk_aligned>:
    18d0:	ff010113          	addi	x2,x2,-16
    18d4:	01212023          	sw	x18,0(x2)
    18d8:	9001a783          	lw	x15,-1792(x3) # 35e8 <__malloc_sbrk_start>
    18dc:	00812423          	sw	x8,8(x2)
    18e0:	00912223          	sw	x9,4(x2)
    18e4:	00112623          	sw	x1,12(x2)
    18e8:	00050493          	addi	x9,x10,0
    18ec:	00058413          	addi	x8,x11,0
    18f0:	00079863          	bne	x15,x0,1900 <sbrk_aligned+0x30>
    18f4:	00000593          	addi	x11,x0,0
    18f8:	4a9000ef          	jal	x1,25a0 <_sbrk_r>
    18fc:	90a1a023          	sw	x10,-1792(x3) # 35e8 <__malloc_sbrk_start>
    1900:	00040593          	addi	x11,x8,0
    1904:	00048513          	addi	x10,x9,0
    1908:	499000ef          	jal	x1,25a0 <_sbrk_r>
    190c:	fff00913          	addi	x18,x0,-1
    1910:	03250063          	beq	x10,x18,1930 <sbrk_aligned+0x60>
    1914:	00350413          	addi	x8,x10,3
    1918:	ffc47413          	andi	x8,x8,-4
    191c:	00850c63          	beq	x10,x8,1934 <sbrk_aligned+0x64>
    1920:	40a405b3          	sub	x11,x8,x10
    1924:	00048513          	addi	x10,x9,0
    1928:	479000ef          	jal	x1,25a0 <_sbrk_r>
    192c:	01251463          	bne	x10,x18,1934 <sbrk_aligned+0x64>
    1930:	fff00413          	addi	x8,x0,-1
    1934:	00c12083          	lw	x1,12(x2)
    1938:	00040513          	addi	x10,x8,0
    193c:	00812403          	lw	x8,8(x2)
    1940:	00412483          	lw	x9,4(x2)
    1944:	00012903          	lw	x18,0(x2)
    1948:	01010113          	addi	x2,x2,16
    194c:	00008067          	jalr	x0,0(x1)

00001950 <_malloc_r>:
    1950:	fe010113          	addi	x2,x2,-32
    1954:	00912a23          	sw	x9,20(x2)
    1958:	00358493          	addi	x9,x11,3
    195c:	ffc4f493          	andi	x9,x9,-4
    1960:	01312623          	sw	x19,12(x2)
    1964:	00112e23          	sw	x1,28(x2)
    1968:	00812c23          	sw	x8,24(x2)
    196c:	01212823          	sw	x18,16(x2)
    1970:	01412423          	sw	x20,8(x2)
    1974:	00848493          	addi	x9,x9,8
    1978:	00c00793          	addi	x15,x0,12
    197c:	00050993          	addi	x19,x10,0
    1980:	0af4f063          	bgeu	x9,x15,1a20 <_malloc_r+0xd0>
    1984:	00c00493          	addi	x9,x0,12
    1988:	08b4ee63          	bltu	x9,x11,1a24 <_malloc_r+0xd4>
    198c:	00098513          	addi	x10,x19,0
    1990:	510010ef          	jal	x1,2ea0 <__malloc_lock>
    1994:	9041a783          	lw	x15,-1788(x3) # 35ec <__malloc_free_list>
    1998:	00078413          	addi	x8,x15,0
    199c:	0a041c63          	bne	x8,x0,1a54 <_malloc_r+0x104>
    19a0:	00048593          	addi	x11,x9,0
    19a4:	00098513          	addi	x10,x19,0
    19a8:	f29ff0ef          	jal	x1,18d0 <sbrk_aligned>
    19ac:	fff00793          	addi	x15,x0,-1
    19b0:	00050413          	addi	x8,x10,0
    19b4:	14f51463          	bne	x10,x15,1afc <_malloc_r+0x1ac>
    19b8:	9041a403          	lw	x8,-1788(x3) # 35ec <__malloc_free_list>
    19bc:	00040913          	addi	x18,x8,0
    19c0:	10091e63          	bne	x18,x0,1adc <_malloc_r+0x18c>
    19c4:	00042a03          	lw	x20,0(x8)
    19c8:	00000593          	addi	x11,x0,0
    19cc:	00098513          	addi	x10,x19,0
    19d0:	01440a33          	add	x20,x8,x20
    19d4:	3cd000ef          	jal	x1,25a0 <_sbrk_r>
    19d8:	10aa1863          	bne	x20,x10,1ae8 <_malloc_r+0x198>
    19dc:	00042783          	lw	x15,0(x8)
    19e0:	00348493          	addi	x9,x9,3
    19e4:	40f484b3          	sub	x9,x9,x15
    19e8:	ffc4f493          	andi	x9,x9,-4
    19ec:	00848493          	addi	x9,x9,8
    19f0:	00c00793          	addi	x15,x0,12
    19f4:	00f4f463          	bgeu	x9,x15,19fc <_malloc_r+0xac>
    19f8:	00c00493          	addi	x9,x0,12
    19fc:	00048593          	addi	x11,x9,0
    1a00:	00098513          	addi	x10,x19,0
    1a04:	ecdff0ef          	jal	x1,18d0 <sbrk_aligned>
    1a08:	fff00793          	addi	x15,x0,-1
    1a0c:	0cf50e63          	beq	x10,x15,1ae8 <_malloc_r+0x198>
    1a10:	00042783          	lw	x15,0(x8)
    1a14:	009787b3          	add	x15,x15,x9
    1a18:	00f42023          	sw	x15,0(x8)
    1a1c:	0680006f          	jal	x0,1a84 <_malloc_r+0x134>
    1a20:	f604d4e3          	bge	x9,x0,1988 <_malloc_r+0x38>
    1a24:	00c00793          	addi	x15,x0,12
    1a28:	00f9a023          	sw	x15,0(x19)
    1a2c:	00000913          	addi	x18,x0,0
    1a30:	01c12083          	lw	x1,28(x2)
    1a34:	01812403          	lw	x8,24(x2)
    1a38:	01412483          	lw	x9,20(x2)
    1a3c:	00c12983          	lw	x19,12(x2)
    1a40:	00812a03          	lw	x20,8(x2)
    1a44:	00090513          	addi	x10,x18,0
    1a48:	01012903          	lw	x18,16(x2)
    1a4c:	02010113          	addi	x2,x2,32
    1a50:	00008067          	jalr	x0,0(x1)
    1a54:	00042683          	lw	x13,0(x8)
    1a58:	409686b3          	sub	x13,x13,x9
    1a5c:	0606ca63          	blt	x13,x0,1ad0 <_malloc_r+0x180>
    1a60:	00b00713          	addi	x14,x0,11
    1a64:	04d77a63          	bgeu	x14,x13,1ab8 <_malloc_r+0x168>
    1a68:	00942023          	sw	x9,0(x8)
    1a6c:	00940733          	add	x14,x8,x9
    1a70:	04879063          	bne	x15,x8,1ab0 <_malloc_r+0x160>
    1a74:	90e1a223          	sw	x14,-1788(x3) # 35ec <__malloc_free_list>
    1a78:	00442783          	lw	x15,4(x8)
    1a7c:	00d72023          	sw	x13,0(x14)
    1a80:	00f72223          	sw	x15,4(x14)
    1a84:	00098513          	addi	x10,x19,0
    1a88:	41c010ef          	jal	x1,2ea4 <__malloc_unlock>
    1a8c:	00b40913          	addi	x18,x8,11
    1a90:	00440793          	addi	x15,x8,4
    1a94:	ff897913          	andi	x18,x18,-8
    1a98:	40f90733          	sub	x14,x18,x15
    1a9c:	f8f90ae3          	beq	x18,x15,1a30 <_malloc_r+0xe0>
    1aa0:	00e40433          	add	x8,x8,x14
    1aa4:	412787b3          	sub	x15,x15,x18
    1aa8:	00f42023          	sw	x15,0(x8)
    1aac:	f85ff06f          	jal	x0,1a30 <_malloc_r+0xe0>
    1ab0:	00e7a223          	sw	x14,4(x15)
    1ab4:	fc5ff06f          	jal	x0,1a78 <_malloc_r+0x128>
    1ab8:	00442703          	lw	x14,4(x8)
    1abc:	00879663          	bne	x15,x8,1ac8 <_malloc_r+0x178>
    1ac0:	90e1a223          	sw	x14,-1788(x3) # 35ec <__malloc_free_list>
    1ac4:	fc1ff06f          	jal	x0,1a84 <_malloc_r+0x134>
    1ac8:	00e7a223          	sw	x14,4(x15)
    1acc:	fb9ff06f          	jal	x0,1a84 <_malloc_r+0x134>
    1ad0:	00040793          	addi	x15,x8,0
    1ad4:	00442403          	lw	x8,4(x8)
    1ad8:	ec5ff06f          	jal	x0,199c <_malloc_r+0x4c>
    1adc:	00090413          	addi	x8,x18,0
    1ae0:	00492903          	lw	x18,4(x18)
    1ae4:	eddff06f          	jal	x0,19c0 <_malloc_r+0x70>
    1ae8:	00c00793          	addi	x15,x0,12
    1aec:	00f9a023          	sw	x15,0(x19)
    1af0:	00098513          	addi	x10,x19,0
    1af4:	3b0010ef          	jal	x1,2ea4 <__malloc_unlock>
    1af8:	f39ff06f          	jal	x0,1a30 <_malloc_r+0xe0>
    1afc:	00952023          	sw	x9,0(x10)
    1b00:	f85ff06f          	jal	x0,1a84 <_malloc_r+0x134>

00001b04 <__sfputc_r>:
    1b04:	00862783          	lw	x15,8(x12)
    1b08:	fff78793          	addi	x15,x15,-1
    1b0c:	00f62423          	sw	x15,8(x12)
    1b10:	0007dc63          	bge	x15,x0,1b28 <__sfputc_r+0x24>
    1b14:	01862703          	lw	x14,24(x12)
    1b18:	00e7c663          	blt	x15,x14,1b24 <__sfputc_r+0x20>
    1b1c:	00a00793          	addi	x15,x0,10
    1b20:	00f59463          	bne	x11,x15,1b28 <__sfputc_r+0x24>
    1b24:	fb9fe06f          	jal	x0,adc <__swbuf_r>
    1b28:	00062783          	lw	x15,0(x12)
    1b2c:	00058513          	addi	x10,x11,0
    1b30:	00178713          	addi	x14,x15,1
    1b34:	00e62023          	sw	x14,0(x12)
    1b38:	00b78023          	sb	x11,0(x15)
    1b3c:	00008067          	jalr	x0,0(x1)

00001b40 <__sfputs_r>:
    1b40:	fe010113          	addi	x2,x2,-32
    1b44:	00812c23          	sw	x8,24(x2)
    1b48:	00912a23          	sw	x9,20(x2)
    1b4c:	01212823          	sw	x18,16(x2)
    1b50:	01312623          	sw	x19,12(x2)
    1b54:	01412423          	sw	x20,8(x2)
    1b58:	00112e23          	sw	x1,28(x2)
    1b5c:	00050913          	addi	x18,x10,0
    1b60:	00058993          	addi	x19,x11,0
    1b64:	00060413          	addi	x8,x12,0
    1b68:	00d604b3          	add	x9,x12,x13
    1b6c:	fff00a13          	addi	x20,x0,-1
    1b70:	00941663          	bne	x8,x9,1b7c <__sfputs_r+0x3c>
    1b74:	00000513          	addi	x10,x0,0
    1b78:	01c0006f          	jal	x0,1b94 <__sfputs_r+0x54>
    1b7c:	00044583          	lbu	x11,0(x8)
    1b80:	00098613          	addi	x12,x19,0
    1b84:	00090513          	addi	x10,x18,0
    1b88:	f7dff0ef          	jal	x1,1b04 <__sfputc_r>
    1b8c:	00140413          	addi	x8,x8,1
    1b90:	ff4510e3          	bne	x10,x20,1b70 <__sfputs_r+0x30>
    1b94:	01c12083          	lw	x1,28(x2)
    1b98:	01812403          	lw	x8,24(x2)
    1b9c:	01412483          	lw	x9,20(x2)
    1ba0:	01012903          	lw	x18,16(x2)
    1ba4:	00c12983          	lw	x19,12(x2)
    1ba8:	00812a03          	lw	x20,8(x2)
    1bac:	02010113          	addi	x2,x2,32
    1bb0:	00008067          	jalr	x0,0(x1)

00001bb4 <__sprint_r>:
    1bb4:	00862783          	lw	x15,8(x12)
    1bb8:	ff010113          	addi	x2,x2,-16
    1bbc:	00812423          	sw	x8,8(x2)
    1bc0:	00112623          	sw	x1,12(x2)
    1bc4:	00060413          	addi	x8,x12,0
    1bc8:	02078063          	beq	x15,x0,1be8 <__sprint_r+0x34>
    1bcc:	55d000ef          	jal	x1,2928 <__sfvwrite_r>
    1bd0:	00042423          	sw	x0,8(x8)
    1bd4:	00c12083          	lw	x1,12(x2)
    1bd8:	00042223          	sw	x0,4(x8)
    1bdc:	00812403          	lw	x8,8(x2)
    1be0:	01010113          	addi	x2,x2,16
    1be4:	00008067          	jalr	x0,0(x1)
    1be8:	00000513          	addi	x10,x0,0
    1bec:	fe9ff06f          	jal	x0,1bd4 <__sprint_r+0x20>

00001bf0 <_vfiprintf_r>:
    1bf0:	f8010113          	addi	x2,x2,-128
    1bf4:	06812c23          	sw	x8,120(x2)
    1bf8:	06912a23          	sw	x9,116(x2)
    1bfc:	07212823          	sw	x18,112(x2)
    1c00:	07312623          	sw	x19,108(x2)
    1c04:	06112e23          	sw	x1,124(x2)
    1c08:	07412423          	sw	x20,104(x2)
    1c0c:	07512223          	sw	x21,100(x2)
    1c10:	07612023          	sw	x22,96(x2)
    1c14:	05712e23          	sw	x23,92(x2)
    1c18:	05812c23          	sw	x24,88(x2)
    1c1c:	05912a23          	sw	x25,84(x2)
    1c20:	05a12823          	sw	x26,80(x2)
    1c24:	00050993          	addi	x19,x10,0
    1c28:	00058493          	addi	x9,x11,0
    1c2c:	00060913          	addi	x18,x12,0
    1c30:	00068413          	addi	x8,x13,0
    1c34:	00050863          	beq	x10,x0,1c44 <_vfiprintf_r+0x54>
    1c38:	01852783          	lw	x15,24(x10)
    1c3c:	00079463          	bne	x15,x0,1c44 <_vfiprintf_r+0x54>
    1c40:	ef4ff0ef          	jal	x1,1334 <__sinit>
    1c44:	000037b7          	lui	x15,0x3
    1c48:	43478793          	addi	x15,x15,1076 # 3434 <__sf_fake_stdin>
    1c4c:	12f49463          	bne	x9,x15,1d74 <_vfiprintf_r+0x184>
    1c50:	0049a483          	lw	x9,4(x19)
    1c54:	00c4d783          	lhu	x15,12(x9)
    1c58:	0087f793          	andi	x15,x15,8
    1c5c:	14078063          	beq	x15,x0,1d9c <_vfiprintf_r+0x1ac>
    1c60:	0104a783          	lw	x15,16(x9)
    1c64:	12078c63          	beq	x15,x0,1d9c <_vfiprintf_r+0x1ac>
    1c68:	02000793          	addi	x15,x0,32
    1c6c:	02f100a3          	sb	x15,33(x2)
    1c70:	03000793          	addi	x15,x0,48
    1c74:	00012e23          	sw	x0,28(x2)
    1c78:	02f10123          	sb	x15,34(x2)
    1c7c:	00812223          	sw	x8,4(x2)
    1c80:	02500b13          	addi	x22,x0,37
    1c84:	00003a37          	lui	x20,0x3
    1c88:	00100b93          	addi	x23,x0,1
    1c8c:	00003ab7          	lui	x21,0x3
    1c90:	00003c37          	lui	x24,0x3
    1c94:	00002cb7          	lui	x25,0x2
    1c98:	00090413          	addi	x8,x18,0
    1c9c:	00044783          	lbu	x15,0(x8)
    1ca0:	00078463          	beq	x15,x0,1ca8 <_vfiprintf_r+0xb8>
    1ca4:	15679263          	bne	x15,x22,1de8 <_vfiprintf_r+0x1f8>
    1ca8:	41240d33          	sub	x26,x8,x18
    1cac:	03240663          	beq	x8,x18,1cd8 <_vfiprintf_r+0xe8>
    1cb0:	000d0693          	addi	x13,x26,0
    1cb4:	00090613          	addi	x12,x18,0
    1cb8:	00048593          	addi	x11,x9,0
    1cbc:	00098513          	addi	x10,x19,0
    1cc0:	e81ff0ef          	jal	x1,1b40 <__sfputs_r>
    1cc4:	fff00793          	addi	x15,x0,-1
    1cc8:	28f50063          	beq	x10,x15,1f48 <_vfiprintf_r+0x358>
    1ccc:	01c12783          	lw	x15,28(x2)
    1cd0:	01a787b3          	add	x15,x15,x26
    1cd4:	00f12e23          	sw	x15,28(x2)
    1cd8:	00044783          	lbu	x15,0(x8)
    1cdc:	26078663          	beq	x15,x0,1f48 <_vfiprintf_r+0x358>
    1ce0:	fff00793          	addi	x15,x0,-1
    1ce4:	00140913          	addi	x18,x8,1
    1ce8:	00012423          	sw	x0,8(x2)
    1cec:	00012a23          	sw	x0,20(x2)
    1cf0:	00f12623          	sw	x15,12(x2)
    1cf4:	00012823          	sw	x0,16(x2)
    1cf8:	040105a3          	sb	x0,75(x2)
    1cfc:	00094583          	lbu	x11,0(x18)
    1d00:	00500613          	addi	x12,x0,5
    1d04:	454a0513          	addi	x10,x20,1108 # 3454 <__sf_fake_stdin+0x20>
    1d08:	114010ef          	jal	x1,2e1c <memchr>
    1d0c:	00812783          	lw	x15,8(x2)
    1d10:	00190413          	addi	x8,x18,1
    1d14:	0c051e63          	bne	x10,x0,1df0 <_vfiprintf_r+0x200>
    1d18:	0107f713          	andi	x14,x15,16
    1d1c:	00070663          	beq	x14,x0,1d28 <_vfiprintf_r+0x138>
    1d20:	02000713          	addi	x14,x0,32
    1d24:	04e105a3          	sb	x14,75(x2)
    1d28:	0087f713          	andi	x14,x15,8
    1d2c:	00070663          	beq	x14,x0,1d38 <_vfiprintf_r+0x148>
    1d30:	02b00713          	addi	x14,x0,43
    1d34:	04e105a3          	sb	x14,75(x2)
    1d38:	00094683          	lbu	x13,0(x18)
    1d3c:	02a00713          	addi	x14,x0,42
    1d40:	0ce68663          	beq	x13,x14,1e0c <_vfiprintf_r+0x21c>
    1d44:	01412783          	lw	x15,20(x2)
    1d48:	00090413          	addi	x8,x18,0
    1d4c:	00000693          	addi	x13,x0,0
    1d50:	00900613          	addi	x12,x0,9
    1d54:	00a00513          	addi	x10,x0,10
    1d58:	00044703          	lbu	x14,0(x8)
    1d5c:	00140593          	addi	x11,x8,1
    1d60:	fd070713          	addi	x14,x14,-48
    1d64:	10e67663          	bgeu	x12,x14,1e70 <_vfiprintf_r+0x280>
    1d68:	0a068e63          	beq	x13,x0,1e24 <_vfiprintf_r+0x234>
    1d6c:	00f12a23          	sw	x15,20(x2)
    1d70:	0b40006f          	jal	x0,1e24 <_vfiprintf_r+0x234>
    1d74:	000037b7          	lui	x15,0x3
    1d78:	41478793          	addi	x15,x15,1044 # 3414 <__sf_fake_stdout>
    1d7c:	00f49663          	bne	x9,x15,1d88 <_vfiprintf_r+0x198>
    1d80:	0089a483          	lw	x9,8(x19)
    1d84:	ed1ff06f          	jal	x0,1c54 <_vfiprintf_r+0x64>
    1d88:	000037b7          	lui	x15,0x3
    1d8c:	3f478793          	addi	x15,x15,1012 # 33f4 <__sf_fake_stderr>
    1d90:	ecf492e3          	bne	x9,x15,1c54 <_vfiprintf_r+0x64>
    1d94:	00c9a483          	lw	x9,12(x19)
    1d98:	ebdff06f          	jal	x0,1c54 <_vfiprintf_r+0x64>
    1d9c:	00048593          	addi	x11,x9,0
    1da0:	00098513          	addi	x10,x19,0
    1da4:	e81fe0ef          	jal	x1,c24 <__swsetup_r>
    1da8:	ec0500e3          	beq	x10,x0,1c68 <_vfiprintf_r+0x78>
    1dac:	fff00513          	addi	x10,x0,-1
    1db0:	07c12083          	lw	x1,124(x2)
    1db4:	07812403          	lw	x8,120(x2)
    1db8:	07412483          	lw	x9,116(x2)
    1dbc:	07012903          	lw	x18,112(x2)
    1dc0:	06c12983          	lw	x19,108(x2)
    1dc4:	06812a03          	lw	x20,104(x2)
    1dc8:	06412a83          	lw	x21,100(x2)
    1dcc:	06012b03          	lw	x22,96(x2)
    1dd0:	05c12b83          	lw	x23,92(x2)
    1dd4:	05812c03          	lw	x24,88(x2)
    1dd8:	05412c83          	lw	x25,84(x2)
    1ddc:	05012d03          	lw	x26,80(x2)
    1de0:	08010113          	addi	x2,x2,128
    1de4:	00008067          	jalr	x0,0(x1)
    1de8:	00140413          	addi	x8,x8,1
    1dec:	eb1ff06f          	jal	x0,1c9c <_vfiprintf_r+0xac>
    1df0:	454a0713          	addi	x14,x20,1108
    1df4:	40e50533          	sub	x10,x10,x14
    1df8:	00ab9533          	sll	x10,x23,x10
    1dfc:	00a7e7b3          	or	x15,x15,x10
    1e00:	00f12423          	sw	x15,8(x2)
    1e04:	00040913          	addi	x18,x8,0
    1e08:	ef5ff06f          	jal	x0,1cfc <_vfiprintf_r+0x10c>
    1e0c:	00412703          	lw	x14,4(x2)
    1e10:	00470693          	addi	x13,x14,4
    1e14:	00072703          	lw	x14,0(x14)
    1e18:	00d12223          	sw	x13,4(x2)
    1e1c:	04074063          	blt	x14,x0,1e5c <_vfiprintf_r+0x26c>
    1e20:	00e12a23          	sw	x14,20(x2)
    1e24:	00044703          	lbu	x14,0(x8)
    1e28:	02e00793          	addi	x15,x0,46
    1e2c:	08f71663          	bne	x14,x15,1eb8 <_vfiprintf_r+0x2c8>
    1e30:	00144703          	lbu	x14,1(x8)
    1e34:	02a00793          	addi	x15,x0,42
    1e38:	04f71a63          	bne	x14,x15,1e8c <_vfiprintf_r+0x29c>
    1e3c:	00412783          	lw	x15,4(x2)
    1e40:	00240413          	addi	x8,x8,2
    1e44:	00478713          	addi	x14,x15,4
    1e48:	0007a783          	lw	x15,0(x15)
    1e4c:	00e12223          	sw	x14,4(x2)
    1e50:	0207ca63          	blt	x15,x0,1e84 <_vfiprintf_r+0x294>
    1e54:	00f12623          	sw	x15,12(x2)
    1e58:	0600006f          	jal	x0,1eb8 <_vfiprintf_r+0x2c8>
    1e5c:	40e00733          	sub	x14,x0,x14
    1e60:	0027e793          	ori	x15,x15,2
    1e64:	00e12a23          	sw	x14,20(x2)
    1e68:	00f12423          	sw	x15,8(x2)
    1e6c:	fb9ff06f          	jal	x0,1e24 <_vfiprintf_r+0x234>
    1e70:	02a787b3          	mul	x15,x15,x10
    1e74:	00058413          	addi	x8,x11,0
    1e78:	00100693          	addi	x13,x0,1
    1e7c:	00e787b3          	add	x15,x15,x14
    1e80:	ed9ff06f          	jal	x0,1d58 <_vfiprintf_r+0x168>
    1e84:	fff00793          	addi	x15,x0,-1
    1e88:	fcdff06f          	jal	x0,1e54 <_vfiprintf_r+0x264>
    1e8c:	00140413          	addi	x8,x8,1
    1e90:	00012623          	sw	x0,12(x2)
    1e94:	00000693          	addi	x13,x0,0
    1e98:	00000793          	addi	x15,x0,0
    1e9c:	00900613          	addi	x12,x0,9
    1ea0:	00a00513          	addi	x10,x0,10
    1ea4:	00044703          	lbu	x14,0(x8)
    1ea8:	00140593          	addi	x11,x8,1
    1eac:	fd070713          	addi	x14,x14,-48
    1eb0:	08e67263          	bgeu	x12,x14,1f34 <_vfiprintf_r+0x344>
    1eb4:	fa0690e3          	bne	x13,x0,1e54 <_vfiprintf_r+0x264>
    1eb8:	00044583          	lbu	x11,0(x8)
    1ebc:	00300613          	addi	x12,x0,3
    1ec0:	45ca8513          	addi	x10,x21,1116 # 345c <__sf_fake_stdin+0x28>
    1ec4:	759000ef          	jal	x1,2e1c <memchr>
    1ec8:	02050263          	beq	x10,x0,1eec <_vfiprintf_r+0x2fc>
    1ecc:	45ca8793          	addi	x15,x21,1116
    1ed0:	40f50533          	sub	x10,x10,x15
    1ed4:	00812783          	lw	x15,8(x2)
    1ed8:	04000713          	addi	x14,x0,64
    1edc:	00a71733          	sll	x14,x14,x10
    1ee0:	00e7e7b3          	or	x15,x15,x14
    1ee4:	00140413          	addi	x8,x8,1
    1ee8:	00f12423          	sw	x15,8(x2)
    1eec:	00044583          	lbu	x11,0(x8)
    1ef0:	00600613          	addi	x12,x0,6
    1ef4:	460c0513          	addi	x10,x24,1120 # 3460 <__sf_fake_stdin+0x2c>
    1ef8:	02b10023          	sb	x11,32(x2)
    1efc:	721000ef          	jal	x1,2e1c <memchr>
    1f00:	00410713          	addi	x14,x2,4
    1f04:	b40c8693          	addi	x13,x25,-1216 # 1b40 <__sfputs_r>
    1f08:	00048613          	addi	x12,x9,0
    1f0c:	00810593          	addi	x11,x2,8
    1f10:	00098513          	addi	x10,x19,0
    1f14:	20c000ef          	jal	x1,2120 <_printf_i>
    1f18:	fff00793          	addi	x15,x0,-1
    1f1c:	00140913          	addi	x18,x8,1
    1f20:	02f50463          	beq	x10,x15,1f48 <_vfiprintf_r+0x358>
    1f24:	01c12783          	lw	x15,28(x2)
    1f28:	00a787b3          	add	x15,x15,x10
    1f2c:	00f12e23          	sw	x15,28(x2)
    1f30:	d69ff06f          	jal	x0,1c98 <_vfiprintf_r+0xa8>
    1f34:	02a787b3          	mul	x15,x15,x10
    1f38:	00058413          	addi	x8,x11,0
    1f3c:	00100693          	addi	x13,x0,1
    1f40:	00e787b3          	add	x15,x15,x14
    1f44:	f61ff06f          	jal	x0,1ea4 <_vfiprintf_r+0x2b4>
    1f48:	00c4d783          	lhu	x15,12(x9)
    1f4c:	0407f793          	andi	x15,x15,64
    1f50:	e4079ee3          	bne	x15,x0,1dac <_vfiprintf_r+0x1bc>
    1f54:	01c12503          	lw	x10,28(x2)
    1f58:	e59ff06f          	jal	x0,1db0 <_vfiprintf_r+0x1c0>

00001f5c <vfiprintf>:
    1f5c:	00060693          	addi	x13,x12,0
    1f60:	00058613          	addi	x12,x11,0
    1f64:	00050593          	addi	x11,x10,0
    1f68:	8f81a503          	lw	x10,-1800(x3) # 35e0 <_impure_ptr>
    1f6c:	c85ff06f          	jal	x0,1bf0 <_vfiprintf_r>

00001f70 <_printf_common>:
    1f70:	fd010113          	addi	x2,x2,-48
    1f74:	01412c23          	sw	x20,24(x2)
    1f78:	0105a783          	lw	x15,16(x11)
    1f7c:	00070a13          	addi	x20,x14,0
    1f80:	0085a703          	lw	x14,8(x11)
    1f84:	02812423          	sw	x8,40(x2)
    1f88:	03212023          	sw	x18,32(x2)
    1f8c:	01312e23          	sw	x19,28(x2)
    1f90:	01512a23          	sw	x21,20(x2)
    1f94:	02112623          	sw	x1,44(x2)
    1f98:	02912223          	sw	x9,36(x2)
    1f9c:	01612823          	sw	x22,16(x2)
    1fa0:	01712623          	sw	x23,12(x2)
    1fa4:	00050993          	addi	x19,x10,0
    1fa8:	00058413          	addi	x8,x11,0
    1fac:	00060913          	addi	x18,x12,0
    1fb0:	00068a93          	addi	x21,x13,0
    1fb4:	00e7d463          	bge	x15,x14,1fbc <_printf_common+0x4c>
    1fb8:	00070793          	addi	x15,x14,0
    1fbc:	00f92023          	sw	x15,0(x18)
    1fc0:	04344703          	lbu	x14,67(x8)
    1fc4:	00070663          	beq	x14,x0,1fd0 <_printf_common+0x60>
    1fc8:	00178793          	addi	x15,x15,1
    1fcc:	00f92023          	sw	x15,0(x18)
    1fd0:	00042783          	lw	x15,0(x8)
    1fd4:	0207f793          	andi	x15,x15,32
    1fd8:	00078863          	beq	x15,x0,1fe8 <_printf_common+0x78>
    1fdc:	00092783          	lw	x15,0(x18)
    1fe0:	00278793          	addi	x15,x15,2
    1fe4:	00f92023          	sw	x15,0(x18)
    1fe8:	00042483          	lw	x9,0(x8)
    1fec:	0064f493          	andi	x9,x9,6
    1ff0:	00049e63          	bne	x9,x0,200c <_printf_common+0x9c>
    1ff4:	01940b13          	addi	x22,x8,25
    1ff8:	fff00b93          	addi	x23,x0,-1
    1ffc:	00c42783          	lw	x15,12(x8)
    2000:	00092703          	lw	x14,0(x18)
    2004:	40e787b3          	sub	x15,x15,x14
    2008:	08f4c263          	blt	x9,x15,208c <_printf_common+0x11c>
    200c:	04344783          	lbu	x15,67(x8)
    2010:	00f036b3          	sltu	x13,x0,x15
    2014:	00042783          	lw	x15,0(x8)
    2018:	0207f793          	andi	x15,x15,32
    201c:	0c079063          	bne	x15,x0,20dc <_printf_common+0x16c>
    2020:	04340613          	addi	x12,x8,67
    2024:	000a8593          	addi	x11,x21,0
    2028:	00098513          	addi	x10,x19,0
    202c:	000a00e7          	jalr	x1,0(x20)
    2030:	fff00793          	addi	x15,x0,-1
    2034:	06f50863          	beq	x10,x15,20a4 <_printf_common+0x134>
    2038:	00042783          	lw	x15,0(x8)
    203c:	00400713          	addi	x14,x0,4
    2040:	00000493          	addi	x9,x0,0
    2044:	0067f793          	andi	x15,x15,6
    2048:	00e79c63          	bne	x15,x14,2060 <_printf_common+0xf0>
    204c:	00c42483          	lw	x9,12(x8)
    2050:	00092783          	lw	x15,0(x18)
    2054:	40f484b3          	sub	x9,x9,x15
    2058:	0004d463          	bge	x9,x0,2060 <_printf_common+0xf0>
    205c:	00000493          	addi	x9,x0,0
    2060:	00842783          	lw	x15,8(x8)
    2064:	01042703          	lw	x14,16(x8)
    2068:	00f75663          	bge	x14,x15,2074 <_printf_common+0x104>
    206c:	40e787b3          	sub	x15,x15,x14
    2070:	00f484b3          	add	x9,x9,x15
    2074:	00000913          	addi	x18,x0,0
    2078:	01a40413          	addi	x8,x8,26
    207c:	fff00b13          	addi	x22,x0,-1
    2080:	09249063          	bne	x9,x18,2100 <_printf_common+0x190>
    2084:	00000513          	addi	x10,x0,0
    2088:	0200006f          	jal	x0,20a8 <_printf_common+0x138>
    208c:	00100693          	addi	x13,x0,1
    2090:	000b0613          	addi	x12,x22,0
    2094:	000a8593          	addi	x11,x21,0
    2098:	00098513          	addi	x10,x19,0
    209c:	000a00e7          	jalr	x1,0(x20)
    20a0:	03751a63          	bne	x10,x23,20d4 <_printf_common+0x164>
    20a4:	fff00513          	addi	x10,x0,-1
    20a8:	02c12083          	lw	x1,44(x2)
    20ac:	02812403          	lw	x8,40(x2)
    20b0:	02412483          	lw	x9,36(x2)
    20b4:	02012903          	lw	x18,32(x2)
    20b8:	01c12983          	lw	x19,28(x2)
    20bc:	01812a03          	lw	x20,24(x2)
    20c0:	01412a83          	lw	x21,20(x2)
    20c4:	01012b03          	lw	x22,16(x2)
    20c8:	00c12b83          	lw	x23,12(x2)
    20cc:	03010113          	addi	x2,x2,48
    20d0:	00008067          	jalr	x0,0(x1)
    20d4:	00148493          	addi	x9,x9,1
    20d8:	f25ff06f          	jal	x0,1ffc <_printf_common+0x8c>
    20dc:	00d40733          	add	x14,x8,x13
    20e0:	03000613          	addi	x12,x0,48
    20e4:	04c701a3          	sb	x12,67(x14)
    20e8:	04544703          	lbu	x14,69(x8)
    20ec:	00168793          	addi	x15,x13,1
    20f0:	00f407b3          	add	x15,x8,x15
    20f4:	00268693          	addi	x13,x13,2
    20f8:	04e781a3          	sb	x14,67(x15)
    20fc:	f25ff06f          	jal	x0,2020 <_printf_common+0xb0>
    2100:	00100693          	addi	x13,x0,1
    2104:	00040613          	addi	x12,x8,0
    2108:	000a8593          	addi	x11,x21,0
    210c:	00098513          	addi	x10,x19,0
    2110:	000a00e7          	jalr	x1,0(x20)
    2114:	f96508e3          	beq	x10,x22,20a4 <_printf_common+0x134>
    2118:	00190913          	addi	x18,x18,1
    211c:	f65ff06f          	jal	x0,2080 <_printf_common+0x110>

00002120 <_printf_i>:
    2120:	fd010113          	addi	x2,x2,-48
    2124:	02812423          	sw	x8,40(x2)
    2128:	02912223          	sw	x9,36(x2)
    212c:	03212023          	sw	x18,32(x2)
    2130:	01312e23          	sw	x19,28(x2)
    2134:	02112623          	sw	x1,44(x2)
    2138:	01412c23          	sw	x20,24(x2)
    213c:	01512a23          	sw	x21,20(x2)
    2140:	01612823          	sw	x22,16(x2)
    2144:	00068993          	addi	x19,x13,0
    2148:	0185c683          	lbu	x13,24(x11)
    214c:	07800793          	addi	x15,x0,120
    2150:	00050493          	addi	x9,x10,0
    2154:	00058413          	addi	x8,x11,0
    2158:	00060913          	addi	x18,x12,0
    215c:	00d7ee63          	bltu	x15,x13,2178 <_printf_i+0x58>
    2160:	06200793          	addi	x15,x0,98
    2164:	04358613          	addi	x12,x11,67
    2168:	00d7ee63          	bltu	x15,x13,2184 <_printf_i+0x64>
    216c:	2a068063          	beq	x13,x0,240c <_printf_i+0x2ec>
    2170:	05800793          	addi	x15,x0,88
    2174:	14f68063          	beq	x13,x15,22b4 <_printf_i+0x194>
    2178:	04240a13          	addi	x20,x8,66
    217c:	04d40123          	sb	x13,66(x8)
    2180:	0440006f          	jal	x0,21c4 <_printf_i+0xa4>
    2184:	f9d68793          	addi	x15,x13,-99
    2188:	0ff7f793          	andi	x15,x15,255
    218c:	01500593          	addi	x11,x0,21
    2190:	fef5e4e3          	bltu	x11,x15,2178 <_printf_i+0x58>
    2194:	000035b7          	lui	x11,0x3
    2198:	00279793          	slli	x15,x15,0x2
    219c:	49058593          	addi	x11,x11,1168 # 3490 <__sf_fake_stdin+0x5c>
    21a0:	00b787b3          	add	x15,x15,x11
    21a4:	0007a783          	lw	x15,0(x15)
    21a8:	00078067          	jalr	x0,0(x15)
    21ac:	00072783          	lw	x15,0(x14)
    21b0:	04240a13          	addi	x20,x8,66
    21b4:	00478693          	addi	x13,x15,4
    21b8:	0007a783          	lw	x15,0(x15)
    21bc:	00d72023          	sw	x13,0(x14)
    21c0:	04f40123          	sb	x15,66(x8)
    21c4:	00100793          	addi	x15,x0,1
    21c8:	2800006f          	jal	x0,2448 <_printf_i+0x328>
    21cc:	00042783          	lw	x15,0(x8)
    21d0:	00072503          	lw	x10,0(x14)
    21d4:	0807f693          	andi	x13,x15,128
    21d8:	00450593          	addi	x11,x10,4
    21dc:	02068663          	beq	x13,x0,2208 <_printf_i+0xe8>
    21e0:	00052783          	lw	x15,0(x10)
    21e4:	00b72023          	sw	x11,0(x14)
    21e8:	00003837          	lui	x16,0x3
    21ec:	0007d863          	bge	x15,x0,21fc <_printf_i+0xdc>
    21f0:	02d00713          	addi	x14,x0,45
    21f4:	40f007b3          	sub	x15,x0,x15
    21f8:	04e401a3          	sb	x14,67(x8)
    21fc:	46880813          	addi	x16,x16,1128 # 3468 <__sf_fake_stdin+0x34>
    2200:	00a00713          	addi	x14,x0,10
    2204:	0680006f          	jal	x0,226c <_printf_i+0x14c>
    2208:	0407f693          	andi	x13,x15,64
    220c:	00052783          	lw	x15,0(x10)
    2210:	00b72023          	sw	x11,0(x14)
    2214:	fc068ae3          	beq	x13,x0,21e8 <_printf_i+0xc8>
    2218:	01079793          	slli	x15,x15,0x10
    221c:	4107d793          	srai	x15,x15,0x10
    2220:	fc9ff06f          	jal	x0,21e8 <_printf_i+0xc8>
    2224:	00042583          	lw	x11,0(x8)
    2228:	00072783          	lw	x15,0(x14)
    222c:	0805f813          	andi	x16,x11,128
    2230:	00478513          	addi	x10,x15,4
    2234:	00080863          	beq	x16,x0,2244 <_printf_i+0x124>
    2238:	00a72023          	sw	x10,0(x14)
    223c:	0007a783          	lw	x15,0(x15)
    2240:	0140006f          	jal	x0,2254 <_printf_i+0x134>
    2244:	0405f593          	andi	x11,x11,64
    2248:	00a72023          	sw	x10,0(x14)
    224c:	fe0588e3          	beq	x11,x0,223c <_printf_i+0x11c>
    2250:	0007d783          	lhu	x15,0(x15)
    2254:	00003837          	lui	x16,0x3
    2258:	06f00713          	addi	x14,x0,111
    225c:	46880813          	addi	x16,x16,1128 # 3468 <__sf_fake_stdin+0x34>
    2260:	16e68463          	beq	x13,x14,23c8 <_printf_i+0x2a8>
    2264:	00a00713          	addi	x14,x0,10
    2268:	040401a3          	sb	x0,67(x8)
    226c:	00442683          	lw	x13,4(x8)
    2270:	00d42423          	sw	x13,8(x8)
    2274:	0800006f          	jal	x0,22f4 <_printf_i+0x1d4>
    2278:	00042783          	lw	x15,0(x8)
    227c:	0207e793          	ori	x15,x15,32
    2280:	00f42023          	sw	x15,0(x8)
    2284:	00003837          	lui	x16,0x3
    2288:	07800693          	addi	x13,x0,120
    228c:	47c80813          	addi	x16,x16,1148 # 347c <__sf_fake_stdin+0x48>
    2290:	04d402a3          	sb	x13,69(x8)
    2294:	00042683          	lw	x13,0(x8)
    2298:	00072783          	lw	x15,0(x14)
    229c:	0806f513          	andi	x10,x13,128
    22a0:	00478593          	addi	x11,x15,4
    22a4:	00050e63          	beq	x10,x0,22c0 <_printf_i+0x1a0>
    22a8:	00b72023          	sw	x11,0(x14)
    22ac:	0007a783          	lw	x15,0(x15)
    22b0:	0200006f          	jal	x0,22d0 <_printf_i+0x1b0>
    22b4:	00003837          	lui	x16,0x3
    22b8:	46880813          	addi	x16,x16,1128 # 3468 <__sf_fake_stdin+0x34>
    22bc:	fd5ff06f          	jal	x0,2290 <_printf_i+0x170>
    22c0:	0406f513          	andi	x10,x13,64
    22c4:	00b72023          	sw	x11,0(x14)
    22c8:	fe0502e3          	beq	x10,x0,22ac <_printf_i+0x18c>
    22cc:	0007d783          	lhu	x15,0(x15)
    22d0:	0016f713          	andi	x14,x13,1
    22d4:	00070663          	beq	x14,x0,22e0 <_printf_i+0x1c0>
    22d8:	0206e693          	ori	x13,x13,32
    22dc:	00d42023          	sw	x13,0(x8)
    22e0:	00442683          	lw	x13,4(x8)
    22e4:	0c078863          	beq	x15,x0,23b4 <_printf_i+0x294>
    22e8:	040401a3          	sb	x0,67(x8)
    22ec:	00d42423          	sw	x13,8(x8)
    22f0:	01000713          	addi	x14,x0,16
    22f4:	0006ce63          	blt	x13,x0,2310 <_printf_i+0x1f0>
    22f8:	00042583          	lw	x11,0(x8)
    22fc:	ffb5f593          	andi	x11,x11,-5
    2300:	00b42023          	sw	x11,0(x8)
    2304:	00079663          	bne	x15,x0,2310 <_printf_i+0x1f0>
    2308:	00060a13          	addi	x20,x12,0
    230c:	02068463          	beq	x13,x0,2334 <_printf_i+0x214>
    2310:	00060a13          	addi	x20,x12,0
    2314:	02e7f6b3          	remu	x13,x15,x14
    2318:	fffa0a13          	addi	x20,x20,-1
    231c:	00d806b3          	add	x13,x16,x13
    2320:	0006c683          	lbu	x13,0(x13)
    2324:	00da0023          	sb	x13,0(x20)
    2328:	00078693          	addi	x13,x15,0
    232c:	02e7d7b3          	divu	x15,x15,x14
    2330:	fee6f2e3          	bgeu	x13,x14,2314 <_printf_i+0x1f4>
    2334:	00800793          	addi	x15,x0,8
    2338:	02f71463          	bne	x14,x15,2360 <_printf_i+0x240>
    233c:	00042783          	lw	x15,0(x8)
    2340:	0017f793          	andi	x15,x15,1
    2344:	00078e63          	beq	x15,x0,2360 <_printf_i+0x240>
    2348:	00442703          	lw	x14,4(x8)
    234c:	01042783          	lw	x15,16(x8)
    2350:	00e7c863          	blt	x15,x14,2360 <_printf_i+0x240>
    2354:	03000793          	addi	x15,x0,48
    2358:	fefa0fa3          	sb	x15,-1(x20)
    235c:	fffa0a13          	addi	x20,x20,-1
    2360:	41460633          	sub	x12,x12,x20
    2364:	00c42823          	sw	x12,16(x8)
    2368:	00098713          	addi	x14,x19,0
    236c:	00090693          	addi	x13,x18,0
    2370:	00c10613          	addi	x12,x2,12
    2374:	00040593          	addi	x11,x8,0
    2378:	00048513          	addi	x10,x9,0
    237c:	bf5ff0ef          	jal	x1,1f70 <_printf_common>
    2380:	fff00a93          	addi	x21,x0,-1
    2384:	0d551863          	bne	x10,x21,2454 <_printf_i+0x334>
    2388:	fff00513          	addi	x10,x0,-1
    238c:	02c12083          	lw	x1,44(x2)
    2390:	02812403          	lw	x8,40(x2)
    2394:	02412483          	lw	x9,36(x2)
    2398:	02012903          	lw	x18,32(x2)
    239c:	01c12983          	lw	x19,28(x2)
    23a0:	01812a03          	lw	x20,24(x2)
    23a4:	01412a83          	lw	x21,20(x2)
    23a8:	01012b03          	lw	x22,16(x2)
    23ac:	03010113          	addi	x2,x2,48
    23b0:	00008067          	jalr	x0,0(x1)
    23b4:	00042703          	lw	x14,0(x8)
    23b8:	fdf77713          	andi	x14,x14,-33
    23bc:	00e42023          	sw	x14,0(x8)
    23c0:	01000713          	addi	x14,x0,16
    23c4:	ea5ff06f          	jal	x0,2268 <_printf_i+0x148>
    23c8:	00800713          	addi	x14,x0,8
    23cc:	e9dff06f          	jal	x0,2268 <_printf_i+0x148>
    23d0:	00042683          	lw	x13,0(x8)
    23d4:	00072783          	lw	x15,0(x14)
    23d8:	01442583          	lw	x11,20(x8)
    23dc:	0806f813          	andi	x16,x13,128
    23e0:	00478513          	addi	x10,x15,4
    23e4:	00080a63          	beq	x16,x0,23f8 <_printf_i+0x2d8>
    23e8:	00a72023          	sw	x10,0(x14)
    23ec:	0007a783          	lw	x15,0(x15)
    23f0:	00b7a023          	sw	x11,0(x15)
    23f4:	0180006f          	jal	x0,240c <_printf_i+0x2ec>
    23f8:	00a72023          	sw	x10,0(x14)
    23fc:	0406f693          	andi	x13,x13,64
    2400:	0007a783          	lw	x15,0(x15)
    2404:	fe0686e3          	beq	x13,x0,23f0 <_printf_i+0x2d0>
    2408:	00b79023          	sh	x11,0(x15)
    240c:	00042823          	sw	x0,16(x8)
    2410:	00060a13          	addi	x20,x12,0
    2414:	f55ff06f          	jal	x0,2368 <_printf_i+0x248>
    2418:	00072783          	lw	x15,0(x14)
    241c:	00442603          	lw	x12,4(x8)
    2420:	00000593          	addi	x11,x0,0
    2424:	00478693          	addi	x13,x15,4
    2428:	00d72023          	sw	x13,0(x14)
    242c:	0007aa03          	lw	x20,0(x15)
    2430:	000a0513          	addi	x10,x20,0
    2434:	1e9000ef          	jal	x1,2e1c <memchr>
    2438:	00050663          	beq	x10,x0,2444 <_printf_i+0x324>
    243c:	41450533          	sub	x10,x10,x20
    2440:	00a42223          	sw	x10,4(x8)
    2444:	00442783          	lw	x15,4(x8)
    2448:	00f42823          	sw	x15,16(x8)
    244c:	040401a3          	sb	x0,67(x8)
    2450:	f19ff06f          	jal	x0,2368 <_printf_i+0x248>
    2454:	01042683          	lw	x13,16(x8)
    2458:	000a0613          	addi	x12,x20,0
    245c:	00090593          	addi	x11,x18,0
    2460:	00048513          	addi	x10,x9,0
    2464:	000980e7          	jalr	x1,0(x19)
    2468:	f35500e3          	beq	x10,x21,2388 <_printf_i+0x268>
    246c:	00042783          	lw	x15,0(x8)
    2470:	0027f793          	andi	x15,x15,2
    2474:	04079463          	bne	x15,x0,24bc <_printf_i+0x39c>
    2478:	00c12783          	lw	x15,12(x2)
    247c:	00c42503          	lw	x10,12(x8)
    2480:	f0f556e3          	bge	x10,x15,238c <_printf_i+0x26c>
    2484:	00078513          	addi	x10,x15,0
    2488:	f05ff06f          	jal	x0,238c <_printf_i+0x26c>
    248c:	00100693          	addi	x13,x0,1
    2490:	000a8613          	addi	x12,x21,0
    2494:	00090593          	addi	x11,x18,0
    2498:	00048513          	addi	x10,x9,0
    249c:	000980e7          	jalr	x1,0(x19)
    24a0:	ef6504e3          	beq	x10,x22,2388 <_printf_i+0x268>
    24a4:	001a0a13          	addi	x20,x20,1
    24a8:	00c42783          	lw	x15,12(x8)
    24ac:	00c12703          	lw	x14,12(x2)
    24b0:	40e787b3          	sub	x15,x15,x14
    24b4:	fcfa4ce3          	blt	x20,x15,248c <_printf_i+0x36c>
    24b8:	fc1ff06f          	jal	x0,2478 <_printf_i+0x358>
    24bc:	00000a13          	addi	x20,x0,0
    24c0:	01940a93          	addi	x21,x8,25
    24c4:	fff00b13          	addi	x22,x0,-1
    24c8:	fe1ff06f          	jal	x0,24a8 <_printf_i+0x388>

000024cc <_putc_r>:
    24cc:	fe010113          	addi	x2,x2,-32
    24d0:	00812c23          	sw	x8,24(x2)
    24d4:	00112e23          	sw	x1,28(x2)
    24d8:	00050413          	addi	x8,x10,0
    24dc:	02050063          	beq	x10,x0,24fc <_putc_r+0x30>
    24e0:	01852783          	lw	x15,24(x10)
    24e4:	00079c63          	bne	x15,x0,24fc <_putc_r+0x30>
    24e8:	00c12623          	sw	x12,12(x2)
    24ec:	00b12423          	sw	x11,8(x2)
    24f0:	e45fe0ef          	jal	x1,1334 <__sinit>
    24f4:	00c12603          	lw	x12,12(x2)
    24f8:	00812583          	lw	x11,8(x2)
    24fc:	000037b7          	lui	x15,0x3
    2500:	43478793          	addi	x15,x15,1076 # 3434 <__sf_fake_stdin>
    2504:	04f61063          	bne	x12,x15,2544 <_putc_r+0x78>
    2508:	00442603          	lw	x12,4(x8)
    250c:	00862783          	lw	x15,8(x12)
    2510:	fff78793          	addi	x15,x15,-1
    2514:	00f62423          	sw	x15,8(x12)
    2518:	0407da63          	bge	x15,x0,256c <_putc_r+0xa0>
    251c:	01862703          	lw	x14,24(x12)
    2520:	00e7c863          	blt	x15,x14,2530 <_putc_r+0x64>
    2524:	0ff5f793          	andi	x15,x11,255
    2528:	00a00713          	addi	x14,x0,10
    252c:	04e79063          	bne	x15,x14,256c <_putc_r+0xa0>
    2530:	00040513          	addi	x10,x8,0
    2534:	01812403          	lw	x8,24(x2)
    2538:	01c12083          	lw	x1,28(x2)
    253c:	02010113          	addi	x2,x2,32
    2540:	d9cfe06f          	jal	x0,adc <__swbuf_r>
    2544:	000037b7          	lui	x15,0x3
    2548:	41478793          	addi	x15,x15,1044 # 3414 <__sf_fake_stdout>
    254c:	00f61663          	bne	x12,x15,2558 <_putc_r+0x8c>
    2550:	00842603          	lw	x12,8(x8)
    2554:	fb9ff06f          	jal	x0,250c <_putc_r+0x40>
    2558:	000037b7          	lui	x15,0x3
    255c:	3f478793          	addi	x15,x15,1012 # 33f4 <__sf_fake_stderr>
    2560:	faf616e3          	bne	x12,x15,250c <_putc_r+0x40>
    2564:	00c42603          	lw	x12,12(x8)
    2568:	fa5ff06f          	jal	x0,250c <_putc_r+0x40>
    256c:	00062783          	lw	x15,0(x12)
    2570:	0ff5f513          	andi	x10,x11,255
    2574:	00178713          	addi	x14,x15,1
    2578:	00e62023          	sw	x14,0(x12)
    257c:	00b78023          	sb	x11,0(x15)
    2580:	01c12083          	lw	x1,28(x2)
    2584:	01812403          	lw	x8,24(x2)
    2588:	02010113          	addi	x2,x2,32
    258c:	00008067          	jalr	x0,0(x1)

00002590 <putc>:
    2590:	00058613          	addi	x12,x11,0
    2594:	00050593          	addi	x11,x10,0
    2598:	8f81a503          	lw	x10,-1800(x3) # 35e0 <_impure_ptr>
    259c:	f31ff06f          	jal	x0,24cc <_putc_r>

000025a0 <_sbrk_r>:
    25a0:	ff010113          	addi	x2,x2,-16
    25a4:	00812423          	sw	x8,8(x2)
    25a8:	00912223          	sw	x9,4(x2)
    25ac:	00050413          	addi	x8,x10,0
    25b0:	00058513          	addi	x10,x11,0
    25b4:	00112623          	sw	x1,12(x2)
    25b8:	8e01ae23          	sw	x0,-1796(x3) # 35e4 <errno>
    25bc:	e35fd0ef          	jal	x1,3f0 <_sbrk>
    25c0:	fff00793          	addi	x15,x0,-1
    25c4:	00f51863          	bne	x10,x15,25d4 <_sbrk_r+0x34>
    25c8:	8fc1a783          	lw	x15,-1796(x3) # 35e4 <errno>
    25cc:	00078463          	beq	x15,x0,25d4 <_sbrk_r+0x34>
    25d0:	00f42023          	sw	x15,0(x8)
    25d4:	00c12083          	lw	x1,12(x2)
    25d8:	00812403          	lw	x8,8(x2)
    25dc:	00412483          	lw	x9,4(x2)
    25e0:	01010113          	addi	x2,x2,16
    25e4:	00008067          	jalr	x0,0(x1)

000025e8 <__sread>:
    25e8:	ff010113          	addi	x2,x2,-16
    25ec:	00812423          	sw	x8,8(x2)
    25f0:	00058413          	addi	x8,x11,0
    25f4:	00e59583          	lh	x11,14(x11)
    25f8:	00112623          	sw	x1,12(x2)
    25fc:	181000ef          	jal	x1,2f7c <_read_r>
    2600:	02054063          	blt	x10,x0,2620 <__sread+0x38>
    2604:	05442783          	lw	x15,84(x8)
    2608:	00a787b3          	add	x15,x15,x10
    260c:	04f42a23          	sw	x15,84(x8)
    2610:	00c12083          	lw	x1,12(x2)
    2614:	00812403          	lw	x8,8(x2)
    2618:	01010113          	addi	x2,x2,16
    261c:	00008067          	jalr	x0,0(x1)
    2620:	00c45783          	lhu	x15,12(x8)
    2624:	fffff737          	lui	x14,0xfffff
    2628:	fff70713          	addi	x14,x14,-1 # ffffefff <__heap_end+0xffbfefff>
    262c:	00e7f7b3          	and	x15,x15,x14
    2630:	00f41623          	sh	x15,12(x8)
    2634:	fddff06f          	jal	x0,2610 <__sread+0x28>

00002638 <__seofread>:
    2638:	00000513          	addi	x10,x0,0
    263c:	00008067          	jalr	x0,0(x1)

00002640 <__swrite>:
    2640:	00c5d783          	lhu	x15,12(x11)
    2644:	fe010113          	addi	x2,x2,-32
    2648:	00812c23          	sw	x8,24(x2)
    264c:	00912a23          	sw	x9,20(x2)
    2650:	01212823          	sw	x18,16(x2)
    2654:	01312623          	sw	x19,12(x2)
    2658:	00112e23          	sw	x1,28(x2)
    265c:	1007f793          	andi	x15,x15,256
    2660:	00050493          	addi	x9,x10,0
    2664:	00058413          	addi	x8,x11,0
    2668:	00060913          	addi	x18,x12,0
    266c:	00068993          	addi	x19,x13,0
    2670:	00078a63          	beq	x15,x0,2684 <__swrite+0x44>
    2674:	00e59583          	lh	x11,14(x11)
    2678:	00200693          	addi	x13,x0,2
    267c:	00000613          	addi	x12,x0,0
    2680:	74c000ef          	jal	x1,2dcc <_lseek_r>
    2684:	00c45783          	lhu	x15,12(x8)
    2688:	fffff737          	lui	x14,0xfffff
    268c:	fff70713          	addi	x14,x14,-1 # ffffefff <__heap_end+0xffbfefff>
    2690:	00e7f7b3          	and	x15,x15,x14
    2694:	00e41583          	lh	x11,14(x8)
    2698:	00f41623          	sh	x15,12(x8)
    269c:	01812403          	lw	x8,24(x2)
    26a0:	01c12083          	lw	x1,28(x2)
    26a4:	00098693          	addi	x13,x19,0
    26a8:	00090613          	addi	x12,x18,0
    26ac:	00c12983          	lw	x19,12(x2)
    26b0:	01012903          	lw	x18,16(x2)
    26b4:	00048513          	addi	x10,x9,0
    26b8:	01412483          	lw	x9,20(x2)
    26bc:	02010113          	addi	x2,x2,32
    26c0:	0640006f          	jal	x0,2724 <_write_r>

000026c4 <__sseek>:
    26c4:	ff010113          	addi	x2,x2,-16
    26c8:	00812423          	sw	x8,8(x2)
    26cc:	00058413          	addi	x8,x11,0
    26d0:	00e59583          	lh	x11,14(x11)
    26d4:	00112623          	sw	x1,12(x2)
    26d8:	6f4000ef          	jal	x1,2dcc <_lseek_r>
    26dc:	fff00713          	addi	x14,x0,-1
    26e0:	00c45783          	lhu	x15,12(x8)
    26e4:	02e51263          	bne	x10,x14,2708 <__sseek+0x44>
    26e8:	fffff737          	lui	x14,0xfffff
    26ec:	fff70713          	addi	x14,x14,-1 # ffffefff <__heap_end+0xffbfefff>
    26f0:	00e7f7b3          	and	x15,x15,x14
    26f4:	00f41623          	sh	x15,12(x8)
    26f8:	00c12083          	lw	x1,12(x2)
    26fc:	00812403          	lw	x8,8(x2)
    2700:	01010113          	addi	x2,x2,16
    2704:	00008067          	jalr	x0,0(x1)
    2708:	00001737          	lui	x14,0x1
    270c:	00e7e7b3          	or	x15,x15,x14
    2710:	00f41623          	sh	x15,12(x8)
    2714:	04a42a23          	sw	x10,84(x8)
    2718:	fe1ff06f          	jal	x0,26f8 <__sseek+0x34>

0000271c <__sclose>:
    271c:	00e59583          	lh	x11,14(x11)
    2720:	0540006f          	jal	x0,2774 <_close_r>

00002724 <_write_r>:
    2724:	ff010113          	addi	x2,x2,-16
    2728:	00812423          	sw	x8,8(x2)
    272c:	00912223          	sw	x9,4(x2)
    2730:	00050413          	addi	x8,x10,0
    2734:	00058513          	addi	x10,x11,0
    2738:	00060593          	addi	x11,x12,0
    273c:	00068613          	addi	x12,x13,0
    2740:	00112623          	sw	x1,12(x2)
    2744:	8e01ae23          	sw	x0,-1796(x3) # 35e4 <errno>
    2748:	c77fd0ef          	jal	x1,3be <_write>
    274c:	fff00793          	addi	x15,x0,-1
    2750:	00f51863          	bne	x10,x15,2760 <_write_r+0x3c>
    2754:	8fc1a783          	lw	x15,-1796(x3) # 35e4 <errno>
    2758:	00078463          	beq	x15,x0,2760 <_write_r+0x3c>
    275c:	00f42023          	sw	x15,0(x8)
    2760:	00c12083          	lw	x1,12(x2)
    2764:	00812403          	lw	x8,8(x2)
    2768:	00412483          	lw	x9,4(x2)
    276c:	01010113          	addi	x2,x2,16
    2770:	00008067          	jalr	x0,0(x1)

00002774 <_close_r>:
    2774:	ff010113          	addi	x2,x2,-16
    2778:	00812423          	sw	x8,8(x2)
    277c:	00912223          	sw	x9,4(x2)
    2780:	00050413          	addi	x8,x10,0
    2784:	00058513          	addi	x10,x11,0
    2788:	00112623          	sw	x1,12(x2)
    278c:	8e01ae23          	sw	x0,-1796(x3) # 35e4 <errno>
    2790:	b53fd0ef          	jal	x1,2e2 <_close>
    2794:	fff00793          	addi	x15,x0,-1
    2798:	00f51863          	bne	x10,x15,27a8 <_close_r+0x34>
    279c:	8fc1a783          	lw	x15,-1796(x3) # 35e4 <errno>
    27a0:	00078463          	beq	x15,x0,27a8 <_close_r+0x34>
    27a4:	00f42023          	sw	x15,0(x8)
    27a8:	00c12083          	lw	x1,12(x2)
    27ac:	00812403          	lw	x8,8(x2)
    27b0:	00412483          	lw	x9,4(x2)
    27b4:	01010113          	addi	x2,x2,16
    27b8:	00008067          	jalr	x0,0(x1)

000027bc <_fclose_r>:
    27bc:	ff010113          	addi	x2,x2,-16
    27c0:	00112623          	sw	x1,12(x2)
    27c4:	00812423          	sw	x8,8(x2)
    27c8:	00912223          	sw	x9,4(x2)
    27cc:	01212023          	sw	x18,0(x2)
    27d0:	02059263          	bne	x11,x0,27f4 <_fclose_r+0x38>
    27d4:	00000913          	addi	x18,x0,0
    27d8:	00c12083          	lw	x1,12(x2)
    27dc:	00812403          	lw	x8,8(x2)
    27e0:	00412483          	lw	x9,4(x2)
    27e4:	00090513          	addi	x10,x18,0
    27e8:	00012903          	lw	x18,0(x2)
    27ec:	01010113          	addi	x2,x2,16
    27f0:	00008067          	jalr	x0,0(x1)
    27f4:	00050493          	addi	x9,x10,0
    27f8:	00058413          	addi	x8,x11,0
    27fc:	00050863          	beq	x10,x0,280c <_fclose_r+0x50>
    2800:	01852783          	lw	x15,24(x10)
    2804:	00079463          	bne	x15,x0,280c <_fclose_r+0x50>
    2808:	b2dfe0ef          	jal	x1,1334 <__sinit>
    280c:	000037b7          	lui	x15,0x3
    2810:	43478793          	addi	x15,x15,1076 # 3434 <__sf_fake_stdin>
    2814:	08f41a63          	bne	x8,x15,28a8 <_fclose_r+0xec>
    2818:	0044a403          	lw	x8,4(x9)
    281c:	00c41783          	lh	x15,12(x8)
    2820:	fa078ae3          	beq	x15,x0,27d4 <_fclose_r+0x18>
    2824:	00040593          	addi	x11,x8,0
    2828:	00048513          	addi	x10,x9,0
    282c:	f34fe0ef          	jal	x1,f60 <__sflush_r>
    2830:	03042783          	lw	x15,48(x8)
    2834:	00050913          	addi	x18,x10,0
    2838:	00078c63          	beq	x15,x0,2850 <_fclose_r+0x94>
    283c:	02042583          	lw	x11,32(x8)
    2840:	00048513          	addi	x10,x9,0
    2844:	000780e7          	jalr	x1,0(x15)
    2848:	00055463          	bge	x10,x0,2850 <_fclose_r+0x94>
    284c:	fff00913          	addi	x18,x0,-1
    2850:	00c45783          	lhu	x15,12(x8)
    2854:	0807f793          	andi	x15,x15,128
    2858:	00078863          	beq	x15,x0,2868 <_fclose_r+0xac>
    285c:	01042583          	lw	x11,16(x8)
    2860:	00048513          	addi	x10,x9,0
    2864:	f75fe0ef          	jal	x1,17d8 <_free_r>
    2868:	03442583          	lw	x11,52(x8)
    286c:	00058c63          	beq	x11,x0,2884 <_fclose_r+0xc8>
    2870:	04440793          	addi	x15,x8,68
    2874:	00f58663          	beq	x11,x15,2880 <_fclose_r+0xc4>
    2878:	00048513          	addi	x10,x9,0
    287c:	f5dfe0ef          	jal	x1,17d8 <_free_r>
    2880:	02042a23          	sw	x0,52(x8)
    2884:	04842583          	lw	x11,72(x8)
    2888:	00058863          	beq	x11,x0,2898 <_fclose_r+0xdc>
    288c:	00048513          	addi	x10,x9,0
    2890:	f49fe0ef          	jal	x1,17d8 <_free_r>
    2894:	04042423          	sw	x0,72(x8)
    2898:	c35fe0ef          	jal	x1,14cc <__sfp_lock_acquire>
    289c:	00041623          	sh	x0,12(x8)
    28a0:	c31fe0ef          	jal	x1,14d0 <__sfp_lock_release>
    28a4:	f35ff06f          	jal	x0,27d8 <_fclose_r+0x1c>
    28a8:	000037b7          	lui	x15,0x3
    28ac:	41478793          	addi	x15,x15,1044 # 3414 <__sf_fake_stdout>
    28b0:	00f41663          	bne	x8,x15,28bc <_fclose_r+0x100>
    28b4:	0084a403          	lw	x8,8(x9)
    28b8:	f65ff06f          	jal	x0,281c <_fclose_r+0x60>
    28bc:	000037b7          	lui	x15,0x3
    28c0:	3f478793          	addi	x15,x15,1012 # 33f4 <__sf_fake_stderr>
    28c4:	f4f41ce3          	bne	x8,x15,281c <_fclose_r+0x60>
    28c8:	00c4a403          	lw	x8,12(x9)
    28cc:	f51ff06f          	jal	x0,281c <_fclose_r+0x60>

000028d0 <fclose>:
    28d0:	00050593          	addi	x11,x10,0
    28d4:	8f81a503          	lw	x10,-1800(x3) # 35e0 <_impure_ptr>
    28d8:	ee5ff06f          	jal	x0,27bc <_fclose_r>

000028dc <_fstat_r>:
    28dc:	ff010113          	addi	x2,x2,-16
    28e0:	00812423          	sw	x8,8(x2)
    28e4:	00912223          	sw	x9,4(x2)
    28e8:	00050413          	addi	x8,x10,0
    28ec:	00058513          	addi	x10,x11,0
    28f0:	00060593          	addi	x11,x12,0
    28f4:	00112623          	sw	x1,12(x2)
    28f8:	8e01ae23          	sw	x0,-1796(x3) # 35e4 <errno>
    28fc:	a17fd0ef          	jal	x1,312 <_fstat>
    2900:	fff00793          	addi	x15,x0,-1
    2904:	00f51863          	bne	x10,x15,2914 <_fstat_r+0x38>
    2908:	8fc1a783          	lw	x15,-1796(x3) # 35e4 <errno>
    290c:	00078463          	beq	x15,x0,2914 <_fstat_r+0x38>
    2910:	00f42023          	sw	x15,0(x8)
    2914:	00c12083          	lw	x1,12(x2)
    2918:	00812403          	lw	x8,8(x2)
    291c:	00412483          	lw	x9,4(x2)
    2920:	01010113          	addi	x2,x2,16
    2924:	00008067          	jalr	x0,0(x1)

00002928 <__sfvwrite_r>:
    2928:	00862783          	lw	x15,8(x12)
    292c:	00079863          	bne	x15,x0,293c <__sfvwrite_r+0x14>
    2930:	00000793          	addi	x15,x0,0
    2934:	00078513          	addi	x10,x15,0
    2938:	00008067          	jalr	x0,0(x1)
    293c:	00c5d783          	lhu	x15,12(x11)
    2940:	fc010113          	addi	x2,x2,-64
    2944:	02812c23          	sw	x8,56(x2)
    2948:	03312623          	sw	x19,44(x2)
    294c:	03512223          	sw	x21,36(x2)
    2950:	02112e23          	sw	x1,60(x2)
    2954:	02912a23          	sw	x9,52(x2)
    2958:	03212823          	sw	x18,48(x2)
    295c:	03412423          	sw	x20,40(x2)
    2960:	03612023          	sw	x22,32(x2)
    2964:	01712e23          	sw	x23,28(x2)
    2968:	01812c23          	sw	x24,24(x2)
    296c:	01912a23          	sw	x25,20(x2)
    2970:	01a12823          	sw	x26,16(x2)
    2974:	01b12623          	sw	x27,12(x2)
    2978:	0087f793          	andi	x15,x15,8
    297c:	00050993          	addi	x19,x10,0
    2980:	00058413          	addi	x8,x11,0
    2984:	00060a93          	addi	x21,x12,0
    2988:	0c078263          	beq	x15,x0,2a4c <__sfvwrite_r+0x124>
    298c:	0105a783          	lw	x15,16(x11)
    2990:	0a078e63          	beq	x15,x0,2a4c <__sfvwrite_r+0x124>
    2994:	00c45783          	lhu	x15,12(x8)
    2998:	000aaa03          	lw	x20,0(x21)
    299c:	0027f713          	andi	x14,x15,2
    29a0:	14071a63          	bne	x14,x0,2af4 <__sfvwrite_r+0x1cc>
    29a4:	0017f793          	andi	x15,x15,1
    29a8:	1e078a63          	beq	x15,x0,2b9c <__sfvwrite_r+0x274>
    29ac:	00000b93          	addi	x23,x0,0
    29b0:	00000513          	addi	x10,x0,0
    29b4:	00000b13          	addi	x22,x0,0
    29b8:	00000913          	addi	x18,x0,0
    29bc:	34090063          	beq	x18,x0,2cfc <__sfvwrite_r+0x3d4>
    29c0:	34050863          	beq	x10,x0,2d10 <__sfvwrite_r+0x3e8>
    29c4:	000b8c13          	addi	x24,x23,0
    29c8:	01797463          	bgeu	x18,x23,29d0 <__sfvwrite_r+0xa8>
    29cc:	00090c13          	addi	x24,x18,0
    29d0:	00042503          	lw	x10,0(x8)
    29d4:	01042783          	lw	x15,16(x8)
    29d8:	00842483          	lw	x9,8(x8)
    29dc:	01442683          	lw	x13,20(x8)
    29e0:	34a7fa63          	bgeu	x15,x10,2d34 <__sfvwrite_r+0x40c>
    29e4:	00d484b3          	add	x9,x9,x13
    29e8:	3584d663          	bge	x9,x24,2d34 <__sfvwrite_r+0x40c>
    29ec:	000b0593          	addi	x11,x22,0
    29f0:	00048613          	addi	x12,x9,0
    29f4:	470000ef          	jal	x1,2e64 <memmove>
    29f8:	00042783          	lw	x15,0(x8)
    29fc:	00040593          	addi	x11,x8,0
    2a00:	00098513          	addi	x10,x19,0
    2a04:	009787b3          	add	x15,x15,x9
    2a08:	00f42023          	sw	x15,0(x8)
    2a0c:	f50fe0ef          	jal	x1,115c <_fflush_r>
    2a10:	16051c63          	bne	x10,x0,2b88 <__sfvwrite_r+0x260>
    2a14:	409b8bb3          	sub	x23,x23,x9
    2a18:	00100513          	addi	x10,x0,1
    2a1c:	000b9a63          	bne	x23,x0,2a30 <__sfvwrite_r+0x108>
    2a20:	00040593          	addi	x11,x8,0
    2a24:	00098513          	addi	x10,x19,0
    2a28:	f34fe0ef          	jal	x1,115c <_fflush_r>
    2a2c:	14051e63          	bne	x10,x0,2b88 <__sfvwrite_r+0x260>
    2a30:	008aa783          	lw	x15,8(x21)
    2a34:	009b0b33          	add	x22,x22,x9
    2a38:	40990933          	sub	x18,x18,x9
    2a3c:	409787b3          	sub	x15,x15,x9
    2a40:	00faa423          	sw	x15,8(x21)
    2a44:	f6079ce3          	bne	x15,x0,29bc <__sfvwrite_r+0x94>
    2a48:	0680006f          	jal	x0,2ab0 <__sfvwrite_r+0x188>
    2a4c:	00040593          	addi	x11,x8,0
    2a50:	00098513          	addi	x10,x19,0
    2a54:	9d0fe0ef          	jal	x1,c24 <__swsetup_r>
    2a58:	fff00793          	addi	x15,x0,-1
    2a5c:	f2050ce3          	beq	x10,x0,2994 <__sfvwrite_r+0x6c>
    2a60:	0540006f          	jal	x0,2ab4 <__sfvwrite_r+0x18c>
    2a64:	000a2903          	lw	x18,0(x20)
    2a68:	004a2483          	lw	x9,4(x20)
    2a6c:	008a0a13          	addi	x20,x20,8
    2a70:	02842783          	lw	x15,40(x8)
    2a74:	02042583          	lw	x11,32(x8)
    2a78:	fe0486e3          	beq	x9,x0,2a64 <__sfvwrite_r+0x13c>
    2a7c:	00048693          	addi	x13,x9,0
    2a80:	009b7463          	bgeu	x22,x9,2a88 <__sfvwrite_r+0x160>
    2a84:	000b0693          	addi	x13,x22,0
    2a88:	00090613          	addi	x12,x18,0
    2a8c:	00098513          	addi	x10,x19,0
    2a90:	000780e7          	jalr	x1,0(x15)
    2a94:	0ea05a63          	bge	x0,x10,2b88 <__sfvwrite_r+0x260>
    2a98:	008aa783          	lw	x15,8(x21)
    2a9c:	00a90933          	add	x18,x18,x10
    2aa0:	40a484b3          	sub	x9,x9,x10
    2aa4:	40a787b3          	sub	x15,x15,x10
    2aa8:	00faa423          	sw	x15,8(x21)
    2aac:	fc0792e3          	bne	x15,x0,2a70 <__sfvwrite_r+0x148>
    2ab0:	00000793          	addi	x15,x0,0
    2ab4:	03c12083          	lw	x1,60(x2)
    2ab8:	03812403          	lw	x8,56(x2)
    2abc:	03412483          	lw	x9,52(x2)
    2ac0:	03012903          	lw	x18,48(x2)
    2ac4:	02c12983          	lw	x19,44(x2)
    2ac8:	02812a03          	lw	x20,40(x2)
    2acc:	02412a83          	lw	x21,36(x2)
    2ad0:	02012b03          	lw	x22,32(x2)
    2ad4:	01c12b83          	lw	x23,28(x2)
    2ad8:	01812c03          	lw	x24,24(x2)
    2adc:	01412c83          	lw	x25,20(x2)
    2ae0:	01012d03          	lw	x26,16(x2)
    2ae4:	00c12d83          	lw	x27,12(x2)
    2ae8:	00078513          	addi	x10,x15,0
    2aec:	04010113          	addi	x2,x2,64
    2af0:	00008067          	jalr	x0,0(x1)
    2af4:	80000b37          	lui	x22,0x80000
    2af8:	00000913          	addi	x18,x0,0
    2afc:	00000493          	addi	x9,x0,0
    2b00:	c00b4b13          	xori	x22,x22,-1024
    2b04:	f6dff06f          	jal	x0,2a70 <__sfvwrite_r+0x148>
    2b08:	000a2b03          	lw	x22,0(x20)
    2b0c:	004a2903          	lw	x18,4(x20)
    2b10:	008a0a13          	addi	x20,x20,8
    2b14:	00c41703          	lh	x14,12(x8)
    2b18:	00042503          	lw	x10,0(x8)
    2b1c:	00842d83          	lw	x27,8(x8)
    2b20:	fe0904e3          	beq	x18,x0,2b08 <__sfvwrite_r+0x1e0>
    2b24:	01071793          	slli	x15,x14,0x10
    2b28:	20077713          	andi	x14,x14,512
    2b2c:	0107d793          	srli	x15,x15,0x10
    2b30:	14070063          	beq	x14,x0,2c70 <__sfvwrite_r+0x348>
    2b34:	0bb96e63          	bltu	x18,x27,2bf0 <__sfvwrite_r+0x2c8>
    2b38:	4807f713          	andi	x14,x15,1152
    2b3c:	0a070a63          	beq	x14,x0,2bf0 <__sfvwrite_r+0x2c8>
    2b40:	01442483          	lw	x9,20(x8)
    2b44:	01042583          	lw	x11,16(x8)
    2b48:	029c04b3          	mul	x9,x24,x9
    2b4c:	40b50d33          	sub	x26,x10,x11
    2b50:	001d0713          	addi	x14,x26,1
    2b54:	01270733          	add	x14,x14,x18
    2b58:	0394c4b3          	div	x9,x9,x25
    2b5c:	00e4f463          	bgeu	x9,x14,2b64 <__sfvwrite_r+0x23c>
    2b60:	00070493          	addi	x9,x14,0 # 1000 <__sflush_r+0xa0>
    2b64:	4007f793          	andi	x15,x15,1024
    2b68:	0c078c63          	beq	x15,x0,2c40 <__sfvwrite_r+0x318>
    2b6c:	00048593          	addi	x11,x9,0
    2b70:	00098513          	addi	x10,x19,0
    2b74:	dddfe0ef          	jal	x1,1950 <_malloc_r>
    2b78:	00050d93          	addi	x27,x10,0
    2b7c:	02051e63          	bne	x10,x0,2bb8 <__sfvwrite_r+0x290>
    2b80:	00c00793          	addi	x15,x0,12
    2b84:	00f9a023          	sw	x15,0(x19)
    2b88:	00c45783          	lhu	x15,12(x8)
    2b8c:	0407e793          	ori	x15,x15,64
    2b90:	00f41623          	sh	x15,12(x8)
    2b94:	fff00793          	addi	x15,x0,-1
    2b98:	f1dff06f          	jal	x0,2ab4 <__sfvwrite_r+0x18c>
    2b9c:	80000bb7          	lui	x23,0x80000
    2ba0:	00000b13          	addi	x22,x0,0
    2ba4:	00000913          	addi	x18,x0,0
    2ba8:	fffbcb93          	xori	x23,x23,-1
    2bac:	00300c13          	addi	x24,x0,3
    2bb0:	00200c93          	addi	x25,x0,2
    2bb4:	f61ff06f          	jal	x0,2b14 <__sfvwrite_r+0x1ec>
    2bb8:	01042583          	lw	x11,16(x8)
    2bbc:	000d0613          	addi	x12,x26,0
    2bc0:	280000ef          	jal	x1,2e40 <memcpy>
    2bc4:	00c45783          	lhu	x15,12(x8)
    2bc8:	b7f7f793          	andi	x15,x15,-1153
    2bcc:	0807e793          	ori	x15,x15,128
    2bd0:	00f41623          	sh	x15,12(x8)
    2bd4:	01b42823          	sw	x27,16(x8)
    2bd8:	00942a23          	sw	x9,20(x8)
    2bdc:	01ad8db3          	add	x27,x27,x26
    2be0:	41a484b3          	sub	x9,x9,x26
    2be4:	01b42023          	sw	x27,0(x8)
    2be8:	00942423          	sw	x9,8(x8)
    2bec:	00090d93          	addi	x27,x18,0
    2bf0:	00090493          	addi	x9,x18,0
    2bf4:	01b97463          	bgeu	x18,x27,2bfc <__sfvwrite_r+0x2d4>
    2bf8:	00090d93          	addi	x27,x18,0
    2bfc:	00042503          	lw	x10,0(x8)
    2c00:	000d8613          	addi	x12,x27,0
    2c04:	000b0593          	addi	x11,x22,0 # 80000000 <__heap_end+0x7fc00000>
    2c08:	25c000ef          	jal	x1,2e64 <memmove>
    2c0c:	00842783          	lw	x15,8(x8)
    2c10:	41b787b3          	sub	x15,x15,x27
    2c14:	00f42423          	sw	x15,8(x8)
    2c18:	00042783          	lw	x15,0(x8)
    2c1c:	01b787b3          	add	x15,x15,x27
    2c20:	00f42023          	sw	x15,0(x8)
    2c24:	008aa783          	lw	x15,8(x21)
    2c28:	009b0b33          	add	x22,x22,x9
    2c2c:	40990933          	sub	x18,x18,x9
    2c30:	409787b3          	sub	x15,x15,x9
    2c34:	00faa423          	sw	x15,8(x21)
    2c38:	ec079ee3          	bne	x15,x0,2b14 <__sfvwrite_r+0x1ec>
    2c3c:	e75ff06f          	jal	x0,2ab0 <__sfvwrite_r+0x188>
    2c40:	00048613          	addi	x12,x9,0
    2c44:	00098513          	addi	x10,x19,0
    2c48:	260000ef          	jal	x1,2ea8 <_realloc_r>
    2c4c:	00050d93          	addi	x27,x10,0
    2c50:	f80512e3          	bne	x10,x0,2bd4 <__sfvwrite_r+0x2ac>
    2c54:	01042583          	lw	x11,16(x8)
    2c58:	00098513          	addi	x10,x19,0
    2c5c:	b7dfe0ef          	jal	x1,17d8 <_free_r>
    2c60:	00c45783          	lhu	x15,12(x8)
    2c64:	f7f7f793          	andi	x15,x15,-129
    2c68:	00f41623          	sh	x15,12(x8)
    2c6c:	f15ff06f          	jal	x0,2b80 <__sfvwrite_r+0x258>
    2c70:	01042783          	lw	x15,16(x8)
    2c74:	00a7e663          	bltu	x15,x10,2c80 <__sfvwrite_r+0x358>
    2c78:	01442683          	lw	x13,20(x8)
    2c7c:	04d97663          	bgeu	x18,x13,2cc8 <__sfvwrite_r+0x3a0>
    2c80:	000d8493          	addi	x9,x27,0
    2c84:	01b97463          	bgeu	x18,x27,2c8c <__sfvwrite_r+0x364>
    2c88:	00090493          	addi	x9,x18,0
    2c8c:	00048613          	addi	x12,x9,0
    2c90:	000b0593          	addi	x11,x22,0
    2c94:	1d0000ef          	jal	x1,2e64 <memmove>
    2c98:	00842783          	lw	x15,8(x8)
    2c9c:	00042703          	lw	x14,0(x8)
    2ca0:	409787b3          	sub	x15,x15,x9
    2ca4:	00970733          	add	x14,x14,x9
    2ca8:	00f42423          	sw	x15,8(x8)
    2cac:	00e42023          	sw	x14,0(x8)
    2cb0:	f6079ae3          	bne	x15,x0,2c24 <__sfvwrite_r+0x2fc>
    2cb4:	00040593          	addi	x11,x8,0
    2cb8:	00098513          	addi	x10,x19,0
    2cbc:	ca0fe0ef          	jal	x1,115c <_fflush_r>
    2cc0:	f60502e3          	beq	x10,x0,2c24 <__sfvwrite_r+0x2fc>
    2cc4:	ec5ff06f          	jal	x0,2b88 <__sfvwrite_r+0x260>
    2cc8:	00090793          	addi	x15,x18,0
    2ccc:	012bf463          	bgeu	x23,x18,2cd4 <__sfvwrite_r+0x3ac>
    2cd0:	000b8793          	addi	x15,x23,0 # 80000000 <__heap_end+0x7fc00000>
    2cd4:	02d7c7b3          	div	x15,x15,x13
    2cd8:	02842703          	lw	x14,40(x8)
    2cdc:	02042583          	lw	x11,32(x8)
    2ce0:	000b0613          	addi	x12,x22,0
    2ce4:	00098513          	addi	x10,x19,0
    2ce8:	02d786b3          	mul	x13,x15,x13
    2cec:	000700e7          	jalr	x1,0(x14)
    2cf0:	00050493          	addi	x9,x10,0
    2cf4:	f2a048e3          	blt	x0,x10,2c24 <__sfvwrite_r+0x2fc>
    2cf8:	e91ff06f          	jal	x0,2b88 <__sfvwrite_r+0x260>
    2cfc:	004a2903          	lw	x18,4(x20)
    2d00:	000a0793          	addi	x15,x20,0
    2d04:	008a0a13          	addi	x20,x20,8
    2d08:	fe090ae3          	beq	x18,x0,2cfc <__sfvwrite_r+0x3d4>
    2d0c:	0007ab03          	lw	x22,0(x15)
    2d10:	00090613          	addi	x12,x18,0
    2d14:	00a00593          	addi	x11,x0,10
    2d18:	000b0513          	addi	x10,x22,0
    2d1c:	100000ef          	jal	x1,2e1c <memchr>
    2d20:	00190b93          	addi	x23,x18,1
    2d24:	ca0500e3          	beq	x10,x0,29c4 <__sfvwrite_r+0x9c>
    2d28:	00150513          	addi	x10,x10,1
    2d2c:	41650bb3          	sub	x23,x10,x22
    2d30:	c95ff06f          	jal	x0,29c4 <__sfvwrite_r+0x9c>
    2d34:	02dc4263          	blt	x24,x13,2d58 <__sfvwrite_r+0x430>
    2d38:	02842783          	lw	x15,40(x8)
    2d3c:	02042583          	lw	x11,32(x8)
    2d40:	000b0613          	addi	x12,x22,0
    2d44:	00098513          	addi	x10,x19,0
    2d48:	000780e7          	jalr	x1,0(x15)
    2d4c:	00050493          	addi	x9,x10,0
    2d50:	cca042e3          	blt	x0,x10,2a14 <__sfvwrite_r+0xec>
    2d54:	e35ff06f          	jal	x0,2b88 <__sfvwrite_r+0x260>
    2d58:	000c0613          	addi	x12,x24,0
    2d5c:	000b0593          	addi	x11,x22,0
    2d60:	104000ef          	jal	x1,2e64 <memmove>
    2d64:	00842783          	lw	x15,8(x8)
    2d68:	000c0493          	addi	x9,x24,0
    2d6c:	418787b3          	sub	x15,x15,x24
    2d70:	00f42423          	sw	x15,8(x8)
    2d74:	00042783          	lw	x15,0(x8)
    2d78:	018787b3          	add	x15,x15,x24
    2d7c:	00f42023          	sw	x15,0(x8)
    2d80:	c95ff06f          	jal	x0,2a14 <__sfvwrite_r+0xec>

00002d84 <_isatty_r>:
    2d84:	ff010113          	addi	x2,x2,-16
    2d88:	00812423          	sw	x8,8(x2)
    2d8c:	00912223          	sw	x9,4(x2)
    2d90:	00050413          	addi	x8,x10,0
    2d94:	00058513          	addi	x10,x11,0
    2d98:	00112623          	sw	x1,12(x2)
    2d9c:	8e01ae23          	sw	x0,-1796(x3) # 35e4 <errno>
    2da0:	daefd0ef          	jal	x1,34e <_isatty>
    2da4:	fff00793          	addi	x15,x0,-1
    2da8:	00f51863          	bne	x10,x15,2db8 <_isatty_r+0x34>
    2dac:	8fc1a783          	lw	x15,-1796(x3) # 35e4 <errno>
    2db0:	00078463          	beq	x15,x0,2db8 <_isatty_r+0x34>
    2db4:	00f42023          	sw	x15,0(x8)
    2db8:	00c12083          	lw	x1,12(x2)
    2dbc:	00812403          	lw	x8,8(x2)
    2dc0:	00412483          	lw	x9,4(x2)
    2dc4:	01010113          	addi	x2,x2,16
    2dc8:	00008067          	jalr	x0,0(x1)

00002dcc <_lseek_r>:
    2dcc:	ff010113          	addi	x2,x2,-16
    2dd0:	00812423          	sw	x8,8(x2)
    2dd4:	00912223          	sw	x9,4(x2)
    2dd8:	00050413          	addi	x8,x10,0
    2ddc:	00058513          	addi	x10,x11,0
    2de0:	00060593          	addi	x11,x12,0
    2de4:	00068613          	addi	x12,x13,0
    2de8:	00112623          	sw	x1,12(x2)
    2dec:	8e01ae23          	sw	x0,-1796(x3) # 35e4 <errno>
    2df0:	d7afd0ef          	jal	x1,36a <_lseek>
    2df4:	fff00793          	addi	x15,x0,-1
    2df8:	00f51863          	bne	x10,x15,2e08 <_lseek_r+0x3c>
    2dfc:	8fc1a783          	lw	x15,-1796(x3) # 35e4 <errno>
    2e00:	00078463          	beq	x15,x0,2e08 <_lseek_r+0x3c>
    2e04:	00f42023          	sw	x15,0(x8)
    2e08:	00c12083          	lw	x1,12(x2)
    2e0c:	00812403          	lw	x8,8(x2)
    2e10:	00412483          	lw	x9,4(x2)
    2e14:	01010113          	addi	x2,x2,16
    2e18:	00008067          	jalr	x0,0(x1)

00002e1c <memchr>:
    2e1c:	0ff5f593          	andi	x11,x11,255
    2e20:	00c50633          	add	x12,x10,x12
    2e24:	00c51663          	bne	x10,x12,2e30 <memchr+0x14>
    2e28:	00000513          	addi	x10,x0,0
    2e2c:	00008067          	jalr	x0,0(x1)
    2e30:	00054783          	lbu	x15,0(x10)
    2e34:	feb78ce3          	beq	x15,x11,2e2c <memchr+0x10>
    2e38:	00150513          	addi	x10,x10,1
    2e3c:	fe9ff06f          	jal	x0,2e24 <memchr+0x8>

00002e40 <memcpy>:
    2e40:	00050313          	addi	x6,x10,0
    2e44:	00060e63          	beq	x12,x0,2e60 <memcpy+0x20>
    2e48:	00058383          	lb	x7,0(x11)
    2e4c:	00730023          	sb	x7,0(x6)
    2e50:	fff60613          	addi	x12,x12,-1
    2e54:	00130313          	addi	x6,x6,1
    2e58:	00158593          	addi	x11,x11,1
    2e5c:	fe0616e3          	bne	x12,x0,2e48 <memcpy+0x8>
    2e60:	00008067          	jalr	x0,0(x1)

00002e64 <memmove>:
    2e64:	02060c63          	beq	x12,x0,2e9c <memmove+0x38>
    2e68:	00050313          	addi	x6,x10,0
    2e6c:	00100693          	addi	x13,x0,1
    2e70:	00b56a63          	bltu	x10,x11,2e84 <memmove+0x20>
    2e74:	fff00693          	addi	x13,x0,-1
    2e78:	fff60713          	addi	x14,x12,-1
    2e7c:	00e30333          	add	x6,x6,x14
    2e80:	00e585b3          	add	x11,x11,x14
    2e84:	00058383          	lb	x7,0(x11)
    2e88:	00730023          	sb	x7,0(x6)
    2e8c:	fff60613          	addi	x12,x12,-1
    2e90:	00d30333          	add	x6,x6,x13
    2e94:	00d585b3          	add	x11,x11,x13
    2e98:	fe0616e3          	bne	x12,x0,2e84 <memmove+0x20>
    2e9c:	00008067          	jalr	x0,0(x1)

00002ea0 <__malloc_lock>:
    2ea0:	00008067          	jalr	x0,0(x1)

00002ea4 <__malloc_unlock>:
    2ea4:	00008067          	jalr	x0,0(x1)

00002ea8 <_realloc_r>:
    2ea8:	fe010113          	addi	x2,x2,-32
    2eac:	00812c23          	sw	x8,24(x2)
    2eb0:	00112e23          	sw	x1,28(x2)
    2eb4:	00912a23          	sw	x9,20(x2)
    2eb8:	01212823          	sw	x18,16(x2)
    2ebc:	01312623          	sw	x19,12(x2)
    2ec0:	01412423          	sw	x20,8(x2)
    2ec4:	00060413          	addi	x8,x12,0
    2ec8:	02059463          	bne	x11,x0,2ef0 <_realloc_r+0x48>
    2ecc:	01812403          	lw	x8,24(x2)
    2ed0:	01c12083          	lw	x1,28(x2)
    2ed4:	01412483          	lw	x9,20(x2)
    2ed8:	01012903          	lw	x18,16(x2)
    2edc:	00c12983          	lw	x19,12(x2)
    2ee0:	00812a03          	lw	x20,8(x2)
    2ee4:	00060593          	addi	x11,x12,0
    2ee8:	02010113          	addi	x2,x2,32
    2eec:	a65fe06f          	jal	x0,1950 <_malloc_r>
    2ef0:	02061863          	bne	x12,x0,2f20 <_realloc_r+0x78>
    2ef4:	8e5fe0ef          	jal	x1,17d8 <_free_r>
    2ef8:	00000493          	addi	x9,x0,0
    2efc:	01c12083          	lw	x1,28(x2)
    2f00:	01812403          	lw	x8,24(x2)
    2f04:	01012903          	lw	x18,16(x2)
    2f08:	00c12983          	lw	x19,12(x2)
    2f0c:	00812a03          	lw	x20,8(x2)
    2f10:	00048513          	addi	x10,x9,0
    2f14:	01412483          	lw	x9,20(x2)
    2f18:	02010113          	addi	x2,x2,32
    2f1c:	00008067          	jalr	x0,0(x1)
    2f20:	00050a13          	addi	x20,x10,0
    2f24:	00058913          	addi	x18,x11,0
    2f28:	0a4000ef          	jal	x1,2fcc <_malloc_usable_size_r>
    2f2c:	00050993          	addi	x19,x10,0
    2f30:	00856863          	bltu	x10,x8,2f40 <_realloc_r+0x98>
    2f34:	00155793          	srli	x15,x10,0x1
    2f38:	00090493          	addi	x9,x18,0
    2f3c:	fc87e0e3          	bltu	x15,x8,2efc <_realloc_r+0x54>
    2f40:	00040593          	addi	x11,x8,0
    2f44:	000a0513          	addi	x10,x20,0
    2f48:	a09fe0ef          	jal	x1,1950 <_malloc_r>
    2f4c:	00050493          	addi	x9,x10,0
    2f50:	fa0506e3          	beq	x10,x0,2efc <_realloc_r+0x54>
    2f54:	00040613          	addi	x12,x8,0
    2f58:	0089f463          	bgeu	x19,x8,2f60 <_realloc_r+0xb8>
    2f5c:	00098613          	addi	x12,x19,0
    2f60:	00090593          	addi	x11,x18,0
    2f64:	00048513          	addi	x10,x9,0
    2f68:	ed9ff0ef          	jal	x1,2e40 <memcpy>
    2f6c:	00090593          	addi	x11,x18,0
    2f70:	000a0513          	addi	x10,x20,0
    2f74:	865fe0ef          	jal	x1,17d8 <_free_r>
    2f78:	f85ff06f          	jal	x0,2efc <_realloc_r+0x54>

00002f7c <_read_r>:
    2f7c:	ff010113          	addi	x2,x2,-16
    2f80:	00812423          	sw	x8,8(x2)
    2f84:	00912223          	sw	x9,4(x2)
    2f88:	00050413          	addi	x8,x10,0
    2f8c:	00058513          	addi	x10,x11,0
    2f90:	00060593          	addi	x11,x12,0
    2f94:	00068613          	addi	x12,x13,0
    2f98:	00112623          	sw	x1,12(x2)
    2f9c:	8e01ae23          	sw	x0,-1796(x3) # 35e4 <errno>
    2fa0:	beafd0ef          	jal	x1,38a <_read>
    2fa4:	fff00793          	addi	x15,x0,-1
    2fa8:	00f51863          	bne	x10,x15,2fb8 <_read_r+0x3c>
    2fac:	8fc1a783          	lw	x15,-1796(x3) # 35e4 <errno>
    2fb0:	00078463          	beq	x15,x0,2fb8 <_read_r+0x3c>
    2fb4:	00f42023          	sw	x15,0(x8)
    2fb8:	00c12083          	lw	x1,12(x2)
    2fbc:	00812403          	lw	x8,8(x2)
    2fc0:	00412483          	lw	x9,4(x2)
    2fc4:	01010113          	addi	x2,x2,16
    2fc8:	00008067          	jalr	x0,0(x1)

00002fcc <_malloc_usable_size_r>:
    2fcc:	ffc5a783          	lw	x15,-4(x11)
    2fd0:	ffc78513          	addi	x10,x15,-4
    2fd4:	0007d863          	bge	x15,x0,2fe4 <_malloc_usable_size_r+0x18>
    2fd8:	00a585b3          	add	x11,x11,x10
    2fdc:	0005a783          	lw	x15,0(x11)
    2fe0:	00f50533          	add	x10,x10,x15
    2fe4:	00008067          	jalr	x0,0(x1)
